/*
 * test of mapping pipeline functions.
 * This will test map_retrieve, map_aural, map_visual, and map_association.
 * 
 * pipeline goals merely take the return result after execution and stashes it in
 * the parameter slot. Subsequent pipeline goals can use that value or overwrite it
 * 
 * map_aural and map_visual ignore the current pipeline value and merely specify
 * which slot is assigned to the result via : slotName = =value.
 * 
 * map_aural retrieves the current pipeline value and merely specifies which
 * slot is assigned to the result via : slotName = =value
 * 
 * map_association takes the current pipeline value, and uses it as a aural
 * spec for an association(current), the spec then defines which slot is assigned
 * to the result from the aural buffer.
 * 
 */
 namespace jasm.declarative.MapAural{

import jactr.declarative.*
import jactr.procedural.*
import jactr.retrieval.*
import jactr.imaginal.*
import jactr.visual.*
import jactr.aural.*
import jactr.meta.*
import jactr.goal.*

import jasm.declarative.Goal.*
import jasm.declarative.MapRetrieval.*

module "org.jactr.core.module.declarative.six.DefaultDeclarativeModule6" [
  "ActivationNoise"          : "0"
  "BaseLevelConstant"        : "0"
  "EnablePartialMatching"    : "false"
  "MaximumDifference"        : "-1"
  "MaximumSimilarity"        : "0"
  "MismatchPenalty"          : "1"
  "PermanentActivationNoise" : "0"]
module "org.jactr.core.module.procedural.six.DefaultProceduralModule6" [
  "DefaultProductionFiringTime" : "0.05"
  "ExpectedUtilityNoise"        : "0"
  "NumberOfProductionsFired"    : "0" ]
module "org.jactr.core.module.goal.six.DefaultGoalModule6" []
module "org.jactr.core.module.retrieval.six.DefaultRetrievalModule6" [
  "EnableIndexedAurals" : "false"
  "FINSTDurationTime"       : "3.0"
  "LatencyFactor"           : "1"
  "NumberOfFINSTs"          : "4"
  "AuralThreshold"      : "0" ]
module "org.jactr.core.module.meta.MetaModule"[]
module "org.jactr.modules.pm.aural.six.DefaultAuralModule6"[]
module "org.jactr.modules.pm.visual.six.DefaultVisualModule6"[]

/* 
 * common buffers
 */
buffers {
}



production br-FireRequestAural-map-param{
  goal{
    isa BufferRequest
    request   =  =currentSpec
    stage     =  request-request
    buffer    =  "aural"
    mapping   =  =mappingSpec
    parameter =  =parameter
    end-reached =  true
  }
  ?aural{
    state != busy
  }
  meta{
    =meta
  }
}{
  +aural{
    =meta
  }
  goal{
    stage = actual-request
  }
  +meta{
    =mappingSpec
  }
}

production br-FireRequestAural-map-no-param{
  goal{
    isa BufferRequest
    request   =  =currentSpec
    stage     =  request-request
    buffer    =  "aural"
    mapping   =  =mappingSpec
    parameter =  null
    end-reached =  true
  }
  ?aural{
    state != busy
  }
  meta{
    =meta
  }
}{
  +aural{
    =meta
  }
  goal{
    stage = actual-request
  }
  +meta{
    =mappingSpec
  }
}

production br-FireRequestAural-no-map-param{
  goal{
    isa BufferRequest
    request   =  =currentSpec
    stage     =  request-request
    buffer    =  "aural"
    parameter =  =parameter
    mapping   =  null
    end-reached =  true
  }
  ?aural{
    state != busy
  }
  meta{
    =meta
  }
}{
  +aural{
    =meta
  }
  goal{
    stage = actual-request
  }
}

production br-FireRequestAural-no-map-no-param{
  goal{
    isa BufferRequest
    request   =  =currentSpec
    stage     =  request-request
    buffer    =  "aural"
    parameter =  null
    mapping   =  null
    end-reached =  true
  }
  ?aural{
    state != busy
  }
  meta{
    =meta
  }
}{
  +aural{
    =meta
  }
  goal{
    stage = actual-request
  }
}

/*
 * buffer-request-requested-retrival-null-parameter and -parameter
 * are required in order to bind =parameter where necessary
 */
production br-RequestedAural-finish-no-param{
  goal{
    isa BufferRequest
    request   =  =currentSpec
    stage     =  actual-request
    buffer    =  "aural"
    parameter =  null
    mapping   != null
  }
  meta{
    =meta     //this is the mapping
  }
  aural{
    =meta     
  }
}{
  -aural{}
  -meta{}
  goal{
    stage  = completed
    return = =value
  }
}

production br-RequestedAural-finish-param{
  goal{
    isa BufferRequest
    request   =  =currentSpec
    stage     =  actual-request
    buffer    =  "aural"
    parameter =  =parameter
    mapping   != null
  }
  meta{
    =meta
  }
  aural{
    =meta
  }
}{
  -aural{}
  -meta{}
  goal{
    stage  = completed
    return = =value
  }
}


production br-RequestedAural-finish-no-map-no-param{
  goal{
    isa BufferRequest
    request   =  =currentSpec
    stage     =  actual-request
    buffer    =  "aural"
    parameter =  null
    mapping   =  null
  }
  meta{
    =meta
  }
  aural{
    =aural
  }
}{
  -aural{}
  -meta{}
  goal{
    stage  = completed
    return = =aural
  }
}

production br-RequestedAural-finish-no-map-param{
  goal{
    isa BufferRequest
    request   =  =currentSpec
    stage     =  actual-request
    buffer    =  "aural"
    parameter =  =parameter
    mapping   =  null
  }
  meta{
    =meta
  }
  aural{
    =aural
  }
}{
  -aural{}
  -meta{}
  goal{
    stage  = completed
    return = =aural
  }
}


production br-RequestedAural-fail{
  goal{
    isa BufferRequest
    request =  =currentSpec
    stage   =  actual-request
    buffer  =  "aural"
  }
  meta{
    =meta
  }
  ?aural{
    state =  error
  }
}{
  -meta{}
  goal{
    stage = build-handler
  }
}




}
