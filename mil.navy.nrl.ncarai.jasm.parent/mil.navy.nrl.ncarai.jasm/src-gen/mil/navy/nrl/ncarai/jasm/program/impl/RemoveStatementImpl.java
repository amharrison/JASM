/**
 * generated by Xtext 2.20.0
 */
package mil.navy.nrl.ncarai.jasm.program.impl;

import java.util.Collection;

import mil.navy.nrl.ncarai.jasm.program.ProgramPackage;
import mil.navy.nrl.ncarai.jasm.program.RemoveStatement;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.util.EObjectResolvingEList;

import org.jactr.io2.jactr.modelFragment.Buffer;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Remove Statement</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link mil.navy.nrl.ncarai.jasm.program.impl.RemoveStatementImpl#getBuffers <em>Buffers</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RemoveStatementImpl extends InstructionImpl implements RemoveStatement
{
  /**
   * The cached value of the '{@link #getBuffers() <em>Buffers</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBuffers()
   * @generated
   * @ordered
   */
  protected EList<Buffer> buffers;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RemoveStatementImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ProgramPackage.Literals.REMOVE_STATEMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Buffer> getBuffers()
  {
    if (buffers == null)
    {
      buffers = new EObjectResolvingEList<Buffer>(Buffer.class, this, ProgramPackage.REMOVE_STATEMENT__BUFFERS);
    }
    return buffers;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ProgramPackage.REMOVE_STATEMENT__BUFFERS:
        return getBuffers();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ProgramPackage.REMOVE_STATEMENT__BUFFERS:
        getBuffers().clear();
        getBuffers().addAll((Collection<? extends Buffer>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ProgramPackage.REMOVE_STATEMENT__BUFFERS:
        getBuffers().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ProgramPackage.REMOVE_STATEMENT__BUFFERS:
        return buffers != null && !buffers.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //RemoveStatementImpl
