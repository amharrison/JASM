/**
 * generated by Xtext 2.20.0
 */
package mil.navy.nrl.ncarai.jasm.program.impl;

import mil.navy.nrl.ncarai.jasm.program.Bindings;
import mil.navy.nrl.ncarai.jasm.program.Handler;
import mil.navy.nrl.ncarai.jasm.program.Mapping;
import mil.navy.nrl.ncarai.jasm.program.ProgramPackage;
import mil.navy.nrl.ncarai.jasm.program.RequestStatement;
import mil.navy.nrl.ncarai.jasm.program.VariableReference;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.jactr.io2.jactr.modelFragment.Buffer;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Request Statement</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link mil.navy.nrl.ncarai.jasm.program.impl.RequestStatementImpl#isForced <em>Forced</em>}</li>
 *   <li>{@link mil.navy.nrl.ncarai.jasm.program.impl.RequestStatementImpl#getBuffer <em>Buffer</em>}</li>
 *   <li>{@link mil.navy.nrl.ncarai.jasm.program.impl.RequestStatementImpl#getPatternReference <em>Pattern Reference</em>}</li>
 *   <li>{@link mil.navy.nrl.ncarai.jasm.program.impl.RequestStatementImpl#getBindings <em>Bindings</em>}</li>
 *   <li>{@link mil.navy.nrl.ncarai.jasm.program.impl.RequestStatementImpl#getCast <em>Cast</em>}</li>
 *   <li>{@link mil.navy.nrl.ncarai.jasm.program.impl.RequestStatementImpl#getMapping <em>Mapping</em>}</li>
 *   <li>{@link mil.navy.nrl.ncarai.jasm.program.impl.RequestStatementImpl#getHandler <em>Handler</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RequestStatementImpl extends InstructionImpl implements RequestStatement
{
  /**
   * The default value of the '{@link #isForced() <em>Forced</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isForced()
   * @generated
   * @ordered
   */
  protected static final boolean FORCED_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isForced() <em>Forced</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isForced()
   * @generated
   * @ordered
   */
  protected boolean forced = FORCED_EDEFAULT;

  /**
   * The cached value of the '{@link #getBuffer() <em>Buffer</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBuffer()
   * @generated
   * @ordered
   */
  protected Buffer buffer;

  /**
   * The cached value of the '{@link #getPatternReference() <em>Pattern Reference</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPatternReference()
   * @generated
   * @ordered
   */
  protected VariableReference patternReference;

  /**
   * The cached value of the '{@link #getBindings() <em>Bindings</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBindings()
   * @generated
   * @ordered
   */
  protected Bindings bindings;

  /**
   * The default value of the '{@link #getCast() <em>Cast</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCast()
   * @generated
   * @ordered
   */
  protected static final String CAST_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCast() <em>Cast</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCast()
   * @generated
   * @ordered
   */
  protected String cast = CAST_EDEFAULT;

  /**
   * The cached value of the '{@link #getMapping() <em>Mapping</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMapping()
   * @generated
   * @ordered
   */
  protected Mapping mapping;

  /**
   * The cached value of the '{@link #getHandler() <em>Handler</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHandler()
   * @generated
   * @ordered
   */
  protected Handler handler;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RequestStatementImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ProgramPackage.Literals.REQUEST_STATEMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isForced()
  {
    return forced;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setForced(boolean newForced)
  {
    boolean oldForced = forced;
    forced = newForced;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ProgramPackage.REQUEST_STATEMENT__FORCED, oldForced, forced));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Buffer getBuffer()
  {
    if (buffer != null && buffer.eIsProxy())
    {
      InternalEObject oldBuffer = (InternalEObject)buffer;
      buffer = (Buffer)eResolveProxy(oldBuffer);
      if (buffer != oldBuffer)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, ProgramPackage.REQUEST_STATEMENT__BUFFER, oldBuffer, buffer));
      }
    }
    return buffer;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Buffer basicGetBuffer()
  {
    return buffer;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBuffer(Buffer newBuffer)
  {
    Buffer oldBuffer = buffer;
    buffer = newBuffer;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ProgramPackage.REQUEST_STATEMENT__BUFFER, oldBuffer, buffer));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public VariableReference getPatternReference()
  {
    return patternReference;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPatternReference(VariableReference newPatternReference, NotificationChain msgs)
  {
    VariableReference oldPatternReference = patternReference;
    patternReference = newPatternReference;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ProgramPackage.REQUEST_STATEMENT__PATTERN_REFERENCE, oldPatternReference, newPatternReference);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPatternReference(VariableReference newPatternReference)
  {
    if (newPatternReference != patternReference)
    {
      NotificationChain msgs = null;
      if (patternReference != null)
        msgs = ((InternalEObject)patternReference).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ProgramPackage.REQUEST_STATEMENT__PATTERN_REFERENCE, null, msgs);
      if (newPatternReference != null)
        msgs = ((InternalEObject)newPatternReference).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ProgramPackage.REQUEST_STATEMENT__PATTERN_REFERENCE, null, msgs);
      msgs = basicSetPatternReference(newPatternReference, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ProgramPackage.REQUEST_STATEMENT__PATTERN_REFERENCE, newPatternReference, newPatternReference));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Bindings getBindings()
  {
    return bindings;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetBindings(Bindings newBindings, NotificationChain msgs)
  {
    Bindings oldBindings = bindings;
    bindings = newBindings;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ProgramPackage.REQUEST_STATEMENT__BINDINGS, oldBindings, newBindings);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBindings(Bindings newBindings)
  {
    if (newBindings != bindings)
    {
      NotificationChain msgs = null;
      if (bindings != null)
        msgs = ((InternalEObject)bindings).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ProgramPackage.REQUEST_STATEMENT__BINDINGS, null, msgs);
      if (newBindings != null)
        msgs = ((InternalEObject)newBindings).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ProgramPackage.REQUEST_STATEMENT__BINDINGS, null, msgs);
      msgs = basicSetBindings(newBindings, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ProgramPackage.REQUEST_STATEMENT__BINDINGS, newBindings, newBindings));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCast()
  {
    return cast;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCast(String newCast)
  {
    String oldCast = cast;
    cast = newCast;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ProgramPackage.REQUEST_STATEMENT__CAST, oldCast, cast));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Mapping getMapping()
  {
    return mapping;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMapping(Mapping newMapping, NotificationChain msgs)
  {
    Mapping oldMapping = mapping;
    mapping = newMapping;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ProgramPackage.REQUEST_STATEMENT__MAPPING, oldMapping, newMapping);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMapping(Mapping newMapping)
  {
    if (newMapping != mapping)
    {
      NotificationChain msgs = null;
      if (mapping != null)
        msgs = ((InternalEObject)mapping).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ProgramPackage.REQUEST_STATEMENT__MAPPING, null, msgs);
      if (newMapping != null)
        msgs = ((InternalEObject)newMapping).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ProgramPackage.REQUEST_STATEMENT__MAPPING, null, msgs);
      msgs = basicSetMapping(newMapping, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ProgramPackage.REQUEST_STATEMENT__MAPPING, newMapping, newMapping));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Handler getHandler()
  {
    return handler;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetHandler(Handler newHandler, NotificationChain msgs)
  {
    Handler oldHandler = handler;
    handler = newHandler;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ProgramPackage.REQUEST_STATEMENT__HANDLER, oldHandler, newHandler);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setHandler(Handler newHandler)
  {
    if (newHandler != handler)
    {
      NotificationChain msgs = null;
      if (handler != null)
        msgs = ((InternalEObject)handler).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ProgramPackage.REQUEST_STATEMENT__HANDLER, null, msgs);
      if (newHandler != null)
        msgs = ((InternalEObject)newHandler).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ProgramPackage.REQUEST_STATEMENT__HANDLER, null, msgs);
      msgs = basicSetHandler(newHandler, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ProgramPackage.REQUEST_STATEMENT__HANDLER, newHandler, newHandler));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ProgramPackage.REQUEST_STATEMENT__PATTERN_REFERENCE:
        return basicSetPatternReference(null, msgs);
      case ProgramPackage.REQUEST_STATEMENT__BINDINGS:
        return basicSetBindings(null, msgs);
      case ProgramPackage.REQUEST_STATEMENT__MAPPING:
        return basicSetMapping(null, msgs);
      case ProgramPackage.REQUEST_STATEMENT__HANDLER:
        return basicSetHandler(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ProgramPackage.REQUEST_STATEMENT__FORCED:
        return isForced();
      case ProgramPackage.REQUEST_STATEMENT__BUFFER:
        if (resolve) return getBuffer();
        return basicGetBuffer();
      case ProgramPackage.REQUEST_STATEMENT__PATTERN_REFERENCE:
        return getPatternReference();
      case ProgramPackage.REQUEST_STATEMENT__BINDINGS:
        return getBindings();
      case ProgramPackage.REQUEST_STATEMENT__CAST:
        return getCast();
      case ProgramPackage.REQUEST_STATEMENT__MAPPING:
        return getMapping();
      case ProgramPackage.REQUEST_STATEMENT__HANDLER:
        return getHandler();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ProgramPackage.REQUEST_STATEMENT__FORCED:
        setForced((Boolean)newValue);
        return;
      case ProgramPackage.REQUEST_STATEMENT__BUFFER:
        setBuffer((Buffer)newValue);
        return;
      case ProgramPackage.REQUEST_STATEMENT__PATTERN_REFERENCE:
        setPatternReference((VariableReference)newValue);
        return;
      case ProgramPackage.REQUEST_STATEMENT__BINDINGS:
        setBindings((Bindings)newValue);
        return;
      case ProgramPackage.REQUEST_STATEMENT__CAST:
        setCast((String)newValue);
        return;
      case ProgramPackage.REQUEST_STATEMENT__MAPPING:
        setMapping((Mapping)newValue);
        return;
      case ProgramPackage.REQUEST_STATEMENT__HANDLER:
        setHandler((Handler)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ProgramPackage.REQUEST_STATEMENT__FORCED:
        setForced(FORCED_EDEFAULT);
        return;
      case ProgramPackage.REQUEST_STATEMENT__BUFFER:
        setBuffer((Buffer)null);
        return;
      case ProgramPackage.REQUEST_STATEMENT__PATTERN_REFERENCE:
        setPatternReference((VariableReference)null);
        return;
      case ProgramPackage.REQUEST_STATEMENT__BINDINGS:
        setBindings((Bindings)null);
        return;
      case ProgramPackage.REQUEST_STATEMENT__CAST:
        setCast(CAST_EDEFAULT);
        return;
      case ProgramPackage.REQUEST_STATEMENT__MAPPING:
        setMapping((Mapping)null);
        return;
      case ProgramPackage.REQUEST_STATEMENT__HANDLER:
        setHandler((Handler)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ProgramPackage.REQUEST_STATEMENT__FORCED:
        return forced != FORCED_EDEFAULT;
      case ProgramPackage.REQUEST_STATEMENT__BUFFER:
        return buffer != null;
      case ProgramPackage.REQUEST_STATEMENT__PATTERN_REFERENCE:
        return patternReference != null;
      case ProgramPackage.REQUEST_STATEMENT__BINDINGS:
        return bindings != null;
      case ProgramPackage.REQUEST_STATEMENT__CAST:
        return CAST_EDEFAULT == null ? cast != null : !CAST_EDEFAULT.equals(cast);
      case ProgramPackage.REQUEST_STATEMENT__MAPPING:
        return mapping != null;
      case ProgramPackage.REQUEST_STATEMENT__HANDLER:
        return handler != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (forced: ");
    result.append(forced);
    result.append(", cast: ");
    result.append(cast);
    result.append(')');
    return result.toString();
  }

} //RequestStatementImpl
