/*
 * generated by Xtext 2.20.0
 */
package mil.navy.nrl.ncarai.jasm.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import mil.navy.nrl.ncarai.jasm.ide.contentassist.antlr.internal.InternalProgramParser;
import mil.navy.nrl.ncarai.jasm.services.ProgramGrammarAccess;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class ProgramParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(ProgramGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, ProgramGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getPackageDefAccess().getAlternatives_5(), "rule__PackageDef__Alternatives_5");
			builder.put(grammarAccess.getPackageDefAccess().getAlternatives_8(), "rule__PackageDef__Alternatives_8");
			builder.put(grammarAccess.getBufferDefAccess().getAlternatives_1(), "rule__BufferDef__Alternatives_1");
			builder.put(grammarAccess.getRequestDefAccess().getAlternatives_0(), "rule__RequestDef__Alternatives_0");
			builder.put(grammarAccess.getRequestDefAccess().getAlternatives_2(), "rule__RequestDef__Alternatives_2");
			builder.put(grammarAccess.getFunctionAccess().getAlternatives_1(), "rule__Function__Alternatives_1");
			builder.put(grammarAccess.getInstructionAccess().getAlternatives(), "rule__Instruction__Alternatives");
			builder.put(grammarAccess.getVariableValueAccess().getAlternatives(), "rule__VariableValue__Alternatives");
			builder.put(grammarAccess.getElementAccess().getAlternatives(), "rule__Element__Alternatives");
			builder.put(grammarAccess.getProductionConditionAccess().getAlternatives(), "rule__ProductionCondition__Alternatives");
			builder.put(grammarAccess.getProductionActionAccess().getAlternatives(), "rule__ProductionAction__Alternatives");
			builder.put(grammarAccess.getIsaBlockAccess().getAlternatives(), "rule__IsaBlock__Alternatives");
			builder.put(grammarAccess.getComplexSlotAccess().getAlternatives(), "rule__ComplexSlot__Alternatives");
			builder.put(grammarAccess.getBooleanOperationAccess().getAlternatives(), "rule__BooleanOperation__Alternatives");
			builder.put(grammarAccess.getConditionalSlotAccess().getNameAlternatives_0_0(), "rule__ConditionalSlot__NameAlternatives_0_0");
			builder.put(grammarAccess.getValueAccess().getAlternatives(), "rule__Value__Alternatives");
			builder.put(grammarAccess.getValueAccess().getNameAlternatives_0_1_0(), "rule__Value__NameAlternatives_0_1_0");
			builder.put(grammarAccess.getBOOLEANAccess().getAlternatives(), "rule__BOOLEAN__Alternatives");
			builder.put(grammarAccess.getConditionAccess().getAlternatives(), "rule__Condition__Alternatives");
			builder.put(grammarAccess.getPackageDefAccess().getGroup(), "rule__PackageDef__Group__0");
			builder.put(grammarAccess.getIncludeAccess().getGroup(), "rule__Include__Group__0");
			builder.put(grammarAccess.getBufferDefAccess().getGroup(), "rule__BufferDef__Group__0");
			builder.put(grammarAccess.getBufferDefAccess().getGroup_5(), "rule__BufferDef__Group_5__0");
			builder.put(grammarAccess.getRequestDefAccess().getGroup(), "rule__RequestDef__Group__0");
			builder.put(grammarAccess.getGeneratorDefAccess().getGroup(), "rule__GeneratorDef__Group__0");
			builder.put(grammarAccess.getPatternAccess().getGroup(), "rule__Pattern__Group__0");
			builder.put(grammarAccess.getPatternAccess().getGroup_3(), "rule__Pattern__Group_3__0");
			builder.put(grammarAccess.getFunctionAccess().getGroup(), "rule__Function__Group__0");
			builder.put(grammarAccess.getFunctionAccess().getGroup_4(), "rule__Function__Group_4__0");
			builder.put(grammarAccess.getFunctionAccess().getGroup_4_1(), "rule__Function__Group_4_1__0");
			builder.put(grammarAccess.getWithAsStatementAccess().getGroup(), "rule__WithAsStatement__Group__0");
			builder.put(grammarAccess.getWithAsStatementAccess().getGroup_2(), "rule__WithAsStatement__Group_2__0");
			builder.put(grammarAccess.getRetainAsStatementAccess().getGroup(), "rule__RetainAsStatement__Group__0");
			builder.put(grammarAccess.getRetainAsStatementAccess().getGroup_2(), "rule__RetainAsStatement__Group_2__0");
			builder.put(grammarAccess.getAsStatementAccess().getGroup(), "rule__AsStatement__Group__0");
			builder.put(grammarAccess.getVariableStatementAccess().getGroup(), "rule__VariableStatement__Group__0");
			builder.put(grammarAccess.getBlockAccess().getGroup(), "rule__Block__Group__0");
			builder.put(grammarAccess.getInsertionStatementAccess().getGroup(), "rule__InsertionStatement__Group__0");
			builder.put(grammarAccess.getInsertionStatementAccess().getGroup_4(), "rule__InsertionStatement__Group_4__0");
			builder.put(grammarAccess.getFunctionCallStatementAccess().getGroup(), "rule__FunctionCallStatement__Group__0");
			builder.put(grammarAccess.getFunctionCallStatementAccess().getGroup_2(), "rule__FunctionCallStatement__Group_2__0");
			builder.put(grammarAccess.getFunctionCallStatementAccess().getGroup_2_1(), "rule__FunctionCallStatement__Group_2_1__0");
			builder.put(grammarAccess.getAssignmentStatementAccess().getGroup(), "rule__AssignmentStatement__Group__0");
			builder.put(grammarAccess.getVariableReferenceAccess().getGroup(), "rule__VariableReference__Group__0");
			builder.put(grammarAccess.getVariableReferenceAccess().getGroup_0(), "rule__VariableReference__Group_0__0");
			builder.put(grammarAccess.getVariableValueAccess().getGroup_0(), "rule__VariableValue__Group_0__0");
			builder.put(grammarAccess.getVariableValueAccess().getGroup_0_0(), "rule__VariableValue__Group_0_0__0");
			builder.put(grammarAccess.getReturnVariableReferenceAccess().getGroup(), "rule__ReturnVariableReference__Group__0");
			builder.put(grammarAccess.getReturnVariableReferenceAccess().getGroup_0(), "rule__ReturnVariableReference__Group_0__0");
			builder.put(grammarAccess.getReturnStatementAccess().getGroup(), "rule__ReturnStatement__Group__0");
			builder.put(grammarAccess.getRemoveStatementAccess().getGroup(), "rule__RemoveStatement__Group__0");
			builder.put(grammarAccess.getRemoveStatementAccess().getGroup_2(), "rule__RemoveStatement__Group_2__0");
			builder.put(grammarAccess.getRequestStatementAccess().getGroup(), "rule__RequestStatement__Group__0");
			builder.put(grammarAccess.getRequestStatementAccess().getGroup_6(), "rule__RequestStatement__Group_6__0");
			builder.put(grammarAccess.getRequestStatementAccess().getGroup_7(), "rule__RequestStatement__Group_7__0");
			builder.put(grammarAccess.getRepeatUntilStatementAccess().getGroup(), "rule__RepeatUntilStatement__Group__0");
			builder.put(grammarAccess.getUntilRepeatStatementAccess().getGroup(), "rule__UntilRepeatStatement__Group__0");
			builder.put(grammarAccess.getWhileDoStatementAccess().getGroup(), "rule__WhileDoStatement__Group__0");
			builder.put(grammarAccess.getDoWhileStatementAccess().getGroup(), "rule__DoWhileStatement__Group__0");
			builder.put(grammarAccess.getRepeatAccess().getGroup(), "rule__Repeat__Group__0");
			builder.put(grammarAccess.getRewardStatementAccess().getGroup(), "rule__RewardStatement__Group__0");
			builder.put(grammarAccess.getUntilAccess().getGroup(), "rule__Until__Group__0");
			builder.put(grammarAccess.getWhileAccess().getGroup(), "rule__While__Group__0");
			builder.put(grammarAccess.getMatchStatementAccess().getGroup(), "rule__MatchStatement__Group__0");
			builder.put(grammarAccess.getCaseStatementAccess().getGroup(), "rule__CaseStatement__Group__0");
			builder.put(grammarAccess.getCaseStatementAccess().getGroup_2(), "rule__CaseStatement__Group_2__0");
			builder.put(grammarAccess.getOutputStatementAccess().getGroup(), "rule__OutputStatement__Group__0");
			builder.put(grammarAccess.getOutputStatementAccess().getGroup_3(), "rule__OutputStatement__Group_3__0");
			builder.put(grammarAccess.getForLoopStatementAccess().getGroup(), "rule__ForLoopStatement__Group__0");
			builder.put(grammarAccess.getIfThenElseStatementAccess().getGroup(), "rule__IfThenElseStatement__Group__0");
			builder.put(grammarAccess.getIfThenElseStatementAccess().getGroup_5(), "rule__IfThenElseStatement__Group_5__0");
			builder.put(grammarAccess.getBindingsAccess().getGroup(), "rule__Bindings__Group__0");
			builder.put(grammarAccess.getBindingsAccess().getGroup_1(), "rule__Bindings__Group_1__0");
			builder.put(grammarAccess.getBufferPatternAccess().getGroup(), "rule__BufferPattern__Group__0");
			builder.put(grammarAccess.getMappingAccess().getGroup(), "rule__Mapping__Group__0");
			builder.put(grammarAccess.getHandlerAccess().getGroup(), "rule__Handler__Group__0");
			builder.put(grammarAccess.getPackageDeclarationAccess().getGroup(), "rule__PackageDeclaration__Group__0");
			builder.put(grammarAccess.getImportAccess().getGroup(), "rule__Import__Group__0");
			builder.put(grammarAccess.getModelModuleAccess().getGroup(), "rule__ModelModule__Group__0");
			builder.put(grammarAccess.getModelExtensionAccess().getGroup(), "rule__ModelExtension__Group__0");
			builder.put(grammarAccess.getParametersAccess().getGroup(), "rule__Parameters__Group__0");
			builder.put(grammarAccess.getParametersAccess().getGroup_3(), "rule__Parameters__Group_3__0");
			builder.put(grammarAccess.getChunksAccess().getGroup(), "rule__Chunks__Group__0");
			builder.put(grammarAccess.getChunksAccess().getGroup_2(), "rule__Chunks__Group_2__0");
			builder.put(grammarAccess.getChunkDefAccess().getGroup(), "rule__ChunkDef__Group__0");
			builder.put(grammarAccess.getChunkDefAccess().getGroup_2(), "rule__ChunkDef__Group_2__0");
			builder.put(grammarAccess.getChunkDefAccess().getGroup_2_2(), "rule__ChunkDef__Group_2_2__0");
			builder.put(grammarAccess.getChunkTypeAccess().getGroup(), "rule__ChunkType__Group__0");
			builder.put(grammarAccess.getChunkTypeAccess().getGroup_3(), "rule__ChunkType__Group_3__0");
			builder.put(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup(), "rule__QualifiedNameWithWildcard__Group__0");
			builder.put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
			builder.put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
			builder.put(grammarAccess.getBuffersAccess().getGroup(), "rule__Buffers__Group__0");
			builder.put(grammarAccess.getBufferAccess().getGroup(), "rule__Buffer__Group__0");
			builder.put(grammarAccess.getProductionAccess().getGroup(), "rule__Production__Group__0");
			builder.put(grammarAccess.getMatchAccess().getGroup(), "rule__Match__Group__0");
			builder.put(grammarAccess.getQueryAccess().getGroup(), "rule__Query__Group__0");
			builder.put(grammarAccess.getProxyAccess().getGroup(), "rule__Proxy__Group__0");
			builder.put(grammarAccess.getScriptAccess().getGroup(), "rule__Script__Group__0");
			builder.put(grammarAccess.getAddAccess().getGroup(), "rule__Add__Group__0");
			builder.put(grammarAccess.getRemoveAccess().getGroup(), "rule__Remove__Group__0");
			builder.put(grammarAccess.getOutputAccess().getGroup(), "rule__Output__Group__0");
			builder.put(grammarAccess.getSimpleSlotBlockAccess().getGroup(), "rule__SimpleSlotBlock__Group__0");
			builder.put(grammarAccess.getIsaBlockAccess().getGroup_0(), "rule__IsaBlock__Group_0__0");
			builder.put(grammarAccess.getSimpleSlotAccess().getGroup(), "rule__SimpleSlot__Group__0");
			builder.put(grammarAccess.getConditionalSlotAccess().getGroup(), "rule__ConditionalSlot__Group__0");
			builder.put(grammarAccess.getOrSlotAccess().getGroup(), "rule__OrSlot__Group__0");
			builder.put(grammarAccess.getAndSlotAccess().getGroup(), "rule__AndSlot__Group__0");
			builder.put(grammarAccess.getNotSlotAccess().getGroup(), "rule__NotSlot__Group__0");
			builder.put(grammarAccess.getParameterAccess().getGroup(), "rule__Parameter__Group__0");
			builder.put(grammarAccess.getParametersBlockAccess().getGroup(), "rule__ParametersBlock__Group__0");
			builder.put(grammarAccess.getValueAccess().getGroup_0(), "rule__Value__Group_0__0");
			builder.put(grammarAccess.getVARIABLEAccess().getGroup(), "rule__VARIABLE__Group__0");
			builder.put(grammarAccess.getNUMERICAccess().getGroup(), "rule__NUMERIC__Group__0");
			builder.put(grammarAccess.getNUMERICAccess().getGroup_2(), "rule__NUMERIC__Group_2__0");
			builder.put(grammarAccess.getProgramAccess().getPackageAssignment(), "rule__Program__PackageAssignment");
			builder.put(grammarAccess.getPackageDefAccess().getNameAssignment_1(), "rule__PackageDef__NameAssignment_1");
			builder.put(grammarAccess.getPackageDefAccess().getTargetAssignment_3(), "rule__PackageDef__TargetAssignment_3");
			builder.put(grammarAccess.getPackageDefAccess().getImportsAssignment_5_0(), "rule__PackageDef__ImportsAssignment_5_0");
			builder.put(grammarAccess.getPackageDefAccess().getIncludesAssignment_5_1(), "rule__PackageDef__IncludesAssignment_5_1");
			builder.put(grammarAccess.getPackageDefAccess().getGeneratorAssignment_6(), "rule__PackageDef__GeneratorAssignment_6");
			builder.put(grammarAccess.getPackageDefAccess().getBufferDefsAssignment_7(), "rule__PackageDef__BufferDefsAssignment_7");
			builder.put(grammarAccess.getPackageDefAccess().getChunkTypesAssignment_8_0(), "rule__PackageDef__ChunkTypesAssignment_8_0");
			builder.put(grammarAccess.getPackageDefAccess().getChunkDefsAssignment_8_1(), "rule__PackageDef__ChunkDefsAssignment_8_1");
			builder.put(grammarAccess.getPackageDefAccess().getPatternsAssignment_8_2(), "rule__PackageDef__PatternsAssignment_8_2");
			builder.put(grammarAccess.getPackageDefAccess().getFunctionsAssignment_8_3(), "rule__PackageDef__FunctionsAssignment_8_3");
			builder.put(grammarAccess.getIncludeAccess().getImportedNamespaceAssignment_1(), "rule__Include__ImportedNamespaceAssignment_1");
			builder.put(grammarAccess.getBufferDefAccess().getNameAssignment_0(), "rule__BufferDef__NameAssignment_0");
			builder.put(grammarAccess.getBufferDefAccess().getReadableAssignment_1_0(), "rule__BufferDef__ReadableAssignment_1_0");
			builder.put(grammarAccess.getBufferDefAccess().getWritableAssignment_1_1(), "rule__BufferDef__WritableAssignment_1_1");
			builder.put(grammarAccess.getBufferDefAccess().getErrorAssignment_2(), "rule__BufferDef__ErrorAssignment_2");
			builder.put(grammarAccess.getBufferDefAccess().getRequestsAssignment_4(), "rule__BufferDef__RequestsAssignment_4");
			builder.put(grammarAccess.getBufferDefAccess().getRequestsAssignment_5_1(), "rule__BufferDef__RequestsAssignment_5_1");
			builder.put(grammarAccess.getRequestDefAccess().getWildcardRequestAssignment_0_0(), "rule__RequestDef__WildcardRequestAssignment_0_0");
			builder.put(grammarAccess.getRequestDefAccess().getRequestTypeAssignment_0_1(), "rule__RequestDef__RequestTypeAssignment_0_1");
			builder.put(grammarAccess.getRequestDefAccess().getWildcardResultAssignment_2_0(), "rule__RequestDef__WildcardResultAssignment_2_0");
			builder.put(grammarAccess.getRequestDefAccess().getResultTypeAssignment_2_1(), "rule__RequestDef__ResultTypeAssignment_2_1");
			builder.put(grammarAccess.getGeneratorDefAccess().getParametersAssignment_1(), "rule__GeneratorDef__ParametersAssignment_1");
			builder.put(grammarAccess.getPatternAccess().getNameAssignment_0(), "rule__Pattern__NameAssignment_0");
			builder.put(grammarAccess.getPatternAccess().getTypeAssignment_3_1(), "rule__Pattern__TypeAssignment_3_1");
			builder.put(grammarAccess.getPatternAccess().getSlotsAssignment_4(), "rule__Pattern__SlotsAssignment_4");
			builder.put(grammarAccess.getFunctionAccess().getVoidAssignment_1_0(), "rule__Function__VoidAssignment_1_0");
			builder.put(grammarAccess.getFunctionAccess().getChunkAssignment_1_1(), "rule__Function__ChunkAssignment_1_1");
			builder.put(grammarAccess.getFunctionAccess().getNameAssignment_2(), "rule__Function__NameAssignment_2");
			builder.put(grammarAccess.getFunctionAccess().getSlotsAssignment_4_0(), "rule__Function__SlotsAssignment_4_0");
			builder.put(grammarAccess.getFunctionAccess().getSlotsAssignment_4_1_1(), "rule__Function__SlotsAssignment_4_1_1");
			builder.put(grammarAccess.getFunctionAccess().getAssumedContentsAssignment_6(), "rule__Function__AssumedContentsAssignment_6");
			builder.put(grammarAccess.getFunctionAccess().getRetainedContentsAssignment_7(), "rule__Function__RetainedContentsAssignment_7");
			builder.put(grammarAccess.getFunctionAccess().getVariablesAssignment_9(), "rule__Function__VariablesAssignment_9");
			builder.put(grammarAccess.getFunctionAccess().getInstructionsAssignment_10(), "rule__Function__InstructionsAssignment_10");
			builder.put(grammarAccess.getWithAsStatementAccess().getAssumedAssignment_1(), "rule__WithAsStatement__AssumedAssignment_1");
			builder.put(grammarAccess.getWithAsStatementAccess().getAssumedAssignment_2_1(), "rule__WithAsStatement__AssumedAssignment_2_1");
			builder.put(grammarAccess.getRetainAsStatementAccess().getRetainedAssignment_1(), "rule__RetainAsStatement__RetainedAssignment_1");
			builder.put(grammarAccess.getRetainAsStatementAccess().getRetainedAssignment_2_1(), "rule__RetainAsStatement__RetainedAssignment_2_1");
			builder.put(grammarAccess.getAsStatementAccess().getBufferAssignment_0(), "rule__AsStatement__BufferAssignment_0");
			builder.put(grammarAccess.getAsStatementAccess().getTypeAssignment_2(), "rule__AsStatement__TypeAssignment_2");
			builder.put(grammarAccess.getVariableStatementAccess().getAssignmentAssignment_1(), "rule__VariableStatement__AssignmentAssignment_1");
			builder.put(grammarAccess.getBlockAccess().getInstructionsAssignment_2(), "rule__Block__InstructionsAssignment_2");
			builder.put(grammarAccess.getInsertionStatementAccess().getEntryStateAssignment_1(), "rule__InsertionStatement__EntryStateAssignment_1");
			builder.put(grammarAccess.getInsertionStatementAccess().getExitStateAssignment_3(), "rule__InsertionStatement__ExitStateAssignment_3");
			builder.put(grammarAccess.getInsertionStatementAccess().getShouldGenerateAssignment_4_1(), "rule__InsertionStatement__ShouldGenerateAssignment_4_1");
			builder.put(grammarAccess.getFunctionCallStatementAccess().getFunctionAssignment_0(), "rule__FunctionCallStatement__FunctionAssignment_0");
			builder.put(grammarAccess.getFunctionCallStatementAccess().getParametersAssignment_2_0(), "rule__FunctionCallStatement__ParametersAssignment_2_0");
			builder.put(grammarAccess.getFunctionCallStatementAccess().getParametersAssignment_2_1_1(), "rule__FunctionCallStatement__ParametersAssignment_2_1_1");
			builder.put(grammarAccess.getAssignmentStatementAccess().getReferenceAssignment_0(), "rule__AssignmentStatement__ReferenceAssignment_0");
			builder.put(grammarAccess.getAssignmentStatementAccess().getAssignmentAssignment_2(), "rule__AssignmentStatement__AssignmentAssignment_2");
			builder.put(grammarAccess.getVariableReferenceAccess().getBufferAssignment_0_0(), "rule__VariableReference__BufferAssignment_0_0");
			builder.put(grammarAccess.getVariableReferenceAccess().getNameAssignment_1(), "rule__VariableReference__NameAssignment_1");
			builder.put(grammarAccess.getVariableValueAccess().getBufferAssignment_0_0_0(), "rule__VariableValue__BufferAssignment_0_0_0");
			builder.put(grammarAccess.getVariableValueAccess().getValueAssignment_0_1(), "rule__VariableValue__ValueAssignment_0_1");
			builder.put(grammarAccess.getVariableValueAccess().getFunctionCallAssignment_1(), "rule__VariableValue__FunctionCallAssignment_1");
			builder.put(grammarAccess.getReturnVariableReferenceAccess().getBufferAssignment_0_0(), "rule__ReturnVariableReference__BufferAssignment_0_0");
			builder.put(grammarAccess.getReturnVariableReferenceAccess().getValueAssignment_1(), "rule__ReturnVariableReference__ValueAssignment_1");
			builder.put(grammarAccess.getReturnStatementAccess().getReferenceAssignment_2(), "rule__ReturnStatement__ReferenceAssignment_2");
			builder.put(grammarAccess.getRemoveStatementAccess().getBuffersAssignment_1(), "rule__RemoveStatement__BuffersAssignment_1");
			builder.put(grammarAccess.getRemoveStatementAccess().getBuffersAssignment_2_1(), "rule__RemoveStatement__BuffersAssignment_2_1");
			builder.put(grammarAccess.getRequestStatementAccess().getForcedAssignment_0(), "rule__RequestStatement__ForcedAssignment_0");
			builder.put(grammarAccess.getRequestStatementAccess().getBufferAssignment_2(), "rule__RequestStatement__BufferAssignment_2");
			builder.put(grammarAccess.getRequestStatementAccess().getPatternReferenceAssignment_4(), "rule__RequestStatement__PatternReferenceAssignment_4");
			builder.put(grammarAccess.getRequestStatementAccess().getBindingsAssignment_6_1(), "rule__RequestStatement__BindingsAssignment_6_1");
			builder.put(grammarAccess.getRequestStatementAccess().getCastAssignment_7_1(), "rule__RequestStatement__CastAssignment_7_1");
			builder.put(grammarAccess.getRequestStatementAccess().getMappingAssignment_8(), "rule__RequestStatement__MappingAssignment_8");
			builder.put(grammarAccess.getRequestStatementAccess().getHandlerAssignment_9(), "rule__RequestStatement__HandlerAssignment_9");
			builder.put(grammarAccess.getRepeatUntilStatementAccess().getRepeatAssignment_0(), "rule__RepeatUntilStatement__RepeatAssignment_0");
			builder.put(grammarAccess.getRepeatUntilStatementAccess().getUntilAssignment_1(), "rule__RepeatUntilStatement__UntilAssignment_1");
			builder.put(grammarAccess.getUntilRepeatStatementAccess().getUntilAssignment_0(), "rule__UntilRepeatStatement__UntilAssignment_0");
			builder.put(grammarAccess.getUntilRepeatStatementAccess().getBlockAssignment_1(), "rule__UntilRepeatStatement__BlockAssignment_1");
			builder.put(grammarAccess.getWhileDoStatementAccess().getWhileAssignment_0(), "rule__WhileDoStatement__WhileAssignment_0");
			builder.put(grammarAccess.getWhileDoStatementAccess().getBlockAssignment_1(), "rule__WhileDoStatement__BlockAssignment_1");
			builder.put(grammarAccess.getDoWhileStatementAccess().getBlockAssignment_1(), "rule__DoWhileStatement__BlockAssignment_1");
			builder.put(grammarAccess.getDoWhileStatementAccess().getWhileAssignment_2(), "rule__DoWhileStatement__WhileAssignment_2");
			builder.put(grammarAccess.getRepeatAccess().getBlockAssignment_1(), "rule__Repeat__BlockAssignment_1");
			builder.put(grammarAccess.getRewardStatementAccess().getRewardAssignment_1(), "rule__RewardStatement__RewardAssignment_1");
			builder.put(grammarAccess.getUntilAccess().getBindingsAssignment_2(), "rule__Until__BindingsAssignment_2");
			builder.put(grammarAccess.getWhileAccess().getBindingsAssignment_2(), "rule__While__BindingsAssignment_2");
			builder.put(grammarAccess.getMatchStatementAccess().getCasesAssignment_2(), "rule__MatchStatement__CasesAssignment_2");
			builder.put(grammarAccess.getMatchStatementAccess().getCasesAssignment_3(), "rule__MatchStatement__CasesAssignment_3");
			builder.put(grammarAccess.getMatchStatementAccess().getDefaultBlockAssignment_6(), "rule__MatchStatement__DefaultBlockAssignment_6");
			builder.put(grammarAccess.getCaseStatementAccess().getBindingsAssignment_1(), "rule__CaseStatement__BindingsAssignment_1");
			builder.put(grammarAccess.getCaseStatementAccess().getPriorityAssignment_2_1(), "rule__CaseStatement__PriorityAssignment_2_1");
			builder.put(grammarAccess.getCaseStatementAccess().getBlockAssignment_4(), "rule__CaseStatement__BlockAssignment_4");
			builder.put(grammarAccess.getOutputStatementAccess().getStringAssignment_2(), "rule__OutputStatement__StringAssignment_2");
			builder.put(grammarAccess.getOutputStatementAccess().getBindingsAssignment_3_1(), "rule__OutputStatement__BindingsAssignment_3_1");
			builder.put(grammarAccess.getForLoopStatementAccess().getForcedAssignment_0(), "rule__ForLoopStatement__ForcedAssignment_0");
			builder.put(grammarAccess.getForLoopStatementAccess().getForBufferAssignment_3(), "rule__ForLoopStatement__ForBufferAssignment_3");
			builder.put(grammarAccess.getForLoopStatementAccess().getInitialAssignment_5(), "rule__ForLoopStatement__InitialAssignment_5");
			builder.put(grammarAccess.getForLoopStatementAccess().getInitialBindingsAssignment_7(), "rule__ForLoopStatement__InitialBindingsAssignment_7");
			builder.put(grammarAccess.getForLoopStatementAccess().getSubsequentAssignment_9(), "rule__ForLoopStatement__SubsequentAssignment_9");
			builder.put(grammarAccess.getForLoopStatementAccess().getSubsequentBindingsAssignment_11(), "rule__ForLoopStatement__SubsequentBindingsAssignment_11");
			builder.put(grammarAccess.getForLoopStatementAccess().getBlockAssignment_13(), "rule__ForLoopStatement__BlockAssignment_13");
			builder.put(grammarAccess.getIfThenElseStatementAccess().getBindingsAssignment_2(), "rule__IfThenElseStatement__BindingsAssignment_2");
			builder.put(grammarAccess.getIfThenElseStatementAccess().getThenBlockAssignment_4(), "rule__IfThenElseStatement__ThenBlockAssignment_4");
			builder.put(grammarAccess.getIfThenElseStatementAccess().getElseBlockAssignment_5_1(), "rule__IfThenElseStatement__ElseBlockAssignment_5_1");
			builder.put(grammarAccess.getBindingsAccess().getBindingsAssignment_0(), "rule__Bindings__BindingsAssignment_0");
			builder.put(grammarAccess.getBindingsAccess().getBindingsAssignment_1_1(), "rule__Bindings__BindingsAssignment_1_1");
			builder.put(grammarAccess.getBufferPatternAccess().getBufferAssignment_0(), "rule__BufferPattern__BufferAssignment_0");
			builder.put(grammarAccess.getBufferPatternAccess().getPatternAssignment_2(), "rule__BufferPattern__PatternAssignment_2");
			builder.put(grammarAccess.getMappingAccess().getAssignmentsAssignment_2(), "rule__Mapping__AssignmentsAssignment_2");
			builder.put(grammarAccess.getHandlerAccess().getBlockAssignment_2(), "rule__Handler__BlockAssignment_2");
			builder.put(grammarAccess.getModelFragmentAccess().getPackageAssignment(), "rule__ModelFragment__PackageAssignment");
			builder.put(grammarAccess.getPackageDeclarationAccess().getNameAssignment_1(), "rule__PackageDeclaration__NameAssignment_1");
			builder.put(grammarAccess.getPackageDeclarationAccess().getImportsAssignment_3(), "rule__PackageDeclaration__ImportsAssignment_3");
			builder.put(grammarAccess.getPackageDeclarationAccess().getModulesAssignment_4(), "rule__PackageDeclaration__ModulesAssignment_4");
			builder.put(grammarAccess.getPackageDeclarationAccess().getExtensionsAssignment_5(), "rule__PackageDeclaration__ExtensionsAssignment_5");
			builder.put(grammarAccess.getPackageDeclarationAccess().getBuffersAssignment_6(), "rule__PackageDeclaration__BuffersAssignment_6");
			builder.put(grammarAccess.getPackageDeclarationAccess().getElementsAssignment_7(), "rule__PackageDeclaration__ElementsAssignment_7");
			builder.put(grammarAccess.getPackageDeclarationAccess().getParametersAssignment_9(), "rule__PackageDeclaration__ParametersAssignment_9");
			builder.put(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1(), "rule__Import__ImportedNamespaceAssignment_1");
			builder.put(grammarAccess.getModelModuleAccess().getModuleClassAssignment_1(), "rule__ModelModule__ModuleClassAssignment_1");
			builder.put(grammarAccess.getModelModuleAccess().getParametersAssignment_2(), "rule__ModelModule__ParametersAssignment_2");
			builder.put(grammarAccess.getModelExtensionAccess().getExtensionClassAssignment_1(), "rule__ModelExtension__ExtensionClassAssignment_1");
			builder.put(grammarAccess.getModelExtensionAccess().getParametersAssignment_2(), "rule__ModelExtension__ParametersAssignment_2");
			builder.put(grammarAccess.getParametersAccess().getElementsAssignment_2(), "rule__Parameters__ElementsAssignment_2");
			builder.put(grammarAccess.getParametersAccess().getElementsAssignment_3_1(), "rule__Parameters__ElementsAssignment_3_1");
			builder.put(grammarAccess.getParametersAccess().getParametersAssignment_5(), "rule__Parameters__ParametersAssignment_5");
			builder.put(grammarAccess.getChunksAccess().getTypeAssignment_0(), "rule__Chunks__TypeAssignment_0");
			builder.put(grammarAccess.getChunksAccess().getChunksAssignment_1(), "rule__Chunks__ChunksAssignment_1");
			builder.put(grammarAccess.getChunksAccess().getChunksAssignment_2_1(), "rule__Chunks__ChunksAssignment_2_1");
			builder.put(grammarAccess.getChunkDefAccess().getNameAssignment_1(), "rule__ChunkDef__NameAssignment_1");
			builder.put(grammarAccess.getChunkDefAccess().getSlotsAssignment_2_1(), "rule__ChunkDef__SlotsAssignment_2_1");
			builder.put(grammarAccess.getChunkDefAccess().getSlotsAssignment_2_2_1(), "rule__ChunkDef__SlotsAssignment_2_2_1");
			builder.put(grammarAccess.getChunkDefAccess().getParametersAssignment_3(), "rule__ChunkDef__ParametersAssignment_3");
			builder.put(grammarAccess.getChunkTypeAccess().getNameAssignment_2(), "rule__ChunkType__NameAssignment_2");
			builder.put(grammarAccess.getChunkTypeAccess().getSuperTypeAssignment_3_1(), "rule__ChunkType__SuperTypeAssignment_3_1");
			builder.put(grammarAccess.getChunkTypeAccess().getSlotsAssignment_5(), "rule__ChunkType__SlotsAssignment_5");
			builder.put(grammarAccess.getChunkTypeAccess().getParametersAssignment_7(), "rule__ChunkType__ParametersAssignment_7");
			builder.put(grammarAccess.getOverridableAccess().getOverrideAssignment(), "rule__Overridable__OverrideAssignment");
			builder.put(grammarAccess.getBuffersAccess().getBuffersAssignment_3(), "rule__Buffers__BuffersAssignment_3");
			builder.put(grammarAccess.getBufferAccess().getNameAssignment_1(), "rule__Buffer__NameAssignment_1");
			builder.put(grammarAccess.getBufferAccess().getSourceAssignment_3(), "rule__Buffer__SourceAssignment_3");
			builder.put(grammarAccess.getBufferAccess().getParametersAssignment_5(), "rule__Buffer__ParametersAssignment_5");
			builder.put(grammarAccess.getProductionAccess().getNameAssignment_2(), "rule__Production__NameAssignment_2");
			builder.put(grammarAccess.getProductionAccess().getConditionsAssignment_4(), "rule__Production__ConditionsAssignment_4");
			builder.put(grammarAccess.getProductionAccess().getActionsAssignment_7(), "rule__Production__ActionsAssignment_7");
			builder.put(grammarAccess.getProductionAccess().getParametersAssignment_9(), "rule__Production__ParametersAssignment_9");
			builder.put(grammarAccess.getMatchAccess().getNameAssignment_0(), "rule__Match__NameAssignment_0");
			builder.put(grammarAccess.getMatchAccess().getIsaAssignment_2(), "rule__Match__IsaAssignment_2");
			builder.put(grammarAccess.getMatchAccess().getSlotsAssignment_3(), "rule__Match__SlotsAssignment_3");
			builder.put(grammarAccess.getQueryAccess().getNameAssignment_1(), "rule__Query__NameAssignment_1");
			builder.put(grammarAccess.getQueryAccess().getSlotsAssignment_3(), "rule__Query__SlotsAssignment_3");
			builder.put(grammarAccess.getProxyAccess().getNameAssignment_2(), "rule__Proxy__NameAssignment_2");
			builder.put(grammarAccess.getProxyAccess().getSlotsAssignment_5(), "rule__Proxy__SlotsAssignment_5");
			builder.put(grammarAccess.getScriptAccess().getLanguageAssignment_2(), "rule__Script__LanguageAssignment_2");
			builder.put(grammarAccess.getScriptAccess().getScriptAssignment_4(), "rule__Script__ScriptAssignment_4");
			builder.put(grammarAccess.getAddAccess().getNameAssignment_1(), "rule__Add__NameAssignment_1");
			builder.put(grammarAccess.getAddAccess().getIsaAssignment_3(), "rule__Add__IsaAssignment_3");
			builder.put(grammarAccess.getAddAccess().getSlotsAssignment_4(), "rule__Add__SlotsAssignment_4");
			builder.put(grammarAccess.getOutputAccess().getStringAssignment_2(), "rule__Output__StringAssignment_2");
			builder.put(grammarAccess.getSimpleSlotBlockAccess().getNameAssignment_0(), "rule__SimpleSlotBlock__NameAssignment_0");
			builder.put(grammarAccess.getSimpleSlotBlockAccess().getSlotsAssignment_2(), "rule__SimpleSlotBlock__SlotsAssignment_2");
			builder.put(grammarAccess.getIsaBlockAccess().getTypeAssignment_0_1(), "rule__IsaBlock__TypeAssignment_0_1");
			builder.put(grammarAccess.getIsaBlockAccess().getChunkAssignment_1(), "rule__IsaBlock__ChunkAssignment_1");
			builder.put(grammarAccess.getIsaBlockAccess().getNameAssignment_2(), "rule__IsaBlock__NameAssignment_2");
			builder.put(grammarAccess.getSimpleSlotAccess().getNameAssignment_0(), "rule__SimpleSlot__NameAssignment_0");
			builder.put(grammarAccess.getSimpleSlotAccess().getValueAssignment_2(), "rule__SimpleSlot__ValueAssignment_2");
			builder.put(grammarAccess.getConditionalSlotAccess().getNameAssignment_0(), "rule__ConditionalSlot__NameAssignment_0");
			builder.put(grammarAccess.getConditionalSlotAccess().getConditionAssignment_1(), "rule__ConditionalSlot__ConditionAssignment_1");
			builder.put(grammarAccess.getConditionalSlotAccess().getValueAssignment_2(), "rule__ConditionalSlot__ValueAssignment_2");
			builder.put(grammarAccess.getOrSlotAccess().getSlotsAssignment_3(), "rule__OrSlot__SlotsAssignment_3");
			builder.put(grammarAccess.getAndSlotAccess().getSlotsAssignment_3(), "rule__AndSlot__SlotsAssignment_3");
			builder.put(grammarAccess.getNotSlotAccess().getSlotsAssignment_3(), "rule__NotSlot__SlotsAssignment_3");
			builder.put(grammarAccess.getParameterAccess().getNameAssignment_0(), "rule__Parameter__NameAssignment_0");
			builder.put(grammarAccess.getParameterAccess().getValueAssignment_2(), "rule__Parameter__ValueAssignment_2");
			builder.put(grammarAccess.getParametersBlockAccess().getParameterAssignment_2(), "rule__ParametersBlock__ParameterAssignment_2");
			builder.put(grammarAccess.getValueAccess().getNameAssignment_0_1(), "rule__Value__NameAssignment_0_1");
			builder.put(grammarAccess.getValueAccess().getStringAssignment_1(), "rule__Value__StringAssignment_1");
			builder.put(grammarAccess.getValueAccess().getNumberAssignment_2(), "rule__Value__NumberAssignment_2");
			builder.put(grammarAccess.getValueAccess().getBooleanAssignment_3(), "rule__Value__BooleanAssignment_3");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private ProgramGrammarAccess grammarAccess;

	@Override
	protected InternalProgramParser createParser() {
		InternalProgramParser result = new InternalProgramParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public ProgramGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(ProgramGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
