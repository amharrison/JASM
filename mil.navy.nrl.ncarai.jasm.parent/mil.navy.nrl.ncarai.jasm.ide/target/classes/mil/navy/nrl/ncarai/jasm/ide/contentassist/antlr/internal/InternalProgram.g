/*
 * generated by Xtext 2.20.0
 */
grammar InternalProgram;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package mil.navy.nrl.ncarai.jasm.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package mil.navy.nrl.ncarai.jasm.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import mil.navy.nrl.ncarai.jasm.services.ProgramGrammarAccess;

}
@parser::members {
	private ProgramGrammarAccess grammarAccess;

	public void setGrammarAccess(ProgramGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleProgram
entryRuleProgram
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgramAccess().getPackageAssignment()); }
		(rule__Program__PackageAssignment)
		{ after(grammarAccess.getProgramAccess().getPackageAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePackageDef
entryRulePackageDef
:
{ before(grammarAccess.getPackageDefRule()); }
	 rulePackageDef
{ after(grammarAccess.getPackageDefRule()); } 
	 EOF 
;

// Rule PackageDef
rulePackageDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackageDefAccess().getGroup()); }
		(rule__PackageDef__Group__0)
		{ after(grammarAccess.getPackageDefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInclude
entryRuleInclude
:
{ before(grammarAccess.getIncludeRule()); }
	 ruleInclude
{ after(grammarAccess.getIncludeRule()); } 
	 EOF 
;

// Rule Include
ruleInclude 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIncludeAccess().getGroup()); }
		(rule__Include__Group__0)
		{ after(grammarAccess.getIncludeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBufferDef
entryRuleBufferDef
:
{ before(grammarAccess.getBufferDefRule()); }
	 ruleBufferDef
{ after(grammarAccess.getBufferDefRule()); } 
	 EOF 
;

// Rule BufferDef
ruleBufferDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBufferDefAccess().getGroup()); }
		(rule__BufferDef__Group__0)
		{ after(grammarAccess.getBufferDefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRequestDef
entryRuleRequestDef
:
{ before(grammarAccess.getRequestDefRule()); }
	 ruleRequestDef
{ after(grammarAccess.getRequestDefRule()); } 
	 EOF 
;

// Rule RequestDef
ruleRequestDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRequestDefAccess().getGroup()); }
		(rule__RequestDef__Group__0)
		{ after(grammarAccess.getRequestDefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGeneratorDef
entryRuleGeneratorDef
:
{ before(grammarAccess.getGeneratorDefRule()); }
	 ruleGeneratorDef
{ after(grammarAccess.getGeneratorDefRule()); } 
	 EOF 
;

// Rule GeneratorDef
ruleGeneratorDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGeneratorDefAccess().getGroup()); }
		(rule__GeneratorDef__Group__0)
		{ after(grammarAccess.getGeneratorDefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePattern
entryRulePattern
:
{ before(grammarAccess.getPatternRule()); }
	 rulePattern
{ after(grammarAccess.getPatternRule()); } 
	 EOF 
;

// Rule Pattern
rulePattern 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPatternAccess().getGroup()); }
		(rule__Pattern__Group__0)
		{ after(grammarAccess.getPatternAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunction
entryRuleFunction
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionAccess().getGroup()); }
		(rule__Function__Group__0)
		{ after(grammarAccess.getFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWithAsStatement
entryRuleWithAsStatement
:
{ before(grammarAccess.getWithAsStatementRule()); }
	 ruleWithAsStatement
{ after(grammarAccess.getWithAsStatementRule()); } 
	 EOF 
;

// Rule WithAsStatement
ruleWithAsStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWithAsStatementAccess().getGroup()); }
		(rule__WithAsStatement__Group__0)
		{ after(grammarAccess.getWithAsStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRetainAsStatement
entryRuleRetainAsStatement
:
{ before(grammarAccess.getRetainAsStatementRule()); }
	 ruleRetainAsStatement
{ after(grammarAccess.getRetainAsStatementRule()); } 
	 EOF 
;

// Rule RetainAsStatement
ruleRetainAsStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRetainAsStatementAccess().getGroup()); }
		(rule__RetainAsStatement__Group__0)
		{ after(grammarAccess.getRetainAsStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAsStatement
entryRuleAsStatement
:
{ before(grammarAccess.getAsStatementRule()); }
	 ruleAsStatement
{ after(grammarAccess.getAsStatementRule()); } 
	 EOF 
;

// Rule AsStatement
ruleAsStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAsStatementAccess().getGroup()); }
		(rule__AsStatement__Group__0)
		{ after(grammarAccess.getAsStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableStatement
entryRuleVariableStatement
:
{ before(grammarAccess.getVariableStatementRule()); }
	 ruleVariableStatement
{ after(grammarAccess.getVariableStatementRule()); } 
	 EOF 
;

// Rule VariableStatement
ruleVariableStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableStatementAccess().getGroup()); }
		(rule__VariableStatement__Group__0)
		{ after(grammarAccess.getVariableStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBlock
entryRuleBlock
:
{ before(grammarAccess.getBlockRule()); }
	 ruleBlock
{ after(grammarAccess.getBlockRule()); } 
	 EOF 
;

// Rule Block
ruleBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlockAccess().getGroup()); }
		(rule__Block__Group__0)
		{ after(grammarAccess.getBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInsertionStatement
entryRuleInsertionStatement
:
{ before(grammarAccess.getInsertionStatementRule()); }
	 ruleInsertionStatement
{ after(grammarAccess.getInsertionStatementRule()); } 
	 EOF 
;

// Rule InsertionStatement
ruleInsertionStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInsertionStatementAccess().getGroup()); }
		(rule__InsertionStatement__Group__0)
		{ after(grammarAccess.getInsertionStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInstruction
entryRuleInstruction
:
{ before(grammarAccess.getInstructionRule()); }
	 ruleInstruction
{ after(grammarAccess.getInstructionRule()); } 
	 EOF 
;

// Rule Instruction
ruleInstruction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInstructionAccess().getAlternatives()); }
		(rule__Instruction__Alternatives)
		{ after(grammarAccess.getInstructionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionCallStatement
entryRuleFunctionCallStatement
:
{ before(grammarAccess.getFunctionCallStatementRule()); }
	 ruleFunctionCallStatement
{ after(grammarAccess.getFunctionCallStatementRule()); } 
	 EOF 
;

// Rule FunctionCallStatement
ruleFunctionCallStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionCallStatementAccess().getGroup()); }
		(rule__FunctionCallStatement__Group__0)
		{ after(grammarAccess.getFunctionCallStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssignmentStatement
entryRuleAssignmentStatement
:
{ before(grammarAccess.getAssignmentStatementRule()); }
	 ruleAssignmentStatement
{ after(grammarAccess.getAssignmentStatementRule()); } 
	 EOF 
;

// Rule AssignmentStatement
ruleAssignmentStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignmentStatementAccess().getGroup()); }
		(rule__AssignmentStatement__Group__0)
		{ after(grammarAccess.getAssignmentStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableReference
entryRuleVariableReference
:
{ before(grammarAccess.getVariableReferenceRule()); }
	 ruleVariableReference
{ after(grammarAccess.getVariableReferenceRule()); } 
	 EOF 
;

// Rule VariableReference
ruleVariableReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableReferenceAccess().getGroup()); }
		(rule__VariableReference__Group__0)
		{ after(grammarAccess.getVariableReferenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableValue
entryRuleVariableValue
:
{ before(grammarAccess.getVariableValueRule()); }
	 ruleVariableValue
{ after(grammarAccess.getVariableValueRule()); } 
	 EOF 
;

// Rule VariableValue
ruleVariableValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableValueAccess().getAlternatives()); }
		(rule__VariableValue__Alternatives)
		{ after(grammarAccess.getVariableValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReturnVariableReference
entryRuleReturnVariableReference
:
{ before(grammarAccess.getReturnVariableReferenceRule()); }
	 ruleReturnVariableReference
{ after(grammarAccess.getReturnVariableReferenceRule()); } 
	 EOF 
;

// Rule ReturnVariableReference
ruleReturnVariableReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReturnVariableReferenceAccess().getGroup()); }
		(rule__ReturnVariableReference__Group__0)
		{ after(grammarAccess.getReturnVariableReferenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReturnStatement
entryRuleReturnStatement
:
{ before(grammarAccess.getReturnStatementRule()); }
	 ruleReturnStatement
{ after(grammarAccess.getReturnStatementRule()); } 
	 EOF 
;

// Rule ReturnStatement
ruleReturnStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReturnStatementAccess().getGroup()); }
		(rule__ReturnStatement__Group__0)
		{ after(grammarAccess.getReturnStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRemoveStatement
entryRuleRemoveStatement
:
{ before(grammarAccess.getRemoveStatementRule()); }
	 ruleRemoveStatement
{ after(grammarAccess.getRemoveStatementRule()); } 
	 EOF 
;

// Rule RemoveStatement
ruleRemoveStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRemoveStatementAccess().getGroup()); }
		(rule__RemoveStatement__Group__0)
		{ after(grammarAccess.getRemoveStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRequestStatement
entryRuleRequestStatement
:
{ before(grammarAccess.getRequestStatementRule()); }
	 ruleRequestStatement
{ after(grammarAccess.getRequestStatementRule()); } 
	 EOF 
;

// Rule RequestStatement
ruleRequestStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRequestStatementAccess().getGroup()); }
		(rule__RequestStatement__Group__0)
		{ after(grammarAccess.getRequestStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRepeatUntilStatement
entryRuleRepeatUntilStatement
:
{ before(grammarAccess.getRepeatUntilStatementRule()); }
	 ruleRepeatUntilStatement
{ after(grammarAccess.getRepeatUntilStatementRule()); } 
	 EOF 
;

// Rule RepeatUntilStatement
ruleRepeatUntilStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRepeatUntilStatementAccess().getGroup()); }
		(rule__RepeatUntilStatement__Group__0)
		{ after(grammarAccess.getRepeatUntilStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUntilRepeatStatement
entryRuleUntilRepeatStatement
:
{ before(grammarAccess.getUntilRepeatStatementRule()); }
	 ruleUntilRepeatStatement
{ after(grammarAccess.getUntilRepeatStatementRule()); } 
	 EOF 
;

// Rule UntilRepeatStatement
ruleUntilRepeatStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUntilRepeatStatementAccess().getGroup()); }
		(rule__UntilRepeatStatement__Group__0)
		{ after(grammarAccess.getUntilRepeatStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWhileDoStatement
entryRuleWhileDoStatement
:
{ before(grammarAccess.getWhileDoStatementRule()); }
	 ruleWhileDoStatement
{ after(grammarAccess.getWhileDoStatementRule()); } 
	 EOF 
;

// Rule WhileDoStatement
ruleWhileDoStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhileDoStatementAccess().getGroup()); }
		(rule__WhileDoStatement__Group__0)
		{ after(grammarAccess.getWhileDoStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDoWhileStatement
entryRuleDoWhileStatement
:
{ before(grammarAccess.getDoWhileStatementRule()); }
	 ruleDoWhileStatement
{ after(grammarAccess.getDoWhileStatementRule()); } 
	 EOF 
;

// Rule DoWhileStatement
ruleDoWhileStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDoWhileStatementAccess().getGroup()); }
		(rule__DoWhileStatement__Group__0)
		{ after(grammarAccess.getDoWhileStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRepeat
entryRuleRepeat
:
{ before(grammarAccess.getRepeatRule()); }
	 ruleRepeat
{ after(grammarAccess.getRepeatRule()); } 
	 EOF 
;

// Rule Repeat
ruleRepeat 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRepeatAccess().getGroup()); }
		(rule__Repeat__Group__0)
		{ after(grammarAccess.getRepeatAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRewardStatement
entryRuleRewardStatement
:
{ before(grammarAccess.getRewardStatementRule()); }
	 ruleRewardStatement
{ after(grammarAccess.getRewardStatementRule()); } 
	 EOF 
;

// Rule RewardStatement
ruleRewardStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRewardStatementAccess().getGroup()); }
		(rule__RewardStatement__Group__0)
		{ after(grammarAccess.getRewardStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUntil
entryRuleUntil
:
{ before(grammarAccess.getUntilRule()); }
	 ruleUntil
{ after(grammarAccess.getUntilRule()); } 
	 EOF 
;

// Rule Until
ruleUntil 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUntilAccess().getGroup()); }
		(rule__Until__Group__0)
		{ after(grammarAccess.getUntilAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWhile
entryRuleWhile
:
{ before(grammarAccess.getWhileRule()); }
	 ruleWhile
{ after(grammarAccess.getWhileRule()); } 
	 EOF 
;

// Rule While
ruleWhile 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhileAccess().getGroup()); }
		(rule__While__Group__0)
		{ after(grammarAccess.getWhileAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMatchStatement
entryRuleMatchStatement
:
{ before(grammarAccess.getMatchStatementRule()); }
	 ruleMatchStatement
{ after(grammarAccess.getMatchStatementRule()); } 
	 EOF 
;

// Rule MatchStatement
ruleMatchStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMatchStatementAccess().getGroup()); }
		(rule__MatchStatement__Group__0)
		{ after(grammarAccess.getMatchStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCaseStatement
entryRuleCaseStatement
:
{ before(grammarAccess.getCaseStatementRule()); }
	 ruleCaseStatement
{ after(grammarAccess.getCaseStatementRule()); } 
	 EOF 
;

// Rule CaseStatement
ruleCaseStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCaseStatementAccess().getGroup()); }
		(rule__CaseStatement__Group__0)
		{ after(grammarAccess.getCaseStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOutputStatement
entryRuleOutputStatement
:
{ before(grammarAccess.getOutputStatementRule()); }
	 ruleOutputStatement
{ after(grammarAccess.getOutputStatementRule()); } 
	 EOF 
;

// Rule OutputStatement
ruleOutputStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOutputStatementAccess().getGroup()); }
		(rule__OutputStatement__Group__0)
		{ after(grammarAccess.getOutputStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForLoopStatement
entryRuleForLoopStatement
:
{ before(grammarAccess.getForLoopStatementRule()); }
	 ruleForLoopStatement
{ after(grammarAccess.getForLoopStatementRule()); } 
	 EOF 
;

// Rule ForLoopStatement
ruleForLoopStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForLoopStatementAccess().getGroup()); }
		(rule__ForLoopStatement__Group__0)
		{ after(grammarAccess.getForLoopStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfThenElseStatement
entryRuleIfThenElseStatement
:
{ before(grammarAccess.getIfThenElseStatementRule()); }
	 ruleIfThenElseStatement
{ after(grammarAccess.getIfThenElseStatementRule()); } 
	 EOF 
;

// Rule IfThenElseStatement
ruleIfThenElseStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfThenElseStatementAccess().getGroup()); }
		(rule__IfThenElseStatement__Group__0)
		{ after(grammarAccess.getIfThenElseStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBindings
entryRuleBindings
:
{ before(grammarAccess.getBindingsRule()); }
	 ruleBindings
{ after(grammarAccess.getBindingsRule()); } 
	 EOF 
;

// Rule Bindings
ruleBindings 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBindingsAccess().getGroup()); }
		(rule__Bindings__Group__0)
		{ after(grammarAccess.getBindingsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBufferPattern
entryRuleBufferPattern
:
{ before(grammarAccess.getBufferPatternRule()); }
	 ruleBufferPattern
{ after(grammarAccess.getBufferPatternRule()); } 
	 EOF 
;

// Rule BufferPattern
ruleBufferPattern 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBufferPatternAccess().getGroup()); }
		(rule__BufferPattern__Group__0)
		{ after(grammarAccess.getBufferPatternAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMapping
entryRuleMapping
:
{ before(grammarAccess.getMappingRule()); }
	 ruleMapping
{ after(grammarAccess.getMappingRule()); } 
	 EOF 
;

// Rule Mapping
ruleMapping 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMappingAccess().getGroup()); }
		(rule__Mapping__Group__0)
		{ after(grammarAccess.getMappingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHandler
entryRuleHandler
:
{ before(grammarAccess.getHandlerRule()); }
	 ruleHandler
{ after(grammarAccess.getHandlerRule()); } 
	 EOF 
;

// Rule Handler
ruleHandler 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHandlerAccess().getGroup()); }
		(rule__Handler__Group__0)
		{ after(grammarAccess.getHandlerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePackageDeclaration
entryRulePackageDeclaration
:
{ before(grammarAccess.getPackageDeclarationRule()); }
	 rulePackageDeclaration
{ after(grammarAccess.getPackageDeclarationRule()); } 
	 EOF 
;

// Rule PackageDeclaration
rulePackageDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackageDeclarationAccess().getGroup()); }
		(rule__PackageDeclaration__Group__0)
		{ after(grammarAccess.getPackageDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImport
entryRuleImport
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportAccess().getGroup()); }
		(rule__Import__Group__0)
		{ after(grammarAccess.getImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModelModule
entryRuleModelModule
:
{ before(grammarAccess.getModelModuleRule()); }
	 ruleModelModule
{ after(grammarAccess.getModelModuleRule()); } 
	 EOF 
;

// Rule ModelModule
ruleModelModule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelModuleAccess().getGroup()); }
		(rule__ModelModule__Group__0)
		{ after(grammarAccess.getModelModuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModelExtension
entryRuleModelExtension
:
{ before(grammarAccess.getModelExtensionRule()); }
	 ruleModelExtension
{ after(grammarAccess.getModelExtensionRule()); } 
	 EOF 
;

// Rule ModelExtension
ruleModelExtension 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelExtensionAccess().getGroup()); }
		(rule__ModelExtension__Group__0)
		{ after(grammarAccess.getModelExtensionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElement
entryRuleElement
:
{ before(grammarAccess.getElementRule()); }
	 ruleElement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule Element
ruleElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementAccess().getAlternatives()); }
		(rule__Element__Alternatives)
		{ after(grammarAccess.getElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameters
entryRuleParameters
:
{ before(grammarAccess.getParametersRule()); }
	 ruleParameters
{ after(grammarAccess.getParametersRule()); } 
	 EOF 
;

// Rule Parameters
ruleParameters 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParametersAccess().getGroup()); }
		(rule__Parameters__Group__0)
		{ after(grammarAccess.getParametersAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChunks
entryRuleChunks
:
{ before(grammarAccess.getChunksRule()); }
	 ruleChunks
{ after(grammarAccess.getChunksRule()); } 
	 EOF 
;

// Rule Chunks
ruleChunks 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChunksAccess().getGroup()); }
		(rule__Chunks__Group__0)
		{ after(grammarAccess.getChunksAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChunkDef
entryRuleChunkDef
:
{ before(grammarAccess.getChunkDefRule()); }
	 ruleChunkDef
{ after(grammarAccess.getChunkDefRule()); } 
	 EOF 
;

// Rule ChunkDef
ruleChunkDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChunkDefAccess().getGroup()); }
		(rule__ChunkDef__Group__0)
		{ after(grammarAccess.getChunkDefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChunkType
entryRuleChunkType
:
{ before(grammarAccess.getChunkTypeRule()); }
	 ruleChunkType
{ after(grammarAccess.getChunkTypeRule()); } 
	 EOF 
;

// Rule ChunkType
ruleChunkType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChunkTypeAccess().getGroup()); }
		(rule__ChunkType__Group__0)
		{ after(grammarAccess.getChunkTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard
:
{ before(grammarAccess.getQualifiedNameWithWildcardRule()); }
	 ruleQualifiedNameWithWildcard
{ after(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
		(rule__QualifiedNameWithWildcard__Group__0)
		{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule Overridable
ruleOverridable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOverridableAccess().getOverrideAssignment()); }
		(rule__Overridable__OverrideAssignment)?
		{ after(grammarAccess.getOverridableAccess().getOverrideAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBuffers
entryRuleBuffers
:
{ before(grammarAccess.getBuffersRule()); }
	 ruleBuffers
{ after(grammarAccess.getBuffersRule()); } 
	 EOF 
;

// Rule Buffers
ruleBuffers 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBuffersAccess().getGroup()); }
		(rule__Buffers__Group__0)
		{ after(grammarAccess.getBuffersAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBuffer
entryRuleBuffer
:
{ before(grammarAccess.getBufferRule()); }
	 ruleBuffer
{ after(grammarAccess.getBufferRule()); } 
	 EOF 
;

// Rule Buffer
ruleBuffer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBufferAccess().getGroup()); }
		(rule__Buffer__Group__0)
		{ after(grammarAccess.getBufferAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProduction
entryRuleProduction
:
{ before(grammarAccess.getProductionRule()); }
	 ruleProduction
{ after(grammarAccess.getProductionRule()); } 
	 EOF 
;

// Rule Production
ruleProduction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProductionAccess().getGroup()); }
		(rule__Production__Group__0)
		{ after(grammarAccess.getProductionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProductionCondition
entryRuleProductionCondition
:
{ before(grammarAccess.getProductionConditionRule()); }
	 ruleProductionCondition
{ after(grammarAccess.getProductionConditionRule()); } 
	 EOF 
;

// Rule ProductionCondition
ruleProductionCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProductionConditionAccess().getAlternatives()); }
		(rule__ProductionCondition__Alternatives)
		{ after(grammarAccess.getProductionConditionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMatch
entryRuleMatch
:
{ before(grammarAccess.getMatchRule()); }
	 ruleMatch
{ after(grammarAccess.getMatchRule()); } 
	 EOF 
;

// Rule Match
ruleMatch 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMatchAccess().getGroup()); }
		(rule__Match__Group__0)
		{ after(grammarAccess.getMatchAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQuery
entryRuleQuery
:
{ before(grammarAccess.getQueryRule()); }
	 ruleQuery
{ after(grammarAccess.getQueryRule()); } 
	 EOF 
;

// Rule Query
ruleQuery 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQueryAccess().getGroup()); }
		(rule__Query__Group__0)
		{ after(grammarAccess.getQueryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProxy
entryRuleProxy
:
{ before(grammarAccess.getProxyRule()); }
	 ruleProxy
{ after(grammarAccess.getProxyRule()); } 
	 EOF 
;

// Rule Proxy
ruleProxy 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProxyAccess().getGroup()); }
		(rule__Proxy__Group__0)
		{ after(grammarAccess.getProxyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleScript
entryRuleScript
:
{ before(grammarAccess.getScriptRule()); }
	 ruleScript
{ after(grammarAccess.getScriptRule()); } 
	 EOF 
;

// Rule Script
ruleScript 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScriptAccess().getGroup()); }
		(rule__Script__Group__0)
		{ after(grammarAccess.getScriptAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProductionAction
entryRuleProductionAction
:
{ before(grammarAccess.getProductionActionRule()); }
	 ruleProductionAction
{ after(grammarAccess.getProductionActionRule()); } 
	 EOF 
;

// Rule ProductionAction
ruleProductionAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProductionActionAccess().getAlternatives()); }
		(rule__ProductionAction__Alternatives)
		{ after(grammarAccess.getProductionActionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdd
entryRuleAdd
:
{ before(grammarAccess.getAddRule()); }
	 ruleAdd
{ after(grammarAccess.getAddRule()); } 
	 EOF 
;

// Rule Add
ruleAdd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddAccess().getGroup()); }
		(rule__Add__Group__0)
		{ after(grammarAccess.getAddAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRemove
entryRuleRemove
:
{ before(grammarAccess.getRemoveRule()); }
	 ruleRemove
{ after(grammarAccess.getRemoveRule()); } 
	 EOF 
;

// Rule Remove
ruleRemove 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRemoveAccess().getGroup()); }
		(rule__Remove__Group__0)
		{ after(grammarAccess.getRemoveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModify
entryRuleModify
:
{ before(grammarAccess.getModifyRule()); }
	 ruleModify
{ after(grammarAccess.getModifyRule()); } 
	 EOF 
;

// Rule Modify
ruleModify 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModifyAccess().getSimpleSlotBlockParserRuleCall()); }
		ruleSimpleSlotBlock
		{ after(grammarAccess.getModifyAccess().getSimpleSlotBlockParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOutput
entryRuleOutput
:
{ before(grammarAccess.getOutputRule()); }
	 ruleOutput
{ after(grammarAccess.getOutputRule()); } 
	 EOF 
;

// Rule Output
ruleOutput 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOutputAccess().getGroup()); }
		(rule__Output__Group__0)
		{ after(grammarAccess.getOutputAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule SimpleSlotBlock
ruleSimpleSlotBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleSlotBlockAccess().getGroup()); }
		(rule__SimpleSlotBlock__Group__0)
		{ after(grammarAccess.getSimpleSlotBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIsaBlock
entryRuleIsaBlock
:
{ before(grammarAccess.getIsaBlockRule()); }
	 ruleIsaBlock
{ after(grammarAccess.getIsaBlockRule()); } 
	 EOF 
;

// Rule IsaBlock
ruleIsaBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIsaBlockAccess().getAlternatives()); }
		(rule__IsaBlock__Alternatives)
		{ after(grammarAccess.getIsaBlockAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleSlot
entryRuleSimpleSlot
:
{ before(grammarAccess.getSimpleSlotRule()); }
	 ruleSimpleSlot
{ after(grammarAccess.getSimpleSlotRule()); } 
	 EOF 
;

// Rule SimpleSlot
ruleSimpleSlot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleSlotAccess().getGroup()); }
		(rule__SimpleSlot__Group__0)
		{ after(grammarAccess.getSimpleSlotAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComplexSlot
entryRuleComplexSlot
:
{ before(grammarAccess.getComplexSlotRule()); }
	 ruleComplexSlot
{ after(grammarAccess.getComplexSlotRule()); } 
	 EOF 
;

// Rule ComplexSlot
ruleComplexSlot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComplexSlotAccess().getAlternatives()); }
		(rule__ComplexSlot__Alternatives)
		{ after(grammarAccess.getComplexSlotAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanOperation
entryRuleBooleanOperation
:
{ before(grammarAccess.getBooleanOperationRule()); }
	 ruleBooleanOperation
{ after(grammarAccess.getBooleanOperationRule()); } 
	 EOF 
;

// Rule BooleanOperation
ruleBooleanOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanOperationAccess().getAlternatives()); }
		(rule__BooleanOperation__Alternatives)
		{ after(grammarAccess.getBooleanOperationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionalSlot
entryRuleConditionalSlot
:
{ before(grammarAccess.getConditionalSlotRule()); }
	 ruleConditionalSlot
{ after(grammarAccess.getConditionalSlotRule()); } 
	 EOF 
;

// Rule ConditionalSlot
ruleConditionalSlot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionalSlotAccess().getGroup()); }
		(rule__ConditionalSlot__Group__0)
		{ after(grammarAccess.getConditionalSlotAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrSlot
entryRuleOrSlot
:
{ before(grammarAccess.getOrSlotRule()); }
	 ruleOrSlot
{ after(grammarAccess.getOrSlotRule()); } 
	 EOF 
;

// Rule OrSlot
ruleOrSlot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrSlotAccess().getGroup()); }
		(rule__OrSlot__Group__0)
		{ after(grammarAccess.getOrSlotAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAndSlot
entryRuleAndSlot
:
{ before(grammarAccess.getAndSlotRule()); }
	 ruleAndSlot
{ after(grammarAccess.getAndSlotRule()); } 
	 EOF 
;

// Rule AndSlot
ruleAndSlot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndSlotAccess().getGroup()); }
		(rule__AndSlot__Group__0)
		{ after(grammarAccess.getAndSlotAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNotSlot
entryRuleNotSlot
:
{ before(grammarAccess.getNotSlotRule()); }
	 ruleNotSlot
{ after(grammarAccess.getNotSlotRule()); } 
	 EOF 
;

// Rule NotSlot
ruleNotSlot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNotSlotAccess().getGroup()); }
		(rule__NotSlot__Group__0)
		{ after(grammarAccess.getNotSlotAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameter
entryRuleParameter
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterAccess().getGroup()); }
		(rule__Parameter__Group__0)
		{ after(grammarAccess.getParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParametersBlock
entryRuleParametersBlock
:
{ before(grammarAccess.getParametersBlockRule()); }
	 ruleParametersBlock
{ after(grammarAccess.getParametersBlockRule()); } 
	 EOF 
;

// Rule ParametersBlock
ruleParametersBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParametersBlockAccess().getGroup()); }
		(rule__ParametersBlock__Group__0)
		{ after(grammarAccess.getParametersBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValue
entryRuleValue
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueAccess().getAlternatives()); }
		(rule__Value__Alternatives)
		{ after(grammarAccess.getValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVARIABLE
entryRuleVARIABLE
:
{ before(grammarAccess.getVARIABLERule()); }
	 ruleVARIABLE
{ after(grammarAccess.getVARIABLERule()); } 
	 EOF 
;

// Rule VARIABLE
ruleVARIABLE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVARIABLEAccess().getGroup()); }
		(rule__VARIABLE__Group__0)
		{ after(grammarAccess.getVARIABLEAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNULL
entryRuleNULL
:
{ before(grammarAccess.getNULLRule()); }
	 ruleNULL
{ after(grammarAccess.getNULLRule()); } 
	 EOF 
;

// Rule NULL
ruleNULL 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNULLAccess().getNullKeyword()); }
		'null'
		{ after(grammarAccess.getNULLAccess().getNullKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBOOLEAN
entryRuleBOOLEAN
:
{ before(grammarAccess.getBOOLEANRule()); }
	 ruleBOOLEAN
{ after(grammarAccess.getBOOLEANRule()); } 
	 EOF 
;

// Rule BOOLEAN
ruleBOOLEAN 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBOOLEANAccess().getAlternatives()); }
		(rule__BOOLEAN__Alternatives)
		{ after(grammarAccess.getBOOLEANAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNUMERIC
entryRuleNUMERIC
:
{ before(grammarAccess.getNUMERICRule()); }
	 ruleNUMERIC
{ after(grammarAccess.getNUMERICRule()); } 
	 EOF 
;

// Rule NUMERIC
ruleNUMERIC 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNUMERICAccess().getGroup()); }
		(rule__NUMERIC__Group__0)
		{ after(grammarAccess.getNUMERICAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOVERRIDE
entryRuleOVERRIDE
:
{ before(grammarAccess.getOVERRIDERule()); }
	 ruleOVERRIDE
{ after(grammarAccess.getOVERRIDERule()); } 
	 EOF 
;

// Rule OVERRIDE
ruleOVERRIDE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOVERRIDEAccess().getOverrideKeyword()); }
		'@Override'
		{ after(grammarAccess.getOVERRIDEAccess().getOverrideKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Condition
ruleCondition
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getAlternatives()); }
		(rule__Condition__Alternatives)
		{ after(grammarAccess.getConditionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__Alternatives_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageDefAccess().getImportsAssignment_5_0()); }
		(rule__PackageDef__ImportsAssignment_5_0)
		{ after(grammarAccess.getPackageDefAccess().getImportsAssignment_5_0()); }
	)
	|
	(
		{ before(grammarAccess.getPackageDefAccess().getIncludesAssignment_5_1()); }
		(rule__PackageDef__IncludesAssignment_5_1)
		{ after(grammarAccess.getPackageDefAccess().getIncludesAssignment_5_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__Alternatives_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageDefAccess().getChunkTypesAssignment_8_0()); }
		(rule__PackageDef__ChunkTypesAssignment_8_0)
		{ after(grammarAccess.getPackageDefAccess().getChunkTypesAssignment_8_0()); }
	)
	|
	(
		{ before(grammarAccess.getPackageDefAccess().getChunkDefsAssignment_8_1()); }
		(rule__PackageDef__ChunkDefsAssignment_8_1)
		{ after(grammarAccess.getPackageDefAccess().getChunkDefsAssignment_8_1()); }
	)
	|
	(
		{ before(grammarAccess.getPackageDefAccess().getPatternsAssignment_8_2()); }
		(rule__PackageDef__PatternsAssignment_8_2)
		{ after(grammarAccess.getPackageDefAccess().getPatternsAssignment_8_2()); }
	)
	|
	(
		{ before(grammarAccess.getPackageDefAccess().getFunctionsAssignment_8_3()); }
		(rule__PackageDef__FunctionsAssignment_8_3)
		{ after(grammarAccess.getPackageDefAccess().getFunctionsAssignment_8_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BufferDef__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBufferDefAccess().getReadableAssignment_1_0()); }
		(rule__BufferDef__ReadableAssignment_1_0)
		{ after(grammarAccess.getBufferDefAccess().getReadableAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getBufferDefAccess().getWritableAssignment_1_1()); }
		(rule__BufferDef__WritableAssignment_1_1)
		{ after(grammarAccess.getBufferDefAccess().getWritableAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestDef__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequestDefAccess().getWildcardRequestAssignment_0_0()); }
		(rule__RequestDef__WildcardRequestAssignment_0_0)
		{ after(grammarAccess.getRequestDefAccess().getWildcardRequestAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRequestDefAccess().getRequestTypeAssignment_0_1()); }
		(rule__RequestDef__RequestTypeAssignment_0_1)
		{ after(grammarAccess.getRequestDefAccess().getRequestTypeAssignment_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestDef__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequestDefAccess().getWildcardResultAssignment_2_0()); }
		(rule__RequestDef__WildcardResultAssignment_2_0)
		{ after(grammarAccess.getRequestDefAccess().getWildcardResultAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getRequestDefAccess().getResultTypeAssignment_2_1()); }
		(rule__RequestDef__ResultTypeAssignment_2_1)
		{ after(grammarAccess.getRequestDefAccess().getResultTypeAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getVoidAssignment_1_0()); }
		(rule__Function__VoidAssignment_1_0)
		{ after(grammarAccess.getFunctionAccess().getVoidAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionAccess().getChunkAssignment_1_1()); }
		(rule__Function__ChunkAssignment_1_1)
		{ after(grammarAccess.getFunctionAccess().getChunkAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getForLoopStatementParserRuleCall_0()); }
		ruleForLoopStatement
		{ after(grammarAccess.getInstructionAccess().getForLoopStatementParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getIfThenElseStatementParserRuleCall_1()); }
		ruleIfThenElseStatement
		{ after(grammarAccess.getInstructionAccess().getIfThenElseStatementParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getRequestStatementParserRuleCall_2()); }
		ruleRequestStatement
		{ after(grammarAccess.getInstructionAccess().getRequestStatementParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getFunctionCallStatementParserRuleCall_3()); }
		ruleFunctionCallStatement
		{ after(grammarAccess.getInstructionAccess().getFunctionCallStatementParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getReturnStatementParserRuleCall_4()); }
		ruleReturnStatement
		{ after(grammarAccess.getInstructionAccess().getReturnStatementParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getMatchStatementParserRuleCall_5()); }
		ruleMatchStatement
		{ after(grammarAccess.getInstructionAccess().getMatchStatementParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getOutputStatementParserRuleCall_6()); }
		ruleOutputStatement
		{ after(grammarAccess.getInstructionAccess().getOutputStatementParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getAssignmentStatementParserRuleCall_7()); }
		ruleAssignmentStatement
		{ after(grammarAccess.getInstructionAccess().getAssignmentStatementParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getRemoveStatementParserRuleCall_8()); }
		ruleRemoveStatement
		{ after(grammarAccess.getInstructionAccess().getRemoveStatementParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getWhileDoStatementParserRuleCall_9()); }
		ruleWhileDoStatement
		{ after(grammarAccess.getInstructionAccess().getWhileDoStatementParserRuleCall_9()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getDoWhileStatementParserRuleCall_10()); }
		ruleDoWhileStatement
		{ after(grammarAccess.getInstructionAccess().getDoWhileStatementParserRuleCall_10()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getInsertionStatementParserRuleCall_11()); }
		ruleInsertionStatement
		{ after(grammarAccess.getInstructionAccess().getInsertionStatementParserRuleCall_11()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getRepeatUntilStatementParserRuleCall_12()); }
		ruleRepeatUntilStatement
		{ after(grammarAccess.getInstructionAccess().getRepeatUntilStatementParserRuleCall_12()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getUntilRepeatStatementParserRuleCall_13()); }
		ruleUntilRepeatStatement
		{ after(grammarAccess.getInstructionAccess().getUntilRepeatStatementParserRuleCall_13()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getRewardStatementParserRuleCall_14()); }
		ruleRewardStatement
		{ after(grammarAccess.getInstructionAccess().getRewardStatementParserRuleCall_14()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableValueAccess().getGroup_0()); }
		(rule__VariableValue__Group_0__0)
		{ after(grammarAccess.getVariableValueAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableValueAccess().getFunctionCallAssignment_1()); }
		(rule__VariableValue__FunctionCallAssignment_1)
		{ after(grammarAccess.getVariableValueAccess().getFunctionCallAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getChunkTypeParserRuleCall_0()); }
		ruleChunkType
		{ after(grammarAccess.getElementAccess().getChunkTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getChunksParserRuleCall_1()); }
		ruleChunks
		{ after(grammarAccess.getElementAccess().getChunksParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getProductionParserRuleCall_2()); }
		ruleProduction
		{ after(grammarAccess.getElementAccess().getProductionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getParametersParserRuleCall_3()); }
		ruleParameters
		{ after(grammarAccess.getElementAccess().getParametersParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductionCondition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProductionConditionAccess().getMatchParserRuleCall_0()); }
		ruleMatch
		{ after(grammarAccess.getProductionConditionAccess().getMatchParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getProductionConditionAccess().getQueryParserRuleCall_1()); }
		ruleQuery
		{ after(grammarAccess.getProductionConditionAccess().getQueryParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getProductionConditionAccess().getScriptParserRuleCall_2()); }
		ruleScript
		{ after(grammarAccess.getProductionConditionAccess().getScriptParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getProductionConditionAccess().getProxyParserRuleCall_3()); }
		ruleProxy
		{ after(grammarAccess.getProductionConditionAccess().getProxyParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductionAction__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProductionActionAccess().getAddParserRuleCall_0()); }
		ruleAdd
		{ after(grammarAccess.getProductionActionAccess().getAddParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getProductionActionAccess().getRemoveParserRuleCall_1()); }
		ruleRemove
		{ after(grammarAccess.getProductionActionAccess().getRemoveParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getProductionActionAccess().getModifyParserRuleCall_2()); }
		ruleModify
		{ after(grammarAccess.getProductionActionAccess().getModifyParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getProductionActionAccess().getScriptParserRuleCall_3()); }
		ruleScript
		{ after(grammarAccess.getProductionActionAccess().getScriptParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getProductionActionAccess().getProxyParserRuleCall_4()); }
		ruleProxy
		{ after(grammarAccess.getProductionActionAccess().getProxyParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getProductionActionAccess().getOutputParserRuleCall_5()); }
		ruleOutput
		{ after(grammarAccess.getProductionActionAccess().getOutputParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsaBlock__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIsaBlockAccess().getGroup_0()); }
		(rule__IsaBlock__Group_0__0)
		{ after(grammarAccess.getIsaBlockAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getIsaBlockAccess().getChunkAssignment_1()); }
		(rule__IsaBlock__ChunkAssignment_1)
		{ after(grammarAccess.getIsaBlockAccess().getChunkAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getIsaBlockAccess().getNameAssignment_2()); }
		(rule__IsaBlock__NameAssignment_2)
		{ after(grammarAccess.getIsaBlockAccess().getNameAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexSlot__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComplexSlotAccess().getBooleanOperationParserRuleCall_0()); }
		ruleBooleanOperation
		{ after(grammarAccess.getComplexSlotAccess().getBooleanOperationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getComplexSlotAccess().getConditionalSlotParserRuleCall_1()); }
		ruleConditionalSlot
		{ after(grammarAccess.getComplexSlotAccess().getConditionalSlotParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOperation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanOperationAccess().getOrSlotParserRuleCall_0()); }
		ruleOrSlot
		{ after(grammarAccess.getBooleanOperationAccess().getOrSlotParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanOperationAccess().getNotSlotParserRuleCall_1()); }
		ruleNotSlot
		{ after(grammarAccess.getBooleanOperationAccess().getNotSlotParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanOperationAccess().getAndSlotParserRuleCall_2()); }
		ruleAndSlot
		{ after(grammarAccess.getBooleanOperationAccess().getAndSlotParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalSlot__NameAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalSlotAccess().getNameIDTerminalRuleCall_0_0_0()); }
		RULE_ID
		{ after(grammarAccess.getConditionalSlotAccess().getNameIDTerminalRuleCall_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getConditionalSlotAccess().getNameVARIABLEParserRuleCall_0_0_1()); }
		ruleVARIABLE
		{ after(grammarAccess.getConditionalSlotAccess().getNameVARIABLEParserRuleCall_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getGroup_0()); }
		(rule__Value__Group_0__0)
		{ after(grammarAccess.getValueAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getStringAssignment_1()); }
		(rule__Value__StringAssignment_1)
		{ after(grammarAccess.getValueAccess().getStringAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getNumberAssignment_2()); }
		(rule__Value__NumberAssignment_2)
		{ after(grammarAccess.getValueAccess().getNumberAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getBooleanAssignment_3()); }
		(rule__Value__BooleanAssignment_3)
		{ after(grammarAccess.getValueAccess().getBooleanAssignment_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__NameAlternatives_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getNameVARIABLEParserRuleCall_0_1_0_0()); }
		ruleVARIABLE
		{ after(grammarAccess.getValueAccess().getNameVARIABLEParserRuleCall_0_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getNameIDTerminalRuleCall_0_1_0_1()); }
		RULE_ID
		{ after(grammarAccess.getValueAccess().getNameIDTerminalRuleCall_0_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getNameNULLParserRuleCall_0_1_0_2()); }
		ruleNULL
		{ after(grammarAccess.getValueAccess().getNameNULLParserRuleCall_0_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BOOLEAN__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBOOLEANAccess().getTrueKeyword_0()); }
		'true'
		{ after(grammarAccess.getBOOLEANAccess().getTrueKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getBOOLEANAccess().getFalseKeyword_1()); }
		'false'
		{ after(grammarAccess.getBOOLEANAccess().getFalseKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getEQUALSEnumLiteralDeclaration_0()); }
		('=')
		{ after(grammarAccess.getConditionAccess().getEQUALSEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getConditionAccess().getLTEnumLiteralDeclaration_1()); }
		('<')
		{ after(grammarAccess.getConditionAccess().getLTEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getConditionAccess().getLTEEnumLiteralDeclaration_2()); }
		('<=')
		{ after(grammarAccess.getConditionAccess().getLTEEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getConditionAccess().getGTEnumLiteralDeclaration_3()); }
		('>')
		{ after(grammarAccess.getConditionAccess().getGTEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getConditionAccess().getGTEEnumLiteralDeclaration_4()); }
		('>=')
		{ after(grammarAccess.getConditionAccess().getGTEEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getConditionAccess().getNOTEnumLiteralDeclaration_5()); }
		('!=')
		{ after(grammarAccess.getConditionAccess().getNOTEnumLiteralDeclaration_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDef__Group__0__Impl
	rule__PackageDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDefAccess().getNamespaceKeyword_0()); }
	'namespace'
	{ after(grammarAccess.getPackageDefAccess().getNamespaceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDef__Group__1__Impl
	rule__PackageDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDefAccess().getNameAssignment_1()); }
	(rule__PackageDef__NameAssignment_1)
	{ after(grammarAccess.getPackageDefAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDef__Group__2__Impl
	rule__PackageDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDefAccess().getTargetKeyword_2()); }
	'target'
	{ after(grammarAccess.getPackageDefAccess().getTargetKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDef__Group__3__Impl
	rule__PackageDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDefAccess().getTargetAssignment_3()); }
	(rule__PackageDef__TargetAssignment_3)
	{ after(grammarAccess.getPackageDefAccess().getTargetAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDef__Group__4__Impl
	rule__PackageDef__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDefAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getPackageDefAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDef__Group__5__Impl
	rule__PackageDef__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDefAccess().getAlternatives_5()); }
	(rule__PackageDef__Alternatives_5)*
	{ after(grammarAccess.getPackageDefAccess().getAlternatives_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDef__Group__6__Impl
	rule__PackageDef__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDefAccess().getGeneratorAssignment_6()); }
	(rule__PackageDef__GeneratorAssignment_6)?
	{ after(grammarAccess.getPackageDefAccess().getGeneratorAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDef__Group__7__Impl
	rule__PackageDef__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDefAccess().getBufferDefsAssignment_7()); }
	(rule__PackageDef__BufferDefsAssignment_7)*
	{ after(grammarAccess.getPackageDefAccess().getBufferDefsAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDef__Group__8__Impl
	rule__PackageDef__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDefAccess().getAlternatives_8()); }
	(rule__PackageDef__Alternatives_8)*
	{ after(grammarAccess.getPackageDefAccess().getAlternatives_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDef__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDefAccess().getRightCurlyBracketKeyword_9()); }
	'}'
	{ after(grammarAccess.getPackageDefAccess().getRightCurlyBracketKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Include__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Include__Group__0__Impl
	rule__Include__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Include__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIncludeAccess().getIncludeKeyword_0()); }
	'include'
	{ after(grammarAccess.getIncludeAccess().getIncludeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Include__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Include__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Include__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIncludeAccess().getImportedNamespaceAssignment_1()); }
	(rule__Include__ImportedNamespaceAssignment_1)
	{ after(grammarAccess.getIncludeAccess().getImportedNamespaceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BufferDef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BufferDef__Group__0__Impl
	rule__BufferDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BufferDef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBufferDefAccess().getNameAssignment_0()); }
	(rule__BufferDef__NameAssignment_0)
	{ after(grammarAccess.getBufferDefAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BufferDef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BufferDef__Group__1__Impl
	rule__BufferDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BufferDef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBufferDefAccess().getAlternatives_1()); }
	(rule__BufferDef__Alternatives_1)?
	{ after(grammarAccess.getBufferDefAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BufferDef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BufferDef__Group__2__Impl
	rule__BufferDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BufferDef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBufferDefAccess().getErrorAssignment_2()); }
	(rule__BufferDef__ErrorAssignment_2)?
	{ after(grammarAccess.getBufferDefAccess().getErrorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BufferDef__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BufferDef__Group__3__Impl
	rule__BufferDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BufferDef__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBufferDefAccess().getRequestsKeyword_3()); }
	'requests'
	{ after(grammarAccess.getBufferDefAccess().getRequestsKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BufferDef__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BufferDef__Group__4__Impl
	rule__BufferDef__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BufferDef__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBufferDefAccess().getRequestsAssignment_4()); }
	(rule__BufferDef__RequestsAssignment_4)
	{ after(grammarAccess.getBufferDefAccess().getRequestsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BufferDef__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BufferDef__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BufferDef__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBufferDefAccess().getGroup_5()); }
	(rule__BufferDef__Group_5__0)*
	{ after(grammarAccess.getBufferDefAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BufferDef__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BufferDef__Group_5__0__Impl
	rule__BufferDef__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BufferDef__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBufferDefAccess().getCommaKeyword_5_0()); }
	','
	{ after(grammarAccess.getBufferDefAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BufferDef__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BufferDef__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BufferDef__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBufferDefAccess().getRequestsAssignment_5_1()); }
	(rule__BufferDef__RequestsAssignment_5_1)
	{ after(grammarAccess.getBufferDefAccess().getRequestsAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RequestDef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequestDef__Group__0__Impl
	rule__RequestDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestDef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequestDefAccess().getAlternatives_0()); }
	(rule__RequestDef__Alternatives_0)
	{ after(grammarAccess.getRequestDefAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestDef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequestDef__Group__1__Impl
	rule__RequestDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestDef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequestDefAccess().getHyphenMinusGreaterThanSignKeyword_1()); }
	'->'
	{ after(grammarAccess.getRequestDefAccess().getHyphenMinusGreaterThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestDef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequestDef__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestDef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequestDefAccess().getAlternatives_2()); }
	(rule__RequestDef__Alternatives_2)?
	{ after(grammarAccess.getRequestDefAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GeneratorDef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneratorDef__Group__0__Impl
	rule__GeneratorDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneratorDef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneratorDefAccess().getGeneratorKeyword_0()); }
	'@generator'
	{ after(grammarAccess.getGeneratorDefAccess().getGeneratorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneratorDef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneratorDef__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneratorDef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneratorDefAccess().getParametersAssignment_1()); }
	(rule__GeneratorDef__ParametersAssignment_1)
	{ after(grammarAccess.getGeneratorDefAccess().getParametersAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pattern__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group__0__Impl
	rule__Pattern__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getNameAssignment_0()); }
	(rule__Pattern__NameAssignment_0)
	{ after(grammarAccess.getPatternAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group__1__Impl
	rule__Pattern__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getPatternAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group__2__Impl
	rule__Pattern__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getPatternAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group__3__Impl
	rule__Pattern__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getGroup_3()); }
	(rule__Pattern__Group_3__0)?
	{ after(grammarAccess.getPatternAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group__4__Impl
	rule__Pattern__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getSlotsAssignment_4()); }
	(rule__Pattern__SlotsAssignment_4)*
	{ after(grammarAccess.getPatternAccess().getSlotsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getPatternAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pattern__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group_3__0__Impl
	rule__Pattern__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getIsaKeyword_3_0()); }
	'isa'
	{ after(grammarAccess.getPatternAccess().getIsaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getTypeAssignment_3_1()); }
	(rule__Pattern__TypeAssignment_3_1)
	{ after(grammarAccess.getPatternAccess().getTypeAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getFunctionKeyword_0()); }
	'function'
	{ after(grammarAccess.getFunctionAccess().getFunctionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__1__Impl
	rule__Function__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getAlternatives_1()); }
	(rule__Function__Alternatives_1)
	{ after(grammarAccess.getFunctionAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__2__Impl
	rule__Function__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getNameAssignment_2()); }
	(rule__Function__NameAssignment_2)
	{ after(grammarAccess.getFunctionAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__3__Impl
	rule__Function__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_3()); }
	'('
	{ after(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__4__Impl
	rule__Function__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getGroup_4()); }
	(rule__Function__Group_4__0)?
	{ after(grammarAccess.getFunctionAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__5__Impl
	rule__Function__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__6__Impl
	rule__Function__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getAssumedContentsAssignment_6()); }
	(rule__Function__AssumedContentsAssignment_6)?
	{ after(grammarAccess.getFunctionAccess().getAssumedContentsAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__7__Impl
	rule__Function__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getRetainedContentsAssignment_7()); }
	(rule__Function__RetainedContentsAssignment_7)?
	{ after(grammarAccess.getFunctionAccess().getRetainedContentsAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__8__Impl
	rule__Function__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getLeftCurlyBracketKeyword_8()); }
	'{'
	{ after(grammarAccess.getFunctionAccess().getLeftCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__9__Impl
	rule__Function__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getVariablesAssignment_9()); }
	(rule__Function__VariablesAssignment_9)*
	{ after(grammarAccess.getFunctionAccess().getVariablesAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__10__Impl
	rule__Function__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getFunctionAccess().getInstructionsAssignment_10()); }
		(rule__Function__InstructionsAssignment_10)
		{ after(grammarAccess.getFunctionAccess().getInstructionsAssignment_10()); }
	)
	(
		{ before(grammarAccess.getFunctionAccess().getInstructionsAssignment_10()); }
		(rule__Function__InstructionsAssignment_10)*
		{ after(grammarAccess.getFunctionAccess().getInstructionsAssignment_10()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getRightCurlyBracketKeyword_11()); }
	'}'
	{ after(grammarAccess.getFunctionAccess().getRightCurlyBracketKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_4__0__Impl
	rule__Function__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getSlotsAssignment_4_0()); }
	(rule__Function__SlotsAssignment_4_0)
	{ after(grammarAccess.getFunctionAccess().getSlotsAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getGroup_4_1()); }
	(rule__Function__Group_4_1__0)*
	{ after(grammarAccess.getFunctionAccess().getGroup_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_4_1__0__Impl
	rule__Function__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getCommaKeyword_4_1_0()); }
	','
	{ after(grammarAccess.getFunctionAccess().getCommaKeyword_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getSlotsAssignment_4_1_1()); }
	(rule__Function__SlotsAssignment_4_1_1)
	{ after(grammarAccess.getFunctionAccess().getSlotsAssignment_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WithAsStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WithAsStatement__Group__0__Impl
	rule__WithAsStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WithAsStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWithAsStatementAccess().getWithKeyword_0()); }
	'with'
	{ after(grammarAccess.getWithAsStatementAccess().getWithKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WithAsStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WithAsStatement__Group__1__Impl
	rule__WithAsStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WithAsStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWithAsStatementAccess().getAssumedAssignment_1()); }
	(rule__WithAsStatement__AssumedAssignment_1)
	{ after(grammarAccess.getWithAsStatementAccess().getAssumedAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WithAsStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WithAsStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WithAsStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWithAsStatementAccess().getGroup_2()); }
	(rule__WithAsStatement__Group_2__0)*
	{ after(grammarAccess.getWithAsStatementAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WithAsStatement__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WithAsStatement__Group_2__0__Impl
	rule__WithAsStatement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WithAsStatement__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWithAsStatementAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getWithAsStatementAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WithAsStatement__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WithAsStatement__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WithAsStatement__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWithAsStatementAccess().getAssumedAssignment_2_1()); }
	(rule__WithAsStatement__AssumedAssignment_2_1)
	{ after(grammarAccess.getWithAsStatementAccess().getAssumedAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RetainAsStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RetainAsStatement__Group__0__Impl
	rule__RetainAsStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RetainAsStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRetainAsStatementAccess().getRetainKeyword_0()); }
	'retain'
	{ after(grammarAccess.getRetainAsStatementAccess().getRetainKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RetainAsStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RetainAsStatement__Group__1__Impl
	rule__RetainAsStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RetainAsStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRetainAsStatementAccess().getRetainedAssignment_1()); }
	(rule__RetainAsStatement__RetainedAssignment_1)
	{ after(grammarAccess.getRetainAsStatementAccess().getRetainedAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RetainAsStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RetainAsStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RetainAsStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRetainAsStatementAccess().getGroup_2()); }
	(rule__RetainAsStatement__Group_2__0)*
	{ after(grammarAccess.getRetainAsStatementAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RetainAsStatement__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RetainAsStatement__Group_2__0__Impl
	rule__RetainAsStatement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RetainAsStatement__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRetainAsStatementAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getRetainAsStatementAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RetainAsStatement__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RetainAsStatement__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RetainAsStatement__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRetainAsStatementAccess().getRetainedAssignment_2_1()); }
	(rule__RetainAsStatement__RetainedAssignment_2_1)
	{ after(grammarAccess.getRetainAsStatementAccess().getRetainedAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AsStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AsStatement__Group__0__Impl
	rule__AsStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AsStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAsStatementAccess().getBufferAssignment_0()); }
	(rule__AsStatement__BufferAssignment_0)
	{ after(grammarAccess.getAsStatementAccess().getBufferAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AsStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AsStatement__Group__1__Impl
	rule__AsStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AsStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAsStatementAccess().getAsKeyword_1()); }
	'as'
	{ after(grammarAccess.getAsStatementAccess().getAsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AsStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AsStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AsStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAsStatementAccess().getTypeAssignment_2()); }
	(rule__AsStatement__TypeAssignment_2)
	{ after(grammarAccess.getAsStatementAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableStatement__Group__0__Impl
	rule__VariableStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableStatementAccess().getSlotKeyword_0()); }
	'slot'
	{ after(grammarAccess.getVariableStatementAccess().getSlotKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableStatementAccess().getAssignmentAssignment_1()); }
	(rule__VariableStatement__AssignmentAssignment_1)
	{ after(grammarAccess.getVariableStatementAccess().getAssignmentAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__0__Impl
	rule__Block__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getBlockAction_0()); }
	()
	{ after(grammarAccess.getBlockAccess().getBlockAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__1__Impl
	rule__Block__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__2__Impl
	rule__Block__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getBlockAccess().getInstructionsAssignment_2()); }
		(rule__Block__InstructionsAssignment_2)
		{ after(grammarAccess.getBlockAccess().getInstructionsAssignment_2()); }
	)
	(
		{ before(grammarAccess.getBlockAccess().getInstructionsAssignment_2()); }
		(rule__Block__InstructionsAssignment_2)*
		{ after(grammarAccess.getBlockAccess().getInstructionsAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InsertionStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InsertionStatement__Group__0__Impl
	rule__InsertionStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertionStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertionStatementAccess().getLessThanSignLeftSquareBracketKeyword_0()); }
	'<['
	{ after(grammarAccess.getInsertionStatementAccess().getLessThanSignLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertionStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InsertionStatement__Group__1__Impl
	rule__InsertionStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertionStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertionStatementAccess().getEntryStateAssignment_1()); }
	(rule__InsertionStatement__EntryStateAssignment_1)
	{ after(grammarAccess.getInsertionStatementAccess().getEntryStateAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertionStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InsertionStatement__Group__2__Impl
	rule__InsertionStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertionStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertionStatementAccess().getCommaKeyword_2()); }
	','
	{ after(grammarAccess.getInsertionStatementAccess().getCommaKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertionStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InsertionStatement__Group__3__Impl
	rule__InsertionStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertionStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertionStatementAccess().getExitStateAssignment_3()); }
	(rule__InsertionStatement__ExitStateAssignment_3)
	{ after(grammarAccess.getInsertionStatementAccess().getExitStateAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertionStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InsertionStatement__Group__4__Impl
	rule__InsertionStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertionStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertionStatementAccess().getGroup_4()); }
	(rule__InsertionStatement__Group_4__0)?
	{ after(grammarAccess.getInsertionStatementAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertionStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InsertionStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertionStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertionStatementAccess().getRightSquareBracketGreaterThanSignKeyword_5()); }
	']>'
	{ after(grammarAccess.getInsertionStatementAccess().getRightSquareBracketGreaterThanSignKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InsertionStatement__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InsertionStatement__Group_4__0__Impl
	rule__InsertionStatement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertionStatement__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertionStatementAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getInsertionStatementAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertionStatement__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InsertionStatement__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertionStatement__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertionStatementAccess().getShouldGenerateAssignment_4_1()); }
	(rule__InsertionStatement__ShouldGenerateAssignment_4_1)
	{ after(grammarAccess.getInsertionStatementAccess().getShouldGenerateAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallStatement__Group__0__Impl
	rule__FunctionCallStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallStatementAccess().getFunctionAssignment_0()); }
	(rule__FunctionCallStatement__FunctionAssignment_0)
	{ after(grammarAccess.getFunctionCallStatementAccess().getFunctionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallStatement__Group__1__Impl
	rule__FunctionCallStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallStatementAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getFunctionCallStatementAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallStatement__Group__2__Impl
	rule__FunctionCallStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallStatementAccess().getGroup_2()); }
	(rule__FunctionCallStatement__Group_2__0)?
	{ after(grammarAccess.getFunctionCallStatementAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallStatementAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getFunctionCallStatementAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallStatement__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallStatement__Group_2__0__Impl
	rule__FunctionCallStatement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallStatement__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallStatementAccess().getParametersAssignment_2_0()); }
	(rule__FunctionCallStatement__ParametersAssignment_2_0)
	{ after(grammarAccess.getFunctionCallStatementAccess().getParametersAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallStatement__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallStatement__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallStatement__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallStatementAccess().getGroup_2_1()); }
	(rule__FunctionCallStatement__Group_2_1__0)*
	{ after(grammarAccess.getFunctionCallStatementAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallStatement__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallStatement__Group_2_1__0__Impl
	rule__FunctionCallStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallStatement__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallStatementAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getFunctionCallStatementAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallStatement__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallStatement__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallStatement__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallStatementAccess().getParametersAssignment_2_1_1()); }
	(rule__FunctionCallStatement__ParametersAssignment_2_1_1)
	{ after(grammarAccess.getFunctionCallStatementAccess().getParametersAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignmentStatement__Group__0__Impl
	rule__AssignmentStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentStatementAccess().getReferenceAssignment_0()); }
	(rule__AssignmentStatement__ReferenceAssignment_0)
	{ after(grammarAccess.getAssignmentStatementAccess().getReferenceAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignmentStatement__Group__1__Impl
	rule__AssignmentStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentStatementAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getAssignmentStatementAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignmentStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentStatementAccess().getAssignmentAssignment_2()); }
	(rule__AssignmentStatement__AssignmentAssignment_2)
	{ after(grammarAccess.getAssignmentStatementAccess().getAssignmentAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableReference__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableReference__Group__0__Impl
	rule__VariableReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableReferenceAccess().getGroup_0()); }
	(rule__VariableReference__Group_0__0)?
	{ after(grammarAccess.getVariableReferenceAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableReference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableReferenceAccess().getNameAssignment_1()); }
	(rule__VariableReference__NameAssignment_1)
	{ after(grammarAccess.getVariableReferenceAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableReference__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableReference__Group_0__0__Impl
	rule__VariableReference__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableReferenceAccess().getBufferAssignment_0_0()); }
	(rule__VariableReference__BufferAssignment_0_0)
	{ after(grammarAccess.getVariableReferenceAccess().getBufferAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableReference__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableReferenceAccess().getFullStopKeyword_0_1()); }
	'.'
	{ after(grammarAccess.getVariableReferenceAccess().getFullStopKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableValue__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableValue__Group_0__0__Impl
	rule__VariableValue__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableValue__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableValueAccess().getGroup_0_0()); }
	(rule__VariableValue__Group_0_0__0)?
	{ after(grammarAccess.getVariableValueAccess().getGroup_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableValue__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableValue__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableValue__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableValueAccess().getValueAssignment_0_1()); }
	(rule__VariableValue__ValueAssignment_0_1)
	{ after(grammarAccess.getVariableValueAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableValue__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableValue__Group_0_0__0__Impl
	rule__VariableValue__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableValue__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableValueAccess().getBufferAssignment_0_0_0()); }
	(rule__VariableValue__BufferAssignment_0_0_0)
	{ after(grammarAccess.getVariableValueAccess().getBufferAssignment_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableValue__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableValue__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableValue__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableValueAccess().getFullStopKeyword_0_0_1()); }
	'.'
	{ after(grammarAccess.getVariableValueAccess().getFullStopKeyword_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnVariableReference__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnVariableReference__Group__0__Impl
	rule__ReturnVariableReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnVariableReference__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnVariableReferenceAccess().getGroup_0()); }
	(rule__ReturnVariableReference__Group_0__0)?
	{ after(grammarAccess.getReturnVariableReferenceAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnVariableReference__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnVariableReference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnVariableReference__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnVariableReferenceAccess().getValueAssignment_1()); }
	(rule__ReturnVariableReference__ValueAssignment_1)
	{ after(grammarAccess.getReturnVariableReferenceAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnVariableReference__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnVariableReference__Group_0__0__Impl
	rule__ReturnVariableReference__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnVariableReference__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnVariableReferenceAccess().getBufferAssignment_0_0()); }
	(rule__ReturnVariableReference__BufferAssignment_0_0)
	{ after(grammarAccess.getReturnVariableReferenceAccess().getBufferAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnVariableReference__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnVariableReference__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnVariableReference__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnVariableReferenceAccess().getFullStopKeyword_0_1()); }
	'.'
	{ after(grammarAccess.getReturnVariableReferenceAccess().getFullStopKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnStatement__Group__0__Impl
	rule__ReturnStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnStatementAccess().getReturnStatementAction_0()); }
	()
	{ after(grammarAccess.getReturnStatementAccess().getReturnStatementAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnStatement__Group__1__Impl
	rule__ReturnStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnStatementAccess().getReturnKeyword_1()); }
	'return'
	{ after(grammarAccess.getReturnStatementAccess().getReturnKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnStatementAccess().getReferenceAssignment_2()); }
	(rule__ReturnStatement__ReferenceAssignment_2)?
	{ after(grammarAccess.getReturnStatementAccess().getReferenceAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RemoveStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RemoveStatement__Group__0__Impl
	rule__RemoveStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveStatementAccess().getRemoveKeyword_0()); }
	'remove'
	{ after(grammarAccess.getRemoveStatementAccess().getRemoveKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RemoveStatement__Group__1__Impl
	rule__RemoveStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveStatementAccess().getBuffersAssignment_1()); }
	(rule__RemoveStatement__BuffersAssignment_1)
	{ after(grammarAccess.getRemoveStatementAccess().getBuffersAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RemoveStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveStatementAccess().getGroup_2()); }
	(rule__RemoveStatement__Group_2__0)*
	{ after(grammarAccess.getRemoveStatementAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RemoveStatement__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RemoveStatement__Group_2__0__Impl
	rule__RemoveStatement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveStatement__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveStatementAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getRemoveStatementAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveStatement__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RemoveStatement__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveStatement__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveStatementAccess().getBuffersAssignment_2_1()); }
	(rule__RemoveStatement__BuffersAssignment_2_1)
	{ after(grammarAccess.getRemoveStatementAccess().getBuffersAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RequestStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequestStatement__Group__0__Impl
	rule__RequestStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequestStatementAccess().getForcedAssignment_0()); }
	(rule__RequestStatement__ForcedAssignment_0)?
	{ after(grammarAccess.getRequestStatementAccess().getForcedAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequestStatement__Group__1__Impl
	rule__RequestStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequestStatementAccess().getRequestKeyword_1()); }
	'request'
	{ after(grammarAccess.getRequestStatementAccess().getRequestKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequestStatement__Group__2__Impl
	rule__RequestStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequestStatementAccess().getBufferAssignment_2()); }
	(rule__RequestStatement__BufferAssignment_2)
	{ after(grammarAccess.getRequestStatementAccess().getBufferAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequestStatement__Group__3__Impl
	rule__RequestStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequestStatementAccess().getLeftParenthesisKeyword_3()); }
	'('
	{ after(grammarAccess.getRequestStatementAccess().getLeftParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequestStatement__Group__4__Impl
	rule__RequestStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequestStatementAccess().getPatternReferenceAssignment_4()); }
	(rule__RequestStatement__PatternReferenceAssignment_4)?
	{ after(grammarAccess.getRequestStatementAccess().getPatternReferenceAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequestStatement__Group__5__Impl
	rule__RequestStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequestStatementAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getRequestStatementAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestStatement__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequestStatement__Group__6__Impl
	rule__RequestStatement__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestStatement__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequestStatementAccess().getGroup_6()); }
	(rule__RequestStatement__Group_6__0)?
	{ after(grammarAccess.getRequestStatementAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestStatement__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequestStatement__Group__7__Impl
	rule__RequestStatement__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestStatement__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequestStatementAccess().getGroup_7()); }
	(rule__RequestStatement__Group_7__0)?
	{ after(grammarAccess.getRequestStatementAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestStatement__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequestStatement__Group__8__Impl
	rule__RequestStatement__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestStatement__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequestStatementAccess().getMappingAssignment_8()); }
	(rule__RequestStatement__MappingAssignment_8)?
	{ after(grammarAccess.getRequestStatementAccess().getMappingAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestStatement__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequestStatement__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestStatement__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequestStatementAccess().getHandlerAssignment_9()); }
	(rule__RequestStatement__HandlerAssignment_9)?
	{ after(grammarAccess.getRequestStatementAccess().getHandlerAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RequestStatement__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequestStatement__Group_6__0__Impl
	rule__RequestStatement__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestStatement__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequestStatementAccess().getCommaKeyword_6_0()); }
	','
	{ after(grammarAccess.getRequestStatementAccess().getCommaKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestStatement__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequestStatement__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestStatement__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequestStatementAccess().getBindingsAssignment_6_1()); }
	(rule__RequestStatement__BindingsAssignment_6_1)
	{ after(grammarAccess.getRequestStatementAccess().getBindingsAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RequestStatement__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequestStatement__Group_7__0__Impl
	rule__RequestStatement__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestStatement__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequestStatementAccess().getAsKeyword_7_0()); }
	'as'
	{ after(grammarAccess.getRequestStatementAccess().getAsKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestStatement__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequestStatement__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestStatement__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequestStatementAccess().getCastAssignment_7_1()); }
	(rule__RequestStatement__CastAssignment_7_1)
	{ after(grammarAccess.getRequestStatementAccess().getCastAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RepeatUntilStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepeatUntilStatement__Group__0__Impl
	rule__RepeatUntilStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatUntilStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepeatUntilStatementAccess().getRepeatAssignment_0()); }
	(rule__RepeatUntilStatement__RepeatAssignment_0)
	{ after(grammarAccess.getRepeatUntilStatementAccess().getRepeatAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatUntilStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepeatUntilStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatUntilStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepeatUntilStatementAccess().getUntilAssignment_1()); }
	(rule__RepeatUntilStatement__UntilAssignment_1)
	{ after(grammarAccess.getRepeatUntilStatementAccess().getUntilAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UntilRepeatStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UntilRepeatStatement__Group__0__Impl
	rule__UntilRepeatStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UntilRepeatStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUntilRepeatStatementAccess().getUntilAssignment_0()); }
	(rule__UntilRepeatStatement__UntilAssignment_0)
	{ after(grammarAccess.getUntilRepeatStatementAccess().getUntilAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UntilRepeatStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UntilRepeatStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UntilRepeatStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUntilRepeatStatementAccess().getBlockAssignment_1()); }
	(rule__UntilRepeatStatement__BlockAssignment_1)
	{ after(grammarAccess.getUntilRepeatStatementAccess().getBlockAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhileDoStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileDoStatement__Group__0__Impl
	rule__WhileDoStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileDoStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileDoStatementAccess().getWhileAssignment_0()); }
	(rule__WhileDoStatement__WhileAssignment_0)
	{ after(grammarAccess.getWhileDoStatementAccess().getWhileAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileDoStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileDoStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileDoStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileDoStatementAccess().getBlockAssignment_1()); }
	(rule__WhileDoStatement__BlockAssignment_1)
	{ after(grammarAccess.getWhileDoStatementAccess().getBlockAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DoWhileStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoWhileStatement__Group__0__Impl
	rule__DoWhileStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoWhileStatementAccess().getDoKeyword_0()); }
	'do'
	{ after(grammarAccess.getDoWhileStatementAccess().getDoKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoWhileStatement__Group__1__Impl
	rule__DoWhileStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoWhileStatementAccess().getBlockAssignment_1()); }
	(rule__DoWhileStatement__BlockAssignment_1)
	{ after(grammarAccess.getDoWhileStatementAccess().getBlockAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoWhileStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoWhileStatementAccess().getWhileAssignment_2()); }
	(rule__DoWhileStatement__WhileAssignment_2)
	{ after(grammarAccess.getDoWhileStatementAccess().getWhileAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Repeat__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Repeat__Group__0__Impl
	rule__Repeat__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepeatAccess().getRepeatKeyword_0()); }
	'repeat'
	{ after(grammarAccess.getRepeatAccess().getRepeatKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Repeat__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepeatAccess().getBlockAssignment_1()); }
	(rule__Repeat__BlockAssignment_1)
	{ after(grammarAccess.getRepeatAccess().getBlockAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RewardStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RewardStatement__Group__0__Impl
	rule__RewardStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RewardStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRewardStatementAccess().getRewardKeyword_0()); }
	'reward'
	{ after(grammarAccess.getRewardStatementAccess().getRewardKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RewardStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RewardStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RewardStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRewardStatementAccess().getRewardAssignment_1()); }
	(rule__RewardStatement__RewardAssignment_1)
	{ after(grammarAccess.getRewardStatementAccess().getRewardAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Until__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Until__Group__0__Impl
	rule__Until__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Until__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUntilAccess().getUntilKeyword_0()); }
	'until'
	{ after(grammarAccess.getUntilAccess().getUntilKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Until__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Until__Group__1__Impl
	rule__Until__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Until__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUntilAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getUntilAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Until__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Until__Group__2__Impl
	rule__Until__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Until__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUntilAccess().getBindingsAssignment_2()); }
	(rule__Until__BindingsAssignment_2)
	{ after(grammarAccess.getUntilAccess().getBindingsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Until__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Until__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Until__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUntilAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getUntilAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__While__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__0__Impl
	rule__While__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getWhileKeyword_0()); }
	'while'
	{ after(grammarAccess.getWhileAccess().getWhileKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__1__Impl
	rule__While__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getWhileAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__2__Impl
	rule__While__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getBindingsAssignment_2()); }
	(rule__While__BindingsAssignment_2)
	{ after(grammarAccess.getWhileAccess().getBindingsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getWhileAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MatchStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MatchStatement__Group__0__Impl
	rule__MatchStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchStatementAccess().getMatchKeyword_0()); }
	'match'
	{ after(grammarAccess.getMatchStatementAccess().getMatchKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MatchStatement__Group__1__Impl
	rule__MatchStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchStatementAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getMatchStatementAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MatchStatement__Group__2__Impl
	rule__MatchStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchStatementAccess().getCasesAssignment_2()); }
	(rule__MatchStatement__CasesAssignment_2)
	{ after(grammarAccess.getMatchStatementAccess().getCasesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MatchStatement__Group__3__Impl
	rule__MatchStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchStatementAccess().getCasesAssignment_3()); }
	(rule__MatchStatement__CasesAssignment_3)*
	{ after(grammarAccess.getMatchStatementAccess().getCasesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MatchStatement__Group__4__Impl
	rule__MatchStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchStatementAccess().getDefaultKeyword_4()); }
	'default'
	{ after(grammarAccess.getMatchStatementAccess().getDefaultKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MatchStatement__Group__5__Impl
	rule__MatchStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchStatementAccess().getColonKeyword_5()); }
	':'
	{ after(grammarAccess.getMatchStatementAccess().getColonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchStatement__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MatchStatement__Group__6__Impl
	rule__MatchStatement__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchStatement__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchStatementAccess().getDefaultBlockAssignment_6()); }
	(rule__MatchStatement__DefaultBlockAssignment_6)
	{ after(grammarAccess.getMatchStatementAccess().getDefaultBlockAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchStatement__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MatchStatement__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchStatement__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchStatementAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getMatchStatementAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CaseStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseStatement__Group__0__Impl
	rule__CaseStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseStatementAccess().getCaseKeyword_0()); }
	'case'
	{ after(grammarAccess.getCaseStatementAccess().getCaseKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseStatement__Group__1__Impl
	rule__CaseStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseStatementAccess().getBindingsAssignment_1()); }
	(rule__CaseStatement__BindingsAssignment_1)
	{ after(grammarAccess.getCaseStatementAccess().getBindingsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseStatement__Group__2__Impl
	rule__CaseStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseStatementAccess().getGroup_2()); }
	(rule__CaseStatement__Group_2__0)?
	{ after(grammarAccess.getCaseStatementAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseStatement__Group__3__Impl
	rule__CaseStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseStatementAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getCaseStatementAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseStatementAccess().getBlockAssignment_4()); }
	(rule__CaseStatement__BlockAssignment_4)
	{ after(grammarAccess.getCaseStatementAccess().getBlockAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CaseStatement__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseStatement__Group_2__0__Impl
	rule__CaseStatement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseStatementAccess().getLeftSquareBracketKeyword_2_0()); }
	'['
	{ after(grammarAccess.getCaseStatementAccess().getLeftSquareBracketKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseStatement__Group_2__1__Impl
	rule__CaseStatement__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseStatementAccess().getPriorityAssignment_2_1()); }
	(rule__CaseStatement__PriorityAssignment_2_1)
	{ after(grammarAccess.getCaseStatementAccess().getPriorityAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseStatement__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseStatementAccess().getRightSquareBracketKeyword_2_2()); }
	']'
	{ after(grammarAccess.getCaseStatementAccess().getRightSquareBracketKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OutputStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputStatement__Group__0__Impl
	rule__OutputStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputStatementAccess().getOutputKeyword_0()); }
	'output'
	{ after(grammarAccess.getOutputStatementAccess().getOutputKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputStatement__Group__1__Impl
	rule__OutputStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputStatementAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getOutputStatementAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputStatement__Group__2__Impl
	rule__OutputStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputStatementAccess().getStringAssignment_2()); }
	(rule__OutputStatement__StringAssignment_2)
	{ after(grammarAccess.getOutputStatementAccess().getStringAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputStatement__Group__3__Impl
	rule__OutputStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputStatementAccess().getGroup_3()); }
	(rule__OutputStatement__Group_3__0)?
	{ after(grammarAccess.getOutputStatementAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputStatementAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getOutputStatementAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OutputStatement__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputStatement__Group_3__0__Impl
	rule__OutputStatement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputStatement__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputStatementAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getOutputStatementAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputStatement__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputStatement__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputStatement__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputStatementAccess().getBindingsAssignment_3_1()); }
	(rule__OutputStatement__BindingsAssignment_3_1)
	{ after(grammarAccess.getOutputStatementAccess().getBindingsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForLoopStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoopStatement__Group__0__Impl
	rule__ForLoopStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopStatementAccess().getForcedAssignment_0()); }
	(rule__ForLoopStatement__ForcedAssignment_0)?
	{ after(grammarAccess.getForLoopStatementAccess().getForcedAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoopStatement__Group__1__Impl
	rule__ForLoopStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopStatementAccess().getForKeyword_1()); }
	'for'
	{ after(grammarAccess.getForLoopStatementAccess().getForKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoopStatement__Group__2__Impl
	rule__ForLoopStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopStatementAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getForLoopStatementAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoopStatement__Group__3__Impl
	rule__ForLoopStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopStatementAccess().getForBufferAssignment_3()); }
	(rule__ForLoopStatement__ForBufferAssignment_3)
	{ after(grammarAccess.getForLoopStatementAccess().getForBufferAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoopStatement__Group__4__Impl
	rule__ForLoopStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopStatementAccess().getCommaKeyword_4()); }
	','
	{ after(grammarAccess.getForLoopStatementAccess().getCommaKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoopStatement__Group__5__Impl
	rule__ForLoopStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopStatementAccess().getInitialAssignment_5()); }
	(rule__ForLoopStatement__InitialAssignment_5)
	{ after(grammarAccess.getForLoopStatementAccess().getInitialAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopStatement__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoopStatement__Group__6__Impl
	rule__ForLoopStatement__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopStatement__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopStatementAccess().getCommaKeyword_6()); }
	','
	{ after(grammarAccess.getForLoopStatementAccess().getCommaKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopStatement__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoopStatement__Group__7__Impl
	rule__ForLoopStatement__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopStatement__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopStatementAccess().getInitialBindingsAssignment_7()); }
	(rule__ForLoopStatement__InitialBindingsAssignment_7)
	{ after(grammarAccess.getForLoopStatementAccess().getInitialBindingsAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopStatement__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoopStatement__Group__8__Impl
	rule__ForLoopStatement__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopStatement__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopStatementAccess().getCommaKeyword_8()); }
	','
	{ after(grammarAccess.getForLoopStatementAccess().getCommaKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopStatement__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoopStatement__Group__9__Impl
	rule__ForLoopStatement__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopStatement__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopStatementAccess().getSubsequentAssignment_9()); }
	(rule__ForLoopStatement__SubsequentAssignment_9)
	{ after(grammarAccess.getForLoopStatementAccess().getSubsequentAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopStatement__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoopStatement__Group__10__Impl
	rule__ForLoopStatement__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopStatement__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopStatementAccess().getCommaKeyword_10()); }
	','
	{ after(grammarAccess.getForLoopStatementAccess().getCommaKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopStatement__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoopStatement__Group__11__Impl
	rule__ForLoopStatement__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopStatement__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopStatementAccess().getSubsequentBindingsAssignment_11()); }
	(rule__ForLoopStatement__SubsequentBindingsAssignment_11)
	{ after(grammarAccess.getForLoopStatementAccess().getSubsequentBindingsAssignment_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopStatement__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoopStatement__Group__12__Impl
	rule__ForLoopStatement__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopStatement__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopStatementAccess().getRightParenthesisKeyword_12()); }
	')'
	{ after(grammarAccess.getForLoopStatementAccess().getRightParenthesisKeyword_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopStatement__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoopStatement__Group__13__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopStatement__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopStatementAccess().getBlockAssignment_13()); }
	(rule__ForLoopStatement__BlockAssignment_13)
	{ after(grammarAccess.getForLoopStatementAccess().getBlockAssignment_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfThenElseStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfThenElseStatement__Group__0__Impl
	rule__IfThenElseStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfThenElseStatementAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getIfThenElseStatementAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfThenElseStatement__Group__1__Impl
	rule__IfThenElseStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfThenElseStatementAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getIfThenElseStatementAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfThenElseStatement__Group__2__Impl
	rule__IfThenElseStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfThenElseStatementAccess().getBindingsAssignment_2()); }
	(rule__IfThenElseStatement__BindingsAssignment_2)
	{ after(grammarAccess.getIfThenElseStatementAccess().getBindingsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfThenElseStatement__Group__3__Impl
	rule__IfThenElseStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfThenElseStatementAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getIfThenElseStatementAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfThenElseStatement__Group__4__Impl
	rule__IfThenElseStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfThenElseStatementAccess().getThenBlockAssignment_4()); }
	(rule__IfThenElseStatement__ThenBlockAssignment_4)
	{ after(grammarAccess.getIfThenElseStatementAccess().getThenBlockAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfThenElseStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfThenElseStatementAccess().getGroup_5()); }
	(rule__IfThenElseStatement__Group_5__0)?
	{ after(grammarAccess.getIfThenElseStatementAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfThenElseStatement__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfThenElseStatement__Group_5__0__Impl
	rule__IfThenElseStatement__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseStatement__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfThenElseStatementAccess().getElseKeyword_5_0()); }
	('else')
	{ after(grammarAccess.getIfThenElseStatementAccess().getElseKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseStatement__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfThenElseStatement__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseStatement__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfThenElseStatementAccess().getElseBlockAssignment_5_1()); }
	(rule__IfThenElseStatement__ElseBlockAssignment_5_1)
	{ after(grammarAccess.getIfThenElseStatementAccess().getElseBlockAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Bindings__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bindings__Group__0__Impl
	rule__Bindings__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Bindings__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingsAccess().getBindingsAssignment_0()); }
	(rule__Bindings__BindingsAssignment_0)
	{ after(grammarAccess.getBindingsAccess().getBindingsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bindings__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bindings__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Bindings__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingsAccess().getGroup_1()); }
	(rule__Bindings__Group_1__0)*
	{ after(grammarAccess.getBindingsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Bindings__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bindings__Group_1__0__Impl
	rule__Bindings__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Bindings__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingsAccess().getAmpersandAmpersandKeyword_1_0()); }
	'&&'
	{ after(grammarAccess.getBindingsAccess().getAmpersandAmpersandKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bindings__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bindings__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Bindings__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingsAccess().getBindingsAssignment_1_1()); }
	(rule__Bindings__BindingsAssignment_1_1)
	{ after(grammarAccess.getBindingsAccess().getBindingsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BufferPattern__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BufferPattern__Group__0__Impl
	rule__BufferPattern__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BufferPattern__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBufferPatternAccess().getBufferAssignment_0()); }
	(rule__BufferPattern__BufferAssignment_0)
	{ after(grammarAccess.getBufferPatternAccess().getBufferAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BufferPattern__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BufferPattern__Group__1__Impl
	rule__BufferPattern__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BufferPattern__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBufferPatternAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getBufferPatternAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BufferPattern__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BufferPattern__Group__2__Impl
	rule__BufferPattern__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BufferPattern__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBufferPatternAccess().getPatternAssignment_2()); }
	(rule__BufferPattern__PatternAssignment_2)?
	{ after(grammarAccess.getBufferPatternAccess().getPatternAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BufferPattern__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BufferPattern__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BufferPattern__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBufferPatternAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getBufferPatternAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__0__Impl
	rule__Mapping__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getMappingAction_0()); }
	()
	{ after(grammarAccess.getMappingAccess().getMappingAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__1__Impl
	rule__Mapping__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getHyphenMinusGreaterThanSignKeyword_1()); }
	'->'
	{ after(grammarAccess.getMappingAccess().getHyphenMinusGreaterThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getMappingAccess().getAssignmentsAssignment_2()); }
		(rule__Mapping__AssignmentsAssignment_2)
		{ after(grammarAccess.getMappingAccess().getAssignmentsAssignment_2()); }
	)
	(
		{ before(grammarAccess.getMappingAccess().getAssignmentsAssignment_2()); }
		(rule__Mapping__AssignmentsAssignment_2)*
		{ after(grammarAccess.getMappingAccess().getAssignmentsAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Handler__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Handler__Group__0__Impl
	rule__Handler__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Handler__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHandlerAccess().getHandlerAction_0()); }
	()
	{ after(grammarAccess.getHandlerAccess().getHandlerAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Handler__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Handler__Group__1__Impl
	rule__Handler__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Handler__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHandlerAccess().getEqualsSignGreaterThanSignKeyword_1()); }
	'=>'
	{ after(grammarAccess.getHandlerAccess().getEqualsSignGreaterThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Handler__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Handler__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Handler__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHandlerAccess().getBlockAssignment_2()); }
	(rule__Handler__BlockAssignment_2)
	{ after(grammarAccess.getHandlerAccess().getBlockAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDeclaration__Group__0__Impl
	rule__PackageDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDeclarationAccess().getNamespaceKeyword_0()); }
	'namespace'
	{ after(grammarAccess.getPackageDeclarationAccess().getNamespaceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDeclaration__Group__1__Impl
	rule__PackageDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDeclarationAccess().getNameAssignment_1()); }
	(rule__PackageDeclaration__NameAssignment_1)
	{ after(grammarAccess.getPackageDeclarationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDeclaration__Group__2__Impl
	rule__PackageDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDeclarationAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getPackageDeclarationAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDeclaration__Group__3__Impl
	rule__PackageDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDeclarationAccess().getImportsAssignment_3()); }
	(rule__PackageDeclaration__ImportsAssignment_3)*
	{ after(grammarAccess.getPackageDeclarationAccess().getImportsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDeclaration__Group__4__Impl
	rule__PackageDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDeclarationAccess().getModulesAssignment_4()); }
	(rule__PackageDeclaration__ModulesAssignment_4)*
	{ after(grammarAccess.getPackageDeclarationAccess().getModulesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDeclaration__Group__5__Impl
	rule__PackageDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDeclarationAccess().getExtensionsAssignment_5()); }
	(rule__PackageDeclaration__ExtensionsAssignment_5)*
	{ after(grammarAccess.getPackageDeclarationAccess().getExtensionsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDeclaration__Group__6__Impl
	rule__PackageDeclaration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDeclarationAccess().getBuffersAssignment_6()); }
	(rule__PackageDeclaration__BuffersAssignment_6)?
	{ after(grammarAccess.getPackageDeclarationAccess().getBuffersAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDeclaration__Group__7__Impl
	rule__PackageDeclaration__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDeclarationAccess().getElementsAssignment_7()); }
	(rule__PackageDeclaration__ElementsAssignment_7)*
	{ after(grammarAccess.getPackageDeclarationAccess().getElementsAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDeclaration__Group__8__Impl
	rule__PackageDeclaration__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDeclarationAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getPackageDeclarationAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDeclaration__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDeclarationAccess().getParametersAssignment_9()); }
	(rule__PackageDeclaration__ParametersAssignment_9)?
	{ after(grammarAccess.getPackageDeclarationAccess().getParametersAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
	(rule__Import__ImportedNamespaceAssignment_1)
	{ after(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelModule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelModule__Group__0__Impl
	rule__ModelModule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelModule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelModuleAccess().getModuleKeyword_0()); }
	'module'
	{ after(grammarAccess.getModelModuleAccess().getModuleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelModule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelModule__Group__1__Impl
	rule__ModelModule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelModule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelModuleAccess().getModuleClassAssignment_1()); }
	(rule__ModelModule__ModuleClassAssignment_1)
	{ after(grammarAccess.getModelModuleAccess().getModuleClassAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelModule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelModule__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelModule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelModuleAccess().getParametersAssignment_2()); }
	(rule__ModelModule__ParametersAssignment_2)?
	{ after(grammarAccess.getModelModuleAccess().getParametersAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelExtension__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelExtension__Group__0__Impl
	rule__ModelExtension__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelExtension__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelExtensionAccess().getExtensionKeyword_0()); }
	'extension'
	{ after(grammarAccess.getModelExtensionAccess().getExtensionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelExtension__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelExtension__Group__1__Impl
	rule__ModelExtension__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelExtension__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelExtensionAccess().getExtensionClassAssignment_1()); }
	(rule__ModelExtension__ExtensionClassAssignment_1)
	{ after(grammarAccess.getModelExtensionAccess().getExtensionClassAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelExtension__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelExtension__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelExtension__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelExtensionAccess().getParametersAssignment_2()); }
	(rule__ModelExtension__ParametersAssignment_2)?
	{ after(grammarAccess.getModelExtensionAccess().getParametersAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameters__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group__0__Impl
	rule__Parameters__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getParametersKeyword_0()); }
	'parameters'
	{ after(grammarAccess.getParametersAccess().getParametersKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group__1__Impl
	rule__Parameters__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getParametersAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group__2__Impl
	rule__Parameters__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getElementsAssignment_2()); }
	(rule__Parameters__ElementsAssignment_2)
	{ after(grammarAccess.getParametersAccess().getElementsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group__3__Impl
	rule__Parameters__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getGroup_3()); }
	(rule__Parameters__Group_3__0)*
	{ after(grammarAccess.getParametersAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group__4__Impl
	rule__Parameters__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getParametersAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getParametersAssignment_5()); }
	(rule__Parameters__ParametersAssignment_5)
	{ after(grammarAccess.getParametersAccess().getParametersAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameters__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group_3__0__Impl
	rule__Parameters__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getParametersAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getElementsAssignment_3_1()); }
	(rule__Parameters__ElementsAssignment_3_1)
	{ after(grammarAccess.getParametersAccess().getElementsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Chunks__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chunks__Group__0__Impl
	rule__Chunks__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Chunks__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunksAccess().getTypeAssignment_0()); }
	(rule__Chunks__TypeAssignment_0)
	{ after(grammarAccess.getChunksAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chunks__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chunks__Group__1__Impl
	rule__Chunks__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Chunks__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunksAccess().getChunksAssignment_1()); }
	(rule__Chunks__ChunksAssignment_1)
	{ after(grammarAccess.getChunksAccess().getChunksAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chunks__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chunks__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Chunks__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunksAccess().getGroup_2()); }
	(rule__Chunks__Group_2__0)*
	{ after(grammarAccess.getChunksAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Chunks__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chunks__Group_2__0__Impl
	rule__Chunks__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Chunks__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunksAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getChunksAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chunks__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chunks__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Chunks__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunksAccess().getChunksAssignment_2_1()); }
	(rule__Chunks__ChunksAssignment_2_1)
	{ after(grammarAccess.getChunksAccess().getChunksAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChunkDef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChunkDef__Group__0__Impl
	rule__ChunkDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkDef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunkDefAccess().getOverridableParserRuleCall_0()); }
	ruleOverridable
	{ after(grammarAccess.getChunkDefAccess().getOverridableParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkDef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChunkDef__Group__1__Impl
	rule__ChunkDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkDef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunkDefAccess().getNameAssignment_1()); }
	(rule__ChunkDef__NameAssignment_1)
	{ after(grammarAccess.getChunkDefAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkDef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChunkDef__Group__2__Impl
	rule__ChunkDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkDef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunkDefAccess().getGroup_2()); }
	(rule__ChunkDef__Group_2__0)?
	{ after(grammarAccess.getChunkDefAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkDef__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChunkDef__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkDef__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunkDefAccess().getParametersAssignment_3()); }
	(rule__ChunkDef__ParametersAssignment_3)?
	{ after(grammarAccess.getChunkDefAccess().getParametersAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChunkDef__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChunkDef__Group_2__0__Impl
	rule__ChunkDef__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkDef__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunkDefAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getChunkDefAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkDef__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChunkDef__Group_2__1__Impl
	rule__ChunkDef__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkDef__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunkDefAccess().getSlotsAssignment_2_1()); }
	(rule__ChunkDef__SlotsAssignment_2_1)
	{ after(grammarAccess.getChunkDefAccess().getSlotsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkDef__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChunkDef__Group_2__2__Impl
	rule__ChunkDef__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkDef__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunkDefAccess().getGroup_2_2()); }
	(rule__ChunkDef__Group_2_2__0)*
	{ after(grammarAccess.getChunkDefAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkDef__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChunkDef__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkDef__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunkDefAccess().getRightParenthesisKeyword_2_3()); }
	')'
	{ after(grammarAccess.getChunkDefAccess().getRightParenthesisKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChunkDef__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChunkDef__Group_2_2__0__Impl
	rule__ChunkDef__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkDef__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunkDefAccess().getCommaKeyword_2_2_0()); }
	','
	{ after(grammarAccess.getChunkDefAccess().getCommaKeyword_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkDef__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChunkDef__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkDef__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunkDefAccess().getSlotsAssignment_2_2_1()); }
	(rule__ChunkDef__SlotsAssignment_2_2_1)
	{ after(grammarAccess.getChunkDefAccess().getSlotsAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChunkType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChunkType__Group__0__Impl
	rule__ChunkType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunkTypeAccess().getOverridableParserRuleCall_0()); }
	ruleOverridable
	{ after(grammarAccess.getChunkTypeAccess().getOverridableParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChunkType__Group__1__Impl
	rule__ChunkType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunkTypeAccess().getChunktypeKeyword_1()); }
	'chunktype'
	{ after(grammarAccess.getChunkTypeAccess().getChunktypeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChunkType__Group__2__Impl
	rule__ChunkType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunkTypeAccess().getNameAssignment_2()); }
	(rule__ChunkType__NameAssignment_2)
	{ after(grammarAccess.getChunkTypeAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChunkType__Group__3__Impl
	rule__ChunkType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunkTypeAccess().getGroup_3()); }
	(rule__ChunkType__Group_3__0)?
	{ after(grammarAccess.getChunkTypeAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkType__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChunkType__Group__4__Impl
	rule__ChunkType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkType__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunkTypeAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getChunkTypeAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkType__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChunkType__Group__5__Impl
	rule__ChunkType__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkType__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunkTypeAccess().getSlotsAssignment_5()); }
	(rule__ChunkType__SlotsAssignment_5)*
	{ after(grammarAccess.getChunkTypeAccess().getSlotsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkType__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChunkType__Group__6__Impl
	rule__ChunkType__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkType__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunkTypeAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getChunkTypeAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkType__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChunkType__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkType__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunkTypeAccess().getParametersAssignment_7()); }
	(rule__ChunkType__ParametersAssignment_7)?
	{ after(grammarAccess.getChunkTypeAccess().getParametersAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChunkType__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChunkType__Group_3__0__Impl
	rule__ChunkType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkType__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunkTypeAccess().getExtendsKeyword_3_0()); }
	'extends'
	{ after(grammarAccess.getChunkTypeAccess().getExtendsKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkType__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChunkType__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkType__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunkTypeAccess().getSuperTypeAssignment_3_1()); }
	(rule__ChunkType__SuperTypeAssignment_3_1)
	{ after(grammarAccess.getChunkTypeAccess().getSuperTypeAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNameWithWildcard__Group__0__Impl
	rule__QualifiedNameWithWildcard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
	{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNameWithWildcard__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
	'.*'
	{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
	(rule__QualifiedName__Group_1__0)*
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Buffers__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Buffers__Group__0__Impl
	rule__Buffers__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Buffers__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuffersAccess().getBuffersAction_0()); }
	()
	{ after(grammarAccess.getBuffersAccess().getBuffersAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Buffers__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Buffers__Group__1__Impl
	rule__Buffers__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Buffers__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuffersAccess().getBuffersKeyword_1()); }
	'buffers'
	{ after(grammarAccess.getBuffersAccess().getBuffersKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Buffers__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Buffers__Group__2__Impl
	rule__Buffers__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Buffers__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuffersAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getBuffersAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Buffers__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Buffers__Group__3__Impl
	rule__Buffers__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Buffers__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuffersAccess().getBuffersAssignment_3()); }
	(rule__Buffers__BuffersAssignment_3)*
	{ after(grammarAccess.getBuffersAccess().getBuffersAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Buffers__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Buffers__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Buffers__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuffersAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getBuffersAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Buffer__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Buffer__Group__0__Impl
	rule__Buffer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Buffer__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBufferAccess().getOverridableParserRuleCall_0()); }
	ruleOverridable
	{ after(grammarAccess.getBufferAccess().getOverridableParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Buffer__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Buffer__Group__1__Impl
	rule__Buffer__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Buffer__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBufferAccess().getNameAssignment_1()); }
	(rule__Buffer__NameAssignment_1)
	{ after(grammarAccess.getBufferAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Buffer__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Buffer__Group__2__Impl
	rule__Buffer__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Buffer__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBufferAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getBufferAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Buffer__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Buffer__Group__3__Impl
	rule__Buffer__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Buffer__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBufferAccess().getSourceAssignment_3()); }
	(rule__Buffer__SourceAssignment_3)*
	{ after(grammarAccess.getBufferAccess().getSourceAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Buffer__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Buffer__Group__4__Impl
	rule__Buffer__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Buffer__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBufferAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getBufferAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Buffer__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Buffer__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Buffer__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBufferAccess().getParametersAssignment_5()); }
	(rule__Buffer__ParametersAssignment_5)?
	{ after(grammarAccess.getBufferAccess().getParametersAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Production__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Production__Group__0__Impl
	rule__Production__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Production__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductionAccess().getOverridableParserRuleCall_0()); }
	ruleOverridable
	{ after(grammarAccess.getProductionAccess().getOverridableParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Production__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Production__Group__1__Impl
	rule__Production__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Production__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductionAccess().getProductionKeyword_1()); }
	'production'
	{ after(grammarAccess.getProductionAccess().getProductionKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Production__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Production__Group__2__Impl
	rule__Production__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Production__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductionAccess().getNameAssignment_2()); }
	(rule__Production__NameAssignment_2)
	{ after(grammarAccess.getProductionAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Production__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Production__Group__3__Impl
	rule__Production__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Production__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductionAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getProductionAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Production__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Production__Group__4__Impl
	rule__Production__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Production__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getProductionAccess().getConditionsAssignment_4()); }
		(rule__Production__ConditionsAssignment_4)
		{ after(grammarAccess.getProductionAccess().getConditionsAssignment_4()); }
	)
	(
		{ before(grammarAccess.getProductionAccess().getConditionsAssignment_4()); }
		(rule__Production__ConditionsAssignment_4)*
		{ after(grammarAccess.getProductionAccess().getConditionsAssignment_4()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Production__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Production__Group__5__Impl
	rule__Production__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Production__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductionAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getProductionAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Production__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Production__Group__6__Impl
	rule__Production__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Production__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductionAccess().getLeftCurlyBracketKeyword_6()); }
	'{'
	{ after(grammarAccess.getProductionAccess().getLeftCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Production__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Production__Group__7__Impl
	rule__Production__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Production__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getProductionAccess().getActionsAssignment_7()); }
		(rule__Production__ActionsAssignment_7)
		{ after(grammarAccess.getProductionAccess().getActionsAssignment_7()); }
	)
	(
		{ before(grammarAccess.getProductionAccess().getActionsAssignment_7()); }
		(rule__Production__ActionsAssignment_7)*
		{ after(grammarAccess.getProductionAccess().getActionsAssignment_7()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Production__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Production__Group__8__Impl
	rule__Production__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Production__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductionAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getProductionAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Production__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Production__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Production__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductionAccess().getParametersAssignment_9()); }
	(rule__Production__ParametersAssignment_9)?
	{ after(grammarAccess.getProductionAccess().getParametersAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Match__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group__0__Impl
	rule__Match__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getNameAssignment_0()); }
	(rule__Match__NameAssignment_0)
	{ after(grammarAccess.getMatchAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group__1__Impl
	rule__Match__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getMatchAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group__2__Impl
	rule__Match__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getIsaAssignment_2()); }
	(rule__Match__IsaAssignment_2)
	{ after(grammarAccess.getMatchAccess().getIsaAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group__3__Impl
	rule__Match__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getSlotsAssignment_3()); }
	(rule__Match__SlotsAssignment_3)*
	{ after(grammarAccess.getMatchAccess().getSlotsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getMatchAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Query__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Query__Group__0__Impl
	rule__Query__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryAccess().getQuestionMarkKeyword_0()); }
	'?'
	{ after(grammarAccess.getQueryAccess().getQuestionMarkKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Query__Group__1__Impl
	rule__Query__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryAccess().getNameAssignment_1()); }
	(rule__Query__NameAssignment_1)
	{ after(grammarAccess.getQueryAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Query__Group__2__Impl
	rule__Query__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getQueryAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Query__Group__3__Impl
	rule__Query__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryAccess().getSlotsAssignment_3()); }
	(rule__Query__SlotsAssignment_3)*
	{ after(grammarAccess.getQueryAccess().getSlotsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Query__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getQueryAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Proxy__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Proxy__Group__0__Impl
	rule__Proxy__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Proxy__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProxyAccess().getProxyKeyword_0()); }
	'proxy'
	{ after(grammarAccess.getProxyAccess().getProxyKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Proxy__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Proxy__Group__1__Impl
	rule__Proxy__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Proxy__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProxyAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getProxyAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Proxy__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Proxy__Group__2__Impl
	rule__Proxy__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Proxy__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProxyAccess().getNameAssignment_2()); }
	(rule__Proxy__NameAssignment_2)
	{ after(grammarAccess.getProxyAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Proxy__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Proxy__Group__3__Impl
	rule__Proxy__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Proxy__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProxyAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getProxyAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Proxy__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Proxy__Group__4__Impl
	rule__Proxy__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Proxy__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProxyAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getProxyAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Proxy__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Proxy__Group__5__Impl
	rule__Proxy__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Proxy__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProxyAccess().getSlotsAssignment_5()); }
	(rule__Proxy__SlotsAssignment_5)*
	{ after(grammarAccess.getProxyAccess().getSlotsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Proxy__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Proxy__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Proxy__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProxyAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getProxyAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Script__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Script__Group__0__Impl
	rule__Script__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Script__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScriptAccess().getScriptKeyword_0()); }
	'script'
	{ after(grammarAccess.getScriptAccess().getScriptKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Script__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Script__Group__1__Impl
	rule__Script__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Script__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScriptAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getScriptAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Script__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Script__Group__2__Impl
	rule__Script__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Script__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScriptAccess().getLanguageAssignment_2()); }
	(rule__Script__LanguageAssignment_2)
	{ after(grammarAccess.getScriptAccess().getLanguageAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Script__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Script__Group__3__Impl
	rule__Script__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Script__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScriptAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getScriptAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Script__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Script__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Script__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScriptAccess().getScriptAssignment_4()); }
	(rule__Script__ScriptAssignment_4)
	{ after(grammarAccess.getScriptAccess().getScriptAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Add__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__0__Impl
	rule__Add__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getPlusSignKeyword_0()); }
	'+'
	{ after(grammarAccess.getAddAccess().getPlusSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__1__Impl
	rule__Add__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getNameAssignment_1()); }
	(rule__Add__NameAssignment_1)
	{ after(grammarAccess.getAddAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__2__Impl
	rule__Add__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getAddAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__3__Impl
	rule__Add__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getIsaAssignment_3()); }
	(rule__Add__IsaAssignment_3)
	{ after(grammarAccess.getAddAccess().getIsaAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__4__Impl
	rule__Add__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getSlotsAssignment_4()); }
	(rule__Add__SlotsAssignment_4)*
	{ after(grammarAccess.getAddAccess().getSlotsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getAddAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Remove__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Remove__Group__0__Impl
	rule__Remove__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveAccess().getHyphenMinusKeyword_0()); }
	'-'
	{ after(grammarAccess.getRemoveAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Remove__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveAccess().getSimpleSlotBlockParserRuleCall_1()); }
	ruleSimpleSlotBlock
	{ after(grammarAccess.getRemoveAccess().getSimpleSlotBlockParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Output__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__0__Impl
	rule__Output__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getOutputKeyword_0()); }
	'output'
	{ after(grammarAccess.getOutputAccess().getOutputKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__1__Impl
	rule__Output__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getOutputAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__2__Impl
	rule__Output__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getStringAssignment_2()); }
	(rule__Output__StringAssignment_2)
	{ after(grammarAccess.getOutputAccess().getStringAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getOutputAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleSlotBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleSlotBlock__Group__0__Impl
	rule__SimpleSlotBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSlotBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleSlotBlockAccess().getNameAssignment_0()); }
	(rule__SimpleSlotBlock__NameAssignment_0)
	{ after(grammarAccess.getSimpleSlotBlockAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSlotBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleSlotBlock__Group__1__Impl
	rule__SimpleSlotBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSlotBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleSlotBlockAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getSimpleSlotBlockAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSlotBlock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleSlotBlock__Group__2__Impl
	rule__SimpleSlotBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSlotBlock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleSlotBlockAccess().getSlotsAssignment_2()); }
	(rule__SimpleSlotBlock__SlotsAssignment_2)*
	{ after(grammarAccess.getSimpleSlotBlockAccess().getSlotsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSlotBlock__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleSlotBlock__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSlotBlock__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleSlotBlockAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getSimpleSlotBlockAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IsaBlock__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsaBlock__Group_0__0__Impl
	rule__IsaBlock__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IsaBlock__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsaBlockAccess().getIsaKeyword_0_0()); }
	'isa'
	{ after(grammarAccess.getIsaBlockAccess().getIsaKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsaBlock__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsaBlock__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IsaBlock__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsaBlockAccess().getTypeAssignment_0_1()); }
	(rule__IsaBlock__TypeAssignment_0_1)
	{ after(grammarAccess.getIsaBlockAccess().getTypeAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleSlot__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleSlot__Group__0__Impl
	rule__SimpleSlot__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSlot__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleSlotAccess().getNameAssignment_0()); }
	(rule__SimpleSlot__NameAssignment_0)
	{ after(grammarAccess.getSimpleSlotAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSlot__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleSlot__Group__1__Impl
	rule__SimpleSlot__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSlot__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleSlotAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getSimpleSlotAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSlot__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleSlot__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSlot__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleSlotAccess().getValueAssignment_2()); }
	(rule__SimpleSlot__ValueAssignment_2)
	{ after(grammarAccess.getSimpleSlotAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalSlot__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalSlot__Group__0__Impl
	rule__ConditionalSlot__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalSlot__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalSlotAccess().getNameAssignment_0()); }
	(rule__ConditionalSlot__NameAssignment_0)
	{ after(grammarAccess.getConditionalSlotAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalSlot__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalSlot__Group__1__Impl
	rule__ConditionalSlot__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalSlot__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalSlotAccess().getConditionAssignment_1()); }
	(rule__ConditionalSlot__ConditionAssignment_1)
	{ after(grammarAccess.getConditionalSlotAccess().getConditionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalSlot__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalSlot__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalSlot__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalSlotAccess().getValueAssignment_2()); }
	(rule__ConditionalSlot__ValueAssignment_2)
	{ after(grammarAccess.getConditionalSlotAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrSlot__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrSlot__Group__0__Impl
	rule__OrSlot__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrSlot__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrSlotAccess().getOrSlotAction_0()); }
	()
	{ after(grammarAccess.getOrSlotAccess().getOrSlotAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrSlot__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrSlot__Group__1__Impl
	rule__OrSlot__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrSlot__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrSlotAccess().getOrKeyword_1()); }
	'or'
	{ after(grammarAccess.getOrSlotAccess().getOrKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrSlot__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrSlot__Group__2__Impl
	rule__OrSlot__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OrSlot__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrSlotAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getOrSlotAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrSlot__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrSlot__Group__3__Impl
	rule__OrSlot__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OrSlot__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrSlotAccess().getSlotsAssignment_3()); }
	(rule__OrSlot__SlotsAssignment_3)*
	{ after(grammarAccess.getOrSlotAccess().getSlotsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrSlot__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrSlot__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrSlot__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrSlotAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getOrSlotAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndSlot__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndSlot__Group__0__Impl
	rule__AndSlot__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndSlot__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndSlotAccess().getAndSlotAction_0()); }
	()
	{ after(grammarAccess.getAndSlotAccess().getAndSlotAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndSlot__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndSlot__Group__1__Impl
	rule__AndSlot__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndSlot__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndSlotAccess().getAndKeyword_1()); }
	'and'
	{ after(grammarAccess.getAndSlotAccess().getAndKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndSlot__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndSlot__Group__2__Impl
	rule__AndSlot__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AndSlot__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndSlotAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getAndSlotAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndSlot__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndSlot__Group__3__Impl
	rule__AndSlot__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AndSlot__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndSlotAccess().getSlotsAssignment_3()); }
	(rule__AndSlot__SlotsAssignment_3)*
	{ after(grammarAccess.getAndSlotAccess().getSlotsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndSlot__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndSlot__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndSlot__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndSlotAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getAndSlotAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NotSlot__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotSlot__Group__0__Impl
	rule__NotSlot__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NotSlot__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotSlotAccess().getNotSlotAction_0()); }
	()
	{ after(grammarAccess.getNotSlotAccess().getNotSlotAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotSlot__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotSlot__Group__1__Impl
	rule__NotSlot__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NotSlot__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotSlotAccess().getNotKeyword_1()); }
	'not'
	{ after(grammarAccess.getNotSlotAccess().getNotKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotSlot__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotSlot__Group__2__Impl
	rule__NotSlot__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NotSlot__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotSlotAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getNotSlotAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotSlot__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotSlot__Group__3__Impl
	rule__NotSlot__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NotSlot__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotSlotAccess().getSlotsAssignment_3()); }
	(rule__NotSlot__SlotsAssignment_3)*
	{ after(grammarAccess.getNotSlotAccess().getSlotsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotSlot__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotSlot__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NotSlot__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotSlotAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getNotSlotAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getNameAssignment_0()); }
	(rule__Parameter__NameAssignment_0)
	{ after(grammarAccess.getParameterAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__1__Impl
	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getParameterAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getValueAssignment_2()); }
	(rule__Parameter__ValueAssignment_2)
	{ after(grammarAccess.getParameterAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParametersBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParametersBlock__Group__0__Impl
	rule__ParametersBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametersBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersBlockAccess().getParametersBlockAction_0()); }
	()
	{ after(grammarAccess.getParametersBlockAccess().getParametersBlockAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametersBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParametersBlock__Group__1__Impl
	rule__ParametersBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametersBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersBlockAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getParametersBlockAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametersBlock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParametersBlock__Group__2__Impl
	rule__ParametersBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametersBlock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersBlockAccess().getParameterAssignment_2()); }
	(rule__ParametersBlock__ParameterAssignment_2)*
	{ after(grammarAccess.getParametersBlockAccess().getParameterAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametersBlock__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParametersBlock__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametersBlock__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersBlockAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getParametersBlockAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Value__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value__Group_0__0__Impl
	rule__Value__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueAccess().getValueAction_0_0()); }
	()
	{ after(grammarAccess.getValueAccess().getValueAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueAccess().getNameAssignment_0_1()); }
	(rule__Value__NameAssignment_0_1)
	{ after(grammarAccess.getValueAccess().getNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VARIABLE__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VARIABLE__Group__0__Impl
	rule__VARIABLE__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VARIABLE__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVARIABLEAccess().getEqualsSignKeyword_0()); }
	'='
	{ after(grammarAccess.getVARIABLEAccess().getEqualsSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VARIABLE__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VARIABLE__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VARIABLE__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVARIABLEAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
	{ after(grammarAccess.getVARIABLEAccess().getIDTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NUMERIC__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NUMERIC__Group__0__Impl
	rule__NUMERIC__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMERIC__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNUMERICAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getNUMERICAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMERIC__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NUMERIC__Group__1__Impl
	rule__NUMERIC__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMERIC__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNUMERICAccess().getDIGITSTerminalRuleCall_1()); }
	RULE_DIGITS
	{ after(grammarAccess.getNUMERICAccess().getDIGITSTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMERIC__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NUMERIC__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMERIC__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNUMERICAccess().getGroup_2()); }
	(rule__NUMERIC__Group_2__0)?
	{ after(grammarAccess.getNUMERICAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NUMERIC__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NUMERIC__Group_2__0__Impl
	rule__NUMERIC__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMERIC__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNUMERICAccess().getFullStopKeyword_2_0()); }
	'.'
	{ after(grammarAccess.getNUMERICAccess().getFullStopKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMERIC__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NUMERIC__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMERIC__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNUMERICAccess().getDIGITSTerminalRuleCall_2_1()); }
	RULE_DIGITS
	{ after(grammarAccess.getNUMERICAccess().getDIGITSTerminalRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__PackageAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getPackagePackageDefParserRuleCall_0()); }
		rulePackageDef
		{ after(grammarAccess.getProgramAccess().getPackagePackageDefParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageDefAccess().getNameQualifiedNameParserRuleCall_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getPackageDefAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__TargetAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageDefAccess().getTargetQualifiedNameParserRuleCall_3_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getPackageDefAccess().getTargetQualifiedNameParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__ImportsAssignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageDefAccess().getImportsImportParserRuleCall_5_0_0()); }
		ruleImport
		{ after(grammarAccess.getPackageDefAccess().getImportsImportParserRuleCall_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__IncludesAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageDefAccess().getIncludesIncludeParserRuleCall_5_1_0()); }
		ruleInclude
		{ after(grammarAccess.getPackageDefAccess().getIncludesIncludeParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__GeneratorAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageDefAccess().getGeneratorGeneratorDefParserRuleCall_6_0()); }
		ruleGeneratorDef
		{ after(grammarAccess.getPackageDefAccess().getGeneratorGeneratorDefParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__BufferDefsAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageDefAccess().getBufferDefsBufferDefParserRuleCall_7_0()); }
		ruleBufferDef
		{ after(grammarAccess.getPackageDefAccess().getBufferDefsBufferDefParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__ChunkTypesAssignment_8_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageDefAccess().getChunkTypesChunkTypeParserRuleCall_8_0_0()); }
		ruleChunkType
		{ after(grammarAccess.getPackageDefAccess().getChunkTypesChunkTypeParserRuleCall_8_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__ChunkDefsAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageDefAccess().getChunkDefsChunksParserRuleCall_8_1_0()); }
		ruleChunks
		{ after(grammarAccess.getPackageDefAccess().getChunkDefsChunksParserRuleCall_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__PatternsAssignment_8_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageDefAccess().getPatternsPatternParserRuleCall_8_2_0()); }
		rulePattern
		{ after(grammarAccess.getPackageDefAccess().getPatternsPatternParserRuleCall_8_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDef__FunctionsAssignment_8_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageDefAccess().getFunctionsFunctionParserRuleCall_8_3_0()); }
		ruleFunction
		{ after(grammarAccess.getPackageDefAccess().getFunctionsFunctionParserRuleCall_8_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Include__ImportedNamespaceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIncludeAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
		ruleQualifiedNameWithWildcard
		{ after(grammarAccess.getIncludeAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BufferDef__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBufferDefAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getBufferDefAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BufferDef__ReadableAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBufferDefAccess().getReadableReadableKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getBufferDefAccess().getReadableReadableKeyword_1_0_0()); }
			'readable'
			{ after(grammarAccess.getBufferDefAccess().getReadableReadableKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getBufferDefAccess().getReadableReadableKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BufferDef__WritableAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBufferDefAccess().getWritableWritableKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getBufferDefAccess().getWritableWritableKeyword_1_1_0()); }
			'writable'
			{ after(grammarAccess.getBufferDefAccess().getWritableWritableKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getBufferDefAccess().getWritableWritableKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BufferDef__ErrorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBufferDefAccess().getErrorErrorKeyword_2_0()); }
		(
			{ before(grammarAccess.getBufferDefAccess().getErrorErrorKeyword_2_0()); }
			'error'
			{ after(grammarAccess.getBufferDefAccess().getErrorErrorKeyword_2_0()); }
		)
		{ after(grammarAccess.getBufferDefAccess().getErrorErrorKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BufferDef__RequestsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBufferDefAccess().getRequestsRequestDefParserRuleCall_4_0()); }
		ruleRequestDef
		{ after(grammarAccess.getBufferDefAccess().getRequestsRequestDefParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BufferDef__RequestsAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBufferDefAccess().getRequestsRequestDefParserRuleCall_5_1_0()); }
		ruleRequestDef
		{ after(grammarAccess.getBufferDefAccess().getRequestsRequestDefParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestDef__WildcardRequestAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequestDefAccess().getWildcardRequestAsteriskKeyword_0_0_0()); }
		(
			{ before(grammarAccess.getRequestDefAccess().getWildcardRequestAsteriskKeyword_0_0_0()); }
			'*'
			{ after(grammarAccess.getRequestDefAccess().getWildcardRequestAsteriskKeyword_0_0_0()); }
		)
		{ after(grammarAccess.getRequestDefAccess().getWildcardRequestAsteriskKeyword_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestDef__RequestTypeAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequestDefAccess().getRequestTypeChunkTypeCrossReference_0_1_0()); }
		(
			{ before(grammarAccess.getRequestDefAccess().getRequestTypeChunkTypeIDTerminalRuleCall_0_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRequestDefAccess().getRequestTypeChunkTypeIDTerminalRuleCall_0_1_0_1()); }
		)
		{ after(grammarAccess.getRequestDefAccess().getRequestTypeChunkTypeCrossReference_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestDef__WildcardResultAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequestDefAccess().getWildcardResultAsteriskKeyword_2_0_0()); }
		(
			{ before(grammarAccess.getRequestDefAccess().getWildcardResultAsteriskKeyword_2_0_0()); }
			'*'
			{ after(grammarAccess.getRequestDefAccess().getWildcardResultAsteriskKeyword_2_0_0()); }
		)
		{ after(grammarAccess.getRequestDefAccess().getWildcardResultAsteriskKeyword_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestDef__ResultTypeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequestDefAccess().getResultTypeChunkTypeCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getRequestDefAccess().getResultTypeChunkTypeIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRequestDefAccess().getResultTypeChunkTypeIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getRequestDefAccess().getResultTypeChunkTypeCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneratorDef__ParametersAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneratorDefAccess().getParametersParametersBlockParserRuleCall_1_0()); }
		ruleParametersBlock
		{ after(grammarAccess.getGeneratorDefAccess().getParametersParametersBlockParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getPatternAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__TypeAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternAccess().getTypeIDTerminalRuleCall_3_1_0()); }
		RULE_ID
		{ after(grammarAccess.getPatternAccess().getTypeIDTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__SlotsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternAccess().getSlotsConditionalSlotParserRuleCall_4_0()); }
		ruleConditionalSlot
		{ after(grammarAccess.getPatternAccess().getSlotsConditionalSlotParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__VoidAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getVoidVoidKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getFunctionAccess().getVoidVoidKeyword_1_0_0()); }
			'void'
			{ after(grammarAccess.getFunctionAccess().getVoidVoidKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getFunctionAccess().getVoidVoidKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__ChunkAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getChunkElementKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getFunctionAccess().getChunkElementKeyword_1_1_0()); }
			'element'
			{ after(grammarAccess.getFunctionAccess().getChunkElementKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getFunctionAccess().getChunkElementKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__SlotsAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getSlotsVariableStatementParserRuleCall_4_0_0()); }
		ruleVariableStatement
		{ after(grammarAccess.getFunctionAccess().getSlotsVariableStatementParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__SlotsAssignment_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getSlotsVariableStatementParserRuleCall_4_1_1_0()); }
		ruleVariableStatement
		{ after(grammarAccess.getFunctionAccess().getSlotsVariableStatementParserRuleCall_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__AssumedContentsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getAssumedContentsWithAsStatementParserRuleCall_6_0()); }
		ruleWithAsStatement
		{ after(grammarAccess.getFunctionAccess().getAssumedContentsWithAsStatementParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__RetainedContentsAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getRetainedContentsRetainAsStatementParserRuleCall_7_0()); }
		ruleRetainAsStatement
		{ after(grammarAccess.getFunctionAccess().getRetainedContentsRetainAsStatementParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__VariablesAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getVariablesVariableStatementParserRuleCall_9_0()); }
		ruleVariableStatement
		{ after(grammarAccess.getFunctionAccess().getVariablesVariableStatementParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__InstructionsAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getInstructionsInstructionParserRuleCall_10_0()); }
		ruleInstruction
		{ after(grammarAccess.getFunctionAccess().getInstructionsInstructionParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WithAsStatement__AssumedAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWithAsStatementAccess().getAssumedAsStatementParserRuleCall_1_0()); }
		ruleAsStatement
		{ after(grammarAccess.getWithAsStatementAccess().getAssumedAsStatementParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WithAsStatement__AssumedAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWithAsStatementAccess().getAssumedAsStatementParserRuleCall_2_1_0()); }
		ruleAsStatement
		{ after(grammarAccess.getWithAsStatementAccess().getAssumedAsStatementParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RetainAsStatement__RetainedAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRetainAsStatementAccess().getRetainedAsStatementParserRuleCall_1_0()); }
		ruleAsStatement
		{ after(grammarAccess.getRetainAsStatementAccess().getRetainedAsStatementParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RetainAsStatement__RetainedAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRetainAsStatementAccess().getRetainedAsStatementParserRuleCall_2_1_0()); }
		ruleAsStatement
		{ after(grammarAccess.getRetainAsStatementAccess().getRetainedAsStatementParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AsStatement__BufferAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAsStatementAccess().getBufferBufferCrossReference_0_0()); }
		(
			{ before(grammarAccess.getAsStatementAccess().getBufferBufferIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAsStatementAccess().getBufferBufferIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getAsStatementAccess().getBufferBufferCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AsStatement__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAsStatementAccess().getTypeIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getAsStatementAccess().getTypeIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableStatement__AssignmentAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableStatementAccess().getAssignmentAssignmentStatementParserRuleCall_1_0()); }
		ruleAssignmentStatement
		{ after(grammarAccess.getVariableStatementAccess().getAssignmentAssignmentStatementParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__InstructionsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockAccess().getInstructionsInstructionParserRuleCall_2_0()); }
		ruleInstruction
		{ after(grammarAccess.getBlockAccess().getInstructionsInstructionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertionStatement__EntryStateAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInsertionStatementAccess().getEntryStateIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getInsertionStatementAccess().getEntryStateIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertionStatement__ExitStateAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInsertionStatementAccess().getExitStateIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getInsertionStatementAccess().getExitStateIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertionStatement__ShouldGenerateAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInsertionStatementAccess().getShouldGenerateGenerateKeyword_4_1_0()); }
		(
			{ before(grammarAccess.getInsertionStatementAccess().getShouldGenerateGenerateKeyword_4_1_0()); }
			'generate'
			{ after(grammarAccess.getInsertionStatementAccess().getShouldGenerateGenerateKeyword_4_1_0()); }
		)
		{ after(grammarAccess.getInsertionStatementAccess().getShouldGenerateGenerateKeyword_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallStatement__FunctionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallStatementAccess().getFunctionFunctionCrossReference_0_0()); }
		(
			{ before(grammarAccess.getFunctionCallStatementAccess().getFunctionFunctionIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFunctionCallStatementAccess().getFunctionFunctionIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getFunctionCallStatementAccess().getFunctionFunctionCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallStatement__ParametersAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallStatementAccess().getParametersAssignmentStatementParserRuleCall_2_0_0()); }
		ruleAssignmentStatement
		{ after(grammarAccess.getFunctionCallStatementAccess().getParametersAssignmentStatementParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallStatement__ParametersAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallStatementAccess().getParametersAssignmentStatementParserRuleCall_2_1_1_0()); }
		ruleAssignmentStatement
		{ after(grammarAccess.getFunctionCallStatementAccess().getParametersAssignmentStatementParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__ReferenceAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentStatementAccess().getReferenceVariableReferenceParserRuleCall_0_0()); }
		ruleVariableReference
		{ after(grammarAccess.getAssignmentStatementAccess().getReferenceVariableReferenceParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__AssignmentAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentStatementAccess().getAssignmentVariableValueParserRuleCall_2_0()); }
		ruleVariableValue
		{ after(grammarAccess.getAssignmentStatementAccess().getAssignmentVariableValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__BufferAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableReferenceAccess().getBufferBufferCrossReference_0_0_0()); }
		(
			{ before(grammarAccess.getVariableReferenceAccess().getBufferBufferIDTerminalRuleCall_0_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getVariableReferenceAccess().getBufferBufferIDTerminalRuleCall_0_0_0_1()); }
		)
		{ after(grammarAccess.getVariableReferenceAccess().getBufferBufferCrossReference_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableReferenceAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableReferenceAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableValue__BufferAssignment_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableValueAccess().getBufferBufferCrossReference_0_0_0_0()); }
		(
			{ before(grammarAccess.getVariableValueAccess().getBufferBufferIDTerminalRuleCall_0_0_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getVariableValueAccess().getBufferBufferIDTerminalRuleCall_0_0_0_0_1()); }
		)
		{ after(grammarAccess.getVariableValueAccess().getBufferBufferCrossReference_0_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableValue__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableValueAccess().getValueValueParserRuleCall_0_1_0()); }
		ruleValue
		{ after(grammarAccess.getVariableValueAccess().getValueValueParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableValue__FunctionCallAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableValueAccess().getFunctionCallFunctionCallStatementParserRuleCall_1_0()); }
		ruleFunctionCallStatement
		{ after(grammarAccess.getVariableValueAccess().getFunctionCallFunctionCallStatementParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnVariableReference__BufferAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReturnVariableReferenceAccess().getBufferBufferCrossReference_0_0_0()); }
		(
			{ before(grammarAccess.getReturnVariableReferenceAccess().getBufferBufferIDTerminalRuleCall_0_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getReturnVariableReferenceAccess().getBufferBufferIDTerminalRuleCall_0_0_0_1()); }
		)
		{ after(grammarAccess.getReturnVariableReferenceAccess().getBufferBufferCrossReference_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnVariableReference__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReturnVariableReferenceAccess().getValueValueParserRuleCall_1_0()); }
		ruleValue
		{ after(grammarAccess.getReturnVariableReferenceAccess().getValueValueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__ReferenceAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReturnStatementAccess().getReferenceReturnVariableReferenceParserRuleCall_2_0()); }
		ruleReturnVariableReference
		{ after(grammarAccess.getReturnStatementAccess().getReferenceReturnVariableReferenceParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveStatement__BuffersAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRemoveStatementAccess().getBuffersBufferCrossReference_1_0()); }
		(
			{ before(grammarAccess.getRemoveStatementAccess().getBuffersBufferIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRemoveStatementAccess().getBuffersBufferIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getRemoveStatementAccess().getBuffersBufferCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveStatement__BuffersAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRemoveStatementAccess().getBuffersBufferCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getRemoveStatementAccess().getBuffersBufferIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRemoveStatementAccess().getBuffersBufferIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getRemoveStatementAccess().getBuffersBufferCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestStatement__ForcedAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequestStatementAccess().getForcedForceKeyword_0_0()); }
		(
			{ before(grammarAccess.getRequestStatementAccess().getForcedForceKeyword_0_0()); }
			'force'
			{ after(grammarAccess.getRequestStatementAccess().getForcedForceKeyword_0_0()); }
		)
		{ after(grammarAccess.getRequestStatementAccess().getForcedForceKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestStatement__BufferAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequestStatementAccess().getBufferBufferCrossReference_2_0()); }
		(
			{ before(grammarAccess.getRequestStatementAccess().getBufferBufferIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRequestStatementAccess().getBufferBufferIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getRequestStatementAccess().getBufferBufferCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestStatement__PatternReferenceAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequestStatementAccess().getPatternReferenceVariableReferenceParserRuleCall_4_0()); }
		ruleVariableReference
		{ after(grammarAccess.getRequestStatementAccess().getPatternReferenceVariableReferenceParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestStatement__BindingsAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequestStatementAccess().getBindingsBindingsParserRuleCall_6_1_0()); }
		ruleBindings
		{ after(grammarAccess.getRequestStatementAccess().getBindingsBindingsParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestStatement__CastAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequestStatementAccess().getCastIDTerminalRuleCall_7_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRequestStatementAccess().getCastIDTerminalRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestStatement__MappingAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequestStatementAccess().getMappingMappingParserRuleCall_8_0()); }
		ruleMapping
		{ after(grammarAccess.getRequestStatementAccess().getMappingMappingParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestStatement__HandlerAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequestStatementAccess().getHandlerHandlerParserRuleCall_9_0()); }
		ruleHandler
		{ after(grammarAccess.getRequestStatementAccess().getHandlerHandlerParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatUntilStatement__RepeatAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRepeatUntilStatementAccess().getRepeatRepeatParserRuleCall_0_0()); }
		ruleRepeat
		{ after(grammarAccess.getRepeatUntilStatementAccess().getRepeatRepeatParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatUntilStatement__UntilAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRepeatUntilStatementAccess().getUntilUntilParserRuleCall_1_0()); }
		ruleUntil
		{ after(grammarAccess.getRepeatUntilStatementAccess().getUntilUntilParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UntilRepeatStatement__UntilAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUntilRepeatStatementAccess().getUntilUntilParserRuleCall_0_0()); }
		ruleUntil
		{ after(grammarAccess.getUntilRepeatStatementAccess().getUntilUntilParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UntilRepeatStatement__BlockAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUntilRepeatStatementAccess().getBlockBlockParserRuleCall_1_0()); }
		ruleBlock
		{ after(grammarAccess.getUntilRepeatStatementAccess().getBlockBlockParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileDoStatement__WhileAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileDoStatementAccess().getWhileWhileParserRuleCall_0_0()); }
		ruleWhile
		{ after(grammarAccess.getWhileDoStatementAccess().getWhileWhileParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileDoStatement__BlockAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileDoStatementAccess().getBlockBlockParserRuleCall_1_0()); }
		ruleBlock
		{ after(grammarAccess.getWhileDoStatementAccess().getBlockBlockParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileStatement__BlockAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDoWhileStatementAccess().getBlockBlockParserRuleCall_1_0()); }
		ruleBlock
		{ after(grammarAccess.getDoWhileStatementAccess().getBlockBlockParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileStatement__WhileAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDoWhileStatementAccess().getWhileWhileParserRuleCall_2_0()); }
		ruleWhile
		{ after(grammarAccess.getDoWhileStatementAccess().getWhileWhileParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__BlockAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRepeatAccess().getBlockBlockParserRuleCall_1_0()); }
		ruleBlock
		{ after(grammarAccess.getRepeatAccess().getBlockBlockParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RewardStatement__RewardAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRewardStatementAccess().getRewardNUMERICParserRuleCall_1_0()); }
		ruleNUMERIC
		{ after(grammarAccess.getRewardStatementAccess().getRewardNUMERICParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Until__BindingsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUntilAccess().getBindingsBindingsParserRuleCall_2_0()); }
		ruleBindings
		{ after(grammarAccess.getUntilAccess().getBindingsBindingsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__BindingsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileAccess().getBindingsBindingsParserRuleCall_2_0()); }
		ruleBindings
		{ after(grammarAccess.getWhileAccess().getBindingsBindingsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchStatement__CasesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchStatementAccess().getCasesCaseStatementParserRuleCall_2_0()); }
		ruleCaseStatement
		{ after(grammarAccess.getMatchStatementAccess().getCasesCaseStatementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchStatement__CasesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchStatementAccess().getCasesCaseStatementParserRuleCall_3_0()); }
		ruleCaseStatement
		{ after(grammarAccess.getMatchStatementAccess().getCasesCaseStatementParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchStatement__DefaultBlockAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchStatementAccess().getDefaultBlockBlockParserRuleCall_6_0()); }
		ruleBlock
		{ after(grammarAccess.getMatchStatementAccess().getDefaultBlockBlockParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__BindingsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaseStatementAccess().getBindingsBindingsParserRuleCall_1_0()); }
		ruleBindings
		{ after(grammarAccess.getCaseStatementAccess().getBindingsBindingsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__PriorityAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaseStatementAccess().getPriorityNUMERICParserRuleCall_2_1_0()); }
		ruleNUMERIC
		{ after(grammarAccess.getCaseStatementAccess().getPriorityNUMERICParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__BlockAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaseStatementAccess().getBlockBlockParserRuleCall_4_0()); }
		ruleBlock
		{ after(grammarAccess.getCaseStatementAccess().getBlockBlockParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputStatement__StringAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputStatementAccess().getStringSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getOutputStatementAccess().getStringSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputStatement__BindingsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputStatementAccess().getBindingsBindingsParserRuleCall_3_1_0()); }
		ruleBindings
		{ after(grammarAccess.getOutputStatementAccess().getBindingsBindingsParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopStatement__ForcedAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForLoopStatementAccess().getForcedForceKeyword_0_0()); }
		(
			{ before(grammarAccess.getForLoopStatementAccess().getForcedForceKeyword_0_0()); }
			'force'
			{ after(grammarAccess.getForLoopStatementAccess().getForcedForceKeyword_0_0()); }
		)
		{ after(grammarAccess.getForLoopStatementAccess().getForcedForceKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopStatement__ForBufferAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForLoopStatementAccess().getForBufferBufferCrossReference_3_0()); }
		(
			{ before(grammarAccess.getForLoopStatementAccess().getForBufferBufferIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getForLoopStatementAccess().getForBufferBufferIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getForLoopStatementAccess().getForBufferBufferCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopStatement__InitialAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForLoopStatementAccess().getInitialPatternCrossReference_5_0()); }
		(
			{ before(grammarAccess.getForLoopStatementAccess().getInitialPatternIDTerminalRuleCall_5_0_1()); }
			RULE_ID
			{ after(grammarAccess.getForLoopStatementAccess().getInitialPatternIDTerminalRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getForLoopStatementAccess().getInitialPatternCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopStatement__InitialBindingsAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForLoopStatementAccess().getInitialBindingsBindingsParserRuleCall_7_0()); }
		ruleBindings
		{ after(grammarAccess.getForLoopStatementAccess().getInitialBindingsBindingsParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopStatement__SubsequentAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForLoopStatementAccess().getSubsequentPatternCrossReference_9_0()); }
		(
			{ before(grammarAccess.getForLoopStatementAccess().getSubsequentPatternIDTerminalRuleCall_9_0_1()); }
			RULE_ID
			{ after(grammarAccess.getForLoopStatementAccess().getSubsequentPatternIDTerminalRuleCall_9_0_1()); }
		)
		{ after(grammarAccess.getForLoopStatementAccess().getSubsequentPatternCrossReference_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopStatement__SubsequentBindingsAssignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForLoopStatementAccess().getSubsequentBindingsBindingsParserRuleCall_11_0()); }
		ruleBindings
		{ after(grammarAccess.getForLoopStatementAccess().getSubsequentBindingsBindingsParserRuleCall_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopStatement__BlockAssignment_13
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForLoopStatementAccess().getBlockBlockParserRuleCall_13_0()); }
		ruleBlock
		{ after(grammarAccess.getForLoopStatementAccess().getBlockBlockParserRuleCall_13_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseStatement__BindingsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfThenElseStatementAccess().getBindingsBindingsParserRuleCall_2_0()); }
		ruleBindings
		{ after(grammarAccess.getIfThenElseStatementAccess().getBindingsBindingsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseStatement__ThenBlockAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfThenElseStatementAccess().getThenBlockBlockParserRuleCall_4_0()); }
		ruleBlock
		{ after(grammarAccess.getIfThenElseStatementAccess().getThenBlockBlockParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElseStatement__ElseBlockAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfThenElseStatementAccess().getElseBlockBlockParserRuleCall_5_1_0()); }
		ruleBlock
		{ after(grammarAccess.getIfThenElseStatementAccess().getElseBlockBlockParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bindings__BindingsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBindingsAccess().getBindingsBufferPatternParserRuleCall_0_0()); }
		ruleBufferPattern
		{ after(grammarAccess.getBindingsAccess().getBindingsBufferPatternParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bindings__BindingsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBindingsAccess().getBindingsBufferPatternParserRuleCall_1_1_0()); }
		ruleBufferPattern
		{ after(grammarAccess.getBindingsAccess().getBindingsBufferPatternParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BufferPattern__BufferAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBufferPatternAccess().getBufferBufferCrossReference_0_0()); }
		(
			{ before(grammarAccess.getBufferPatternAccess().getBufferBufferIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getBufferPatternAccess().getBufferBufferIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getBufferPatternAccess().getBufferBufferCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BufferPattern__PatternAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBufferPatternAccess().getPatternPatternCrossReference_2_0()); }
		(
			{ before(grammarAccess.getBufferPatternAccess().getPatternPatternIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getBufferPatternAccess().getPatternPatternIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getBufferPatternAccess().getPatternPatternCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__AssignmentsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingAccess().getAssignmentsAssignmentStatementParserRuleCall_2_0()); }
		ruleAssignmentStatement
		{ after(grammarAccess.getMappingAccess().getAssignmentsAssignmentStatementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Handler__BlockAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHandlerAccess().getBlockBlockParserRuleCall_2_0()); }
		ruleBlock
		{ after(grammarAccess.getHandlerAccess().getBlockBlockParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageDeclarationAccess().getNameQualifiedNameParserRuleCall_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getPackageDeclarationAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__ImportsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageDeclarationAccess().getImportsImportParserRuleCall_3_0()); }
		ruleImport
		{ after(grammarAccess.getPackageDeclarationAccess().getImportsImportParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__ModulesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageDeclarationAccess().getModulesModelModuleParserRuleCall_4_0()); }
		ruleModelModule
		{ after(grammarAccess.getPackageDeclarationAccess().getModulesModelModuleParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__ExtensionsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageDeclarationAccess().getExtensionsModelExtensionParserRuleCall_5_0()); }
		ruleModelExtension
		{ after(grammarAccess.getPackageDeclarationAccess().getExtensionsModelExtensionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__BuffersAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageDeclarationAccess().getBuffersBuffersParserRuleCall_6_0()); }
		ruleBuffers
		{ after(grammarAccess.getPackageDeclarationAccess().getBuffersBuffersParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__ElementsAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageDeclarationAccess().getElementsElementParserRuleCall_7_0()); }
		ruleElement
		{ after(grammarAccess.getPackageDeclarationAccess().getElementsElementParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__ParametersAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageDeclarationAccess().getParametersParametersBlockParserRuleCall_9_0()); }
		ruleParametersBlock
		{ after(grammarAccess.getPackageDeclarationAccess().getParametersParametersBlockParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportedNamespaceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
		ruleQualifiedNameWithWildcard
		{ after(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelModule__ModuleClassAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelModuleAccess().getModuleClassSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getModelModuleAccess().getModuleClassSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelModule__ParametersAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelModuleAccess().getParametersParametersBlockParserRuleCall_2_0()); }
		ruleParametersBlock
		{ after(grammarAccess.getModelModuleAccess().getParametersParametersBlockParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelExtension__ExtensionClassAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelExtensionAccess().getExtensionClassSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getModelExtensionAccess().getExtensionClassSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelExtension__ParametersAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelExtensionAccess().getParametersParametersBlockParserRuleCall_2_0()); }
		ruleParametersBlock
		{ after(grammarAccess.getModelExtensionAccess().getParametersParametersBlockParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__ElementsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParametersAccess().getElementsIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getParametersAccess().getElementsIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__ElementsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParametersAccess().getElementsIDTerminalRuleCall_3_1_0()); }
		RULE_ID
		{ after(grammarAccess.getParametersAccess().getElementsIDTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__ParametersAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParametersAccess().getParametersParametersBlockParserRuleCall_5_0()); }
		ruleParametersBlock
		{ after(grammarAccess.getParametersAccess().getParametersParametersBlockParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chunks__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChunksAccess().getTypeChunkTypeCrossReference_0_0()); }
		(
			{ before(grammarAccess.getChunksAccess().getTypeChunkTypeQualifiedNameParserRuleCall_0_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getChunksAccess().getTypeChunkTypeQualifiedNameParserRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getChunksAccess().getTypeChunkTypeCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chunks__ChunksAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChunksAccess().getChunksChunkDefParserRuleCall_1_0()); }
		ruleChunkDef
		{ after(grammarAccess.getChunksAccess().getChunksChunkDefParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chunks__ChunksAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChunksAccess().getChunksChunkDefParserRuleCall_2_1_0()); }
		ruleChunkDef
		{ after(grammarAccess.getChunksAccess().getChunksChunkDefParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkDef__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChunkDefAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getChunkDefAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkDef__SlotsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChunkDefAccess().getSlotsSimpleSlotParserRuleCall_2_1_0()); }
		ruleSimpleSlot
		{ after(grammarAccess.getChunkDefAccess().getSlotsSimpleSlotParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkDef__SlotsAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChunkDefAccess().getSlotsSimpleSlotParserRuleCall_2_2_1_0()); }
		ruleSimpleSlot
		{ after(grammarAccess.getChunkDefAccess().getSlotsSimpleSlotParserRuleCall_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkDef__ParametersAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChunkDefAccess().getParametersParametersBlockParserRuleCall_3_0()); }
		ruleParametersBlock
		{ after(grammarAccess.getChunkDefAccess().getParametersParametersBlockParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkType__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChunkTypeAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getChunkTypeAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkType__SuperTypeAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChunkTypeAccess().getSuperTypeChunkTypeCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getChunkTypeAccess().getSuperTypeChunkTypeQualifiedNameParserRuleCall_3_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getChunkTypeAccess().getSuperTypeChunkTypeQualifiedNameParserRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getChunkTypeAccess().getSuperTypeChunkTypeCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkType__SlotsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChunkTypeAccess().getSlotsSimpleSlotParserRuleCall_5_0()); }
		ruleSimpleSlot
		{ after(grammarAccess.getChunkTypeAccess().getSlotsSimpleSlotParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkType__ParametersAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChunkTypeAccess().getParametersParametersBlockParserRuleCall_7_0()); }
		ruleParametersBlock
		{ after(grammarAccess.getChunkTypeAccess().getParametersParametersBlockParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Overridable__OverrideAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOverridableAccess().getOverrideOVERRIDEParserRuleCall_0()); }
		ruleOVERRIDE
		{ after(grammarAccess.getOverridableAccess().getOverrideOVERRIDEParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Buffers__BuffersAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBuffersAccess().getBuffersBufferParserRuleCall_3_0()); }
		ruleBuffer
		{ after(grammarAccess.getBuffersAccess().getBuffersBufferParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Buffer__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBufferAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getBufferAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Buffer__SourceAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBufferAccess().getSourceChunkDefCrossReference_3_0()); }
		(
			{ before(grammarAccess.getBufferAccess().getSourceChunkDefQualifiedNameParserRuleCall_3_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getBufferAccess().getSourceChunkDefQualifiedNameParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getBufferAccess().getSourceChunkDefCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Buffer__ParametersAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBufferAccess().getParametersParametersBlockParserRuleCall_5_0()); }
		ruleParametersBlock
		{ after(grammarAccess.getBufferAccess().getParametersParametersBlockParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Production__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProductionAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getProductionAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Production__ConditionsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProductionAccess().getConditionsProductionConditionParserRuleCall_4_0()); }
		ruleProductionCondition
		{ after(grammarAccess.getProductionAccess().getConditionsProductionConditionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Production__ActionsAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProductionAccess().getActionsProductionActionParserRuleCall_7_0()); }
		ruleProductionAction
		{ after(grammarAccess.getProductionAccess().getActionsProductionActionParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Production__ParametersAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProductionAccess().getParametersParametersBlockParserRuleCall_9_0()); }
		ruleParametersBlock
		{ after(grammarAccess.getProductionAccess().getParametersParametersBlockParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getNameBufferCrossReference_0_0()); }
		(
			{ before(grammarAccess.getMatchAccess().getNameBufferIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getMatchAccess().getNameBufferIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getMatchAccess().getNameBufferCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__IsaAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getIsaIsaBlockParserRuleCall_2_0()); }
		ruleIsaBlock
		{ after(grammarAccess.getMatchAccess().getIsaIsaBlockParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__SlotsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getSlotsComplexSlotParserRuleCall_3_0()); }
		ruleComplexSlot
		{ after(grammarAccess.getMatchAccess().getSlotsComplexSlotParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryAccess().getNameBufferCrossReference_1_0()); }
		(
			{ before(grammarAccess.getQueryAccess().getNameBufferIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getQueryAccess().getNameBufferIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getQueryAccess().getNameBufferCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__SlotsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryAccess().getSlotsComplexSlotParserRuleCall_3_0()); }
		ruleComplexSlot
		{ after(grammarAccess.getQueryAccess().getSlotsComplexSlotParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Proxy__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProxyAccess().getNameSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getProxyAccess().getNameSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Proxy__SlotsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProxyAccess().getSlotsSimpleSlotParserRuleCall_5_0()); }
		ruleSimpleSlot
		{ after(grammarAccess.getProxyAccess().getSlotsSimpleSlotParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Script__LanguageAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScriptAccess().getLanguageSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getScriptAccess().getLanguageSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Script__ScriptAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScriptAccess().getScriptCODETerminalRuleCall_4_0()); }
		RULE_CODE
		{ after(grammarAccess.getScriptAccess().getScriptCODETerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddAccess().getNameBufferCrossReference_1_0()); }
		(
			{ before(grammarAccess.getAddAccess().getNameBufferIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAddAccess().getNameBufferIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getAddAccess().getNameBufferCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__IsaAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddAccess().getIsaIsaBlockParserRuleCall_3_0()); }
		ruleIsaBlock
		{ after(grammarAccess.getAddAccess().getIsaIsaBlockParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__SlotsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddAccess().getSlotsConditionalSlotParserRuleCall_4_0()); }
		ruleConditionalSlot
		{ after(grammarAccess.getAddAccess().getSlotsConditionalSlotParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__StringAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputAccess().getStringSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getOutputAccess().getStringSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSlotBlock__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleSlotBlockAccess().getNameBufferCrossReference_0_0()); }
		(
			{ before(grammarAccess.getSimpleSlotBlockAccess().getNameBufferIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSimpleSlotBlockAccess().getNameBufferIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getSimpleSlotBlockAccess().getNameBufferCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSlotBlock__SlotsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleSlotBlockAccess().getSlotsSimpleSlotParserRuleCall_2_0()); }
		ruleSimpleSlot
		{ after(grammarAccess.getSimpleSlotBlockAccess().getSlotsSimpleSlotParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsaBlock__TypeAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIsaBlockAccess().getTypeChunkTypeCrossReference_0_1_0()); }
		(
			{ before(grammarAccess.getIsaBlockAccess().getTypeChunkTypeQualifiedNameParserRuleCall_0_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getIsaBlockAccess().getTypeChunkTypeQualifiedNameParserRuleCall_0_1_0_1()); }
		)
		{ after(grammarAccess.getIsaBlockAccess().getTypeChunkTypeCrossReference_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsaBlock__ChunkAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIsaBlockAccess().getChunkChunkDefCrossReference_1_0()); }
		(
			{ before(grammarAccess.getIsaBlockAccess().getChunkChunkDefQualifiedNameParserRuleCall_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getIsaBlockAccess().getChunkChunkDefQualifiedNameParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getIsaBlockAccess().getChunkChunkDefCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsaBlock__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIsaBlockAccess().getNameVARIABLEParserRuleCall_2_0()); }
		ruleVARIABLE
		{ after(grammarAccess.getIsaBlockAccess().getNameVARIABLEParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSlot__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleSlotAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getSimpleSlotAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSlot__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleSlotAccess().getValueValueParserRuleCall_2_0()); }
		ruleValue
		{ after(grammarAccess.getSimpleSlotAccess().getValueValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalSlot__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalSlotAccess().getNameAlternatives_0_0()); }
		(rule__ConditionalSlot__NameAlternatives_0_0)
		{ after(grammarAccess.getConditionalSlotAccess().getNameAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalSlot__ConditionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalSlotAccess().getConditionConditionEnumRuleCall_1_0()); }
		ruleCondition
		{ after(grammarAccess.getConditionalSlotAccess().getConditionConditionEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalSlot__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalSlotAccess().getValueValueParserRuleCall_2_0()); }
		ruleValue
		{ after(grammarAccess.getConditionalSlotAccess().getValueValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrSlot__SlotsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrSlotAccess().getSlotsComplexSlotParserRuleCall_3_0()); }
		ruleComplexSlot
		{ after(grammarAccess.getOrSlotAccess().getSlotsComplexSlotParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndSlot__SlotsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndSlotAccess().getSlotsComplexSlotParserRuleCall_3_0()); }
		ruleComplexSlot
		{ after(grammarAccess.getAndSlotAccess().getSlotsComplexSlotParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotSlot__SlotsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNotSlotAccess().getSlotsComplexSlotParserRuleCall_3_0()); }
		ruleComplexSlot
		{ after(grammarAccess.getNotSlotAccess().getSlotsComplexSlotParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getNameSTRINGTerminalRuleCall_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getParameterAccess().getNameSTRINGTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getValueValueParserRuleCall_2_0()); }
		ruleValue
		{ after(grammarAccess.getParameterAccess().getValueValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametersBlock__ParameterAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParametersBlockAccess().getParameterParameterParserRuleCall_2_0()); }
		ruleParameter
		{ after(grammarAccess.getParametersBlockAccess().getParameterParameterParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__NameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getNameAlternatives_0_1_0()); }
		(rule__Value__NameAlternatives_0_1_0)
		{ after(grammarAccess.getValueAccess().getNameAlternatives_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__StringAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getStringSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getValueAccess().getStringSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__NumberAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getNumberNUMERICParserRuleCall_2_0()); }
		ruleNUMERIC
		{ after(grammarAccess.getValueAccess().getNumberNUMERICParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__BooleanAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getBooleanBOOLEANParserRuleCall_3_0()); }
		ruleBOOLEAN
		{ after(grammarAccess.getValueAccess().getBooleanBOOLEANParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|':') ('a'..'z'|'A'..'Z'|'0'..'9'|'-'|'_')* ('a'..'z'|'A'..'Z'|'0'..'9');

RULE_DIGITS : ('0'..'9')+;

RULE_CODE : '<[[' ( options {greedy=false;} : . )*']]>';

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
